import { r, a as ha, R as Xe } from "./vendor-CNgIIX2D.js";
import { c as ga } from "./supabase-tr8Ji8JP.js";
import {
  L as pa,
  E as ba,
  a as pt,
  A as Be,
  b as Cs,
  B as ct,
  C as us,
  X as ze,
  S as fa,
  c as Ie,
  U as is,
  D as Oe,
  d as Qe,
  e as _t,
  M as ja,
  f as Vs,
  F as fs,
  P as bs,
  g as Mt,
  h as Fe,
  i as va,
  j as Js,
  k as Le,
  l as ut,
  R as Qs,
  m as zt,
  T as ya,
  n as _s,
  o as hs,
  p as Ks,
  q as Na,
  I as zs,
  r as Ns,
  s as js,
  t as wa,
  u as Me,
  v as Is,
  w as rs,
  x as ks,
  y as ws,
  z as Ds,
  G as Ca,
  H as Sa,
  J as _a,
  K as $s,
  N as Os,
  O as kt,
  Q as It,
  V as As,
  W as Us,
  Y as Hs,
  Z as dt,
  _ as mt,
  $ as Ge,
  a0 as Es,
  a1 as xt,
  a2 as ka,
  a3 as Dt,
  a4 as Ss,
  a5 as Ps,
  a6 as At,
  a7 as Vt,
} from "./ui-BlzhKqeD.js";
(function () {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) h(i);
  new MutationObserver((i) => {
    for (const D of i)
      if (D.type === "childList")
        for (const E of D.addedNodes)
          E.tagName === "LINK" && E.rel === "modulepreload" && h(E);
  }).observe(document, { childList: !0, subtree: !0 });
  function x(i) {
    const D = {};
    return (
      i.integrity && (D.integrity = i.integrity),
      i.referrerPolicy && (D.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === "use-credentials"
        ? (D.credentials = "include")
        : i.crossOrigin === "anonymous"
          ? (D.credentials = "omit")
          : (D.credentials = "same-origin"),
      D
    );
  }
  function h(i) {
    if (i.ep) return;
    i.ep = !0;
    const D = x(i);
    fetch(i.href, D);
  }
})();
var Ot = { exports: {} },
  Ys = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Da = r,
  Aa = Symbol.for("react.element"),
  Va = Symbol.for("react.fragment"),
  $a = Object.prototype.hasOwnProperty,
  Ra = Da.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  Ta = { key: !0, ref: !0, __self: !0, __source: !0 };
function Ft(s, t, x) {
  var h,
    i = {},
    D = null,
    E = null;
  (x !== void 0 && (D = "" + x),
    t.key !== void 0 && (D = "" + t.key),
    t.ref !== void 0 && (E = t.ref));
  for (h in t) $a.call(t, h) && !Ta.hasOwnProperty(h) && (i[h] = t[h]);
  if (s && s.defaultProps)
    for (h in ((t = s.defaultProps), t)) i[h] === void 0 && (i[h] = t[h]);
  return {
    $$typeof: Aa,
    type: s,
    key: D,
    ref: E,
    props: i,
    _owner: Ra.current,
  };
}
Ys.Fragment = Va;
Ys.jsx = Ft;
Ys.jsxs = Ft;
Ot.exports = Ys;
var e = Ot.exports,
  Lt,
  $t = ha;
((Lt = $t.createRoot), $t.hydrateRoot);
const Ea = () => ({
    url: "https://rseiuknbwhmfjaiiywkj.supabase.co",
    anonKey:
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJzZWl1a25id2htZmphaWl5d2tqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAxODE5NTksImV4cCI6MjA2NTc1Nzk1OX0.52gF5pQq9HxD2fS893KHCjx1JfREx7HBAWyLA8LpbSE",
  }),
  Gs = Ea();
try {
  new URL(Gs.url);
} catch {
  throw new Error(`Formato inválido da URL do Supabase: "${Gs.url}"`);
}
const De = ga(Gs.url, Gs.anonKey, {
  auth: { autoRefreshToken: !1, persistSession: !1, detectSessionInUrl: !1 },
});
De.from("users")
  .select("count", { count: "exact", head: !0 })
  .then(({ error: s }) => {
    s && console.error("Erro de conectividade com o banco de dados");
  });
const qt = r.createContext(void 0),
  Zs = () => {
    const s = r.useContext(qt);
    if (s === void 0)
      throw new Error("useLoading must be used within a LoadingProvider");
    return s;
  },
  Bt = ({ children: s }) => {
    const [t, x] = r.useState(!1),
      [h, i] = r.useState("Carregando..."),
      D = (F, C = "Carregando...") => {
        (x(F), i(C));
      },
      O = {
        isLoading: t,
        loadingMessage: h,
        setLoading: D,
        withLoading: async (F, C = "Carregando...") => {
          D(!0, C);
          try {
            return await F;
          } catch (V) {
            throw V;
          } finally {
            D(!1);
          }
        },
      };
    return e.jsx(qt.Provider, { value: O, children: s });
  },
  Ut = r.createContext(void 0),
  ts = () => {
    const s = r.useContext(Ut);
    if (s === void 0)
      throw new Error("useAuth must be used within an AuthProvider");
    return s;
  },
  Pa = ({ children: s }) => {
    const [t, x] = r.useState(null),
      [h, i] = r.useState(!0),
      [D, E] = r.useState(null),
      [O, F] = r.useState(!1),
      { withLoading: C } = Zs(),
      V = () => {
        E(null);
      },
      U = 15 * 60 * 1e3;
    let A;
    const Q = () => {
      (A && clearTimeout(A),
        t &&
          (A = setTimeout(() => {
            F(!0);
          }, U)));
    };
    (r.useEffect(() => {
      (async () => {
        try {
          (i(!0), await new Promise((v) => setTimeout(v, 800)));
          const {
            data: { session: p },
            error: I,
          } = await De.auth.getSession();
          if (I) {
            (console.error("Erro ao verificar sessão do Supabase:", I),
              sessionStorage.removeItem("sistema_user"));
            return;
          }
          if (p) {
            console.log(
              "Sessão do Supabase encontrada, recuperando dados do usuário...",
            );
            const { data: v, error: j } = await De.from("users")
              .select("*")
              .eq("login", p.user.email)
              .limit(1);
            if (!j && v && v.length > 0) {
              const z = v[0],
                N = {
                  id: z.id,
                  name: z.name,
                  login: z.login,
                  password: z.password,
                  type: z.type,
                  createdAt: z.created_at || new Date().toISOString(),
                };
              (sessionStorage.setItem("sistema_user", JSON.stringify(N)),
                x(N),
                console.log("Usuário recuperado da sessão:", N));
            }
          } else {
            const v = sessionStorage.getItem("sistema_user");
            if (v) {
              const j = JSON.parse(v);
              x(j);
            }
          }
        } catch (p) {
          (console.error("Error checking session:", p),
            sessionStorage.removeItem("sistema_user"));
        } finally {
          i(!1);
        }
      })();
      const {
        data: { subscription: T },
      } = De.auth.onAuthStateChange(async (p, I) => {
        (console.log("Auth state changed:", p, I),
          (p === "SIGNED_OUT" || p === "TOKEN_REFRESHED") &&
            p === "SIGNED_OUT" &&
            (sessionStorage.removeItem("sistema_user"), x(null)));
      });
      return () => {
        T.unsubscribe();
      };
    }, []),
      r.useEffect(() => {
        if (t) {
          const W = ["mousedown", "keypress", "scroll", "touchstart", "click"],
            T = () => {
              Q();
            };
          return (
            W.forEach((p) => {
              document.addEventListener(p, T);
            }),
            Q(),
            () => {
              (W.forEach((p) => {
                document.removeEventListener(p, T);
              }),
                A && clearTimeout(A));
            }
          );
        }
      }, [t]));
    const ee = async (W, T) => {
        try {
          (V(), console.log("Tentando fazer login com:", { login: W }));
          const I = await C(
            (async () => {
              const { data: v, error: j } = await De.from("users")
                .select("*")
                .eq("login", W)
                .eq("password", T)
                .limit(1);
              if (
                (console.log("Resultado da consulta:", {
                  users: v,
                  userError: j,
                }),
                j)
              )
                throw (
                  console.error("Erro ao consultar usuários:", j),
                  new Error("Erro ao consultar banco de dados")
                );
              if (!v || v.length === 0)
                return (
                  console.log("Usuário não encontrado com essas credenciais"),
                  E("Login ou senha incorretos. Verifique suas credenciais."),
                  !1
                );
              const z = v[0];
              console.log("Usuário encontrado:", z);
              try {
                const { error: H } = await De.auth.signInWithPassword({
                  email: z.login,
                  password: T,
                });
                H
                  ? console.log("Erro ao criar sessão no Supabase:", H)
                  : console.log("Sessão criada no Supabase com sucesso");
              } catch (H) {
                console.log(
                  "Falha ao criar sessão no Supabase, continuando com sessionStorage:",
                  H,
                );
              }
              const N = {
                id: z.id,
                name: z.name,
                login: z.login,
                password: z.password,
                type: z.type,
                createdAt: z.created_at || new Date().toISOString(),
              };
              return (
                sessionStorage.setItem("sistema_user", JSON.stringify(N)),
                console.log("Login realizado com sucesso:", N),
                x(N),
                !0
              );
            })(),
            "Fazendo login...",
          );
          return (console.log("Resultado final do login:", I), I);
        } catch (p) {
          return (console.error("Erro no login:", p), !1);
        }
      },
      Y = async () => {
        try {
          await C(
            (async () => {
              try {
                const { error: W } = await De.auth.signOut();
                W && console.error("Erro ao fazer logout do Supabase:", W);
              } catch (W) {
                console.error("Falha ao fazer logout do Supabase:", W);
              }
              (sessionStorage.removeItem("sistema_user"),
                x(null),
                A && clearTimeout(A));
            })(),
            "Saindo...",
          );
        } catch (W) {
          (console.error("Erro no logout:", W), x(null));
        }
      },
      G = () => {
        (F(!1), Y());
      },
      L = {
        user: t,
        login: ee,
        logout: Y,
        isLoading: h,
        error: D,
        clearError: V,
      };
    return e.jsxs(Ut.Provider, {
      value: L,
      children: [
        s,
        O &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center",
            children: e.jsx("div", {
              className:
                "bg-white rounded-lg p-6 max-w-md w-full mx-4 shadow-xl",
              children: e.jsxs("div", {
                className: "text-center",
                children: [
                  e.jsx("div", {
                    className: "mb-4",
                    children: e.jsx("div", {
                      className:
                        "mx-auto flex items-center justify-center w-12 h-12 rounded-full bg-red-100",
                      children: e.jsx("svg", {
                        className: "w-6 h-6 text-red-600",
                        fill: "none",
                        stroke: "currentColor",
                        viewBox: "0 0 24 24",
                        children: e.jsx("path", {
                          strokeLinecap: "round",
                          strokeLinejoin: "round",
                          strokeWidth: "2",
                          d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z",
                        }),
                      }),
                    }),
                  }),
                  e.jsx("h3", {
                    className: "text-lg font-medium text-gray-900 mb-2",
                    children: "Sessão Expirada",
                  }),
                  e.jsx("p", {
                    className: "text-sm text-gray-500 mb-6",
                    children:
                      "Sua sessão expirou devido à inatividade. Você será redirecionado para a tela de login.",
                  }),
                  e.jsx("button", {
                    onClick: G,
                    className:
                      "w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2",
                    children: "Entendi",
                  }),
                ],
              }),
            }),
          }),
      ],
    });
  },
  Ht = r.createContext(void 0),
  Je = () => {
    const s = r.useContext(Ht);
    if (s === void 0)
      throw new Error("useCollection must be used within a CollectionProvider");
    return s;
  },
  Ma = ({ children: s }) => {
    const { user: t } = ts(),
      { setLoading: x } = Zs(),
      [h, i] = r.useState([]),
      [D, E] = r.useState([]),
      [O, F] = r.useState([]),
      [C, V] = r.useState([]),
      [U, A] = r.useState([]),
      [Q, ee] = r.useState(!0),
      [Y, G] = r.useState(null),
      L = async () => {
        try {
          (console.log("Atualizando collections em tempo real..."), await W());
        } catch (l) {
          console.error("Erro ao atualizar collections:", l);
        }
      };
    r.useEffect(() => {
      let l = null;
      if (t) {
        (console.log("Usuário logado, carregando dados..."),
          x(!0, "Carregando dados do sistema..."));
        const n = async () => {
            try {
              (await Promise.all([T(), p(), we(), Ve()]), await W());
            } catch (a) {
              (console.error("Erro ao carregar dados iniciais:", a),
                G("Erro ao carregar dados iniciais. Tente novamente."));
            }
          },
          d = setTimeout(() => {
            (console.warn(
              "Tempo limite excedido ao carregar dados. Liberando o estado de carregamento.",
            ),
              x(!1),
              ee(!1));
          }, 2e4);
        (n()
          .catch((a) => {
            (console.error("Erro ao carregar dados:", a),
              G("Erro ao carregar dados. Tente novamente."));
          })
          .finally(() => {
            (clearTimeout(d), x(!1), ee(!1));
          }),
          console.log("Configurando listeners em tempo real..."),
          (l = De.channel("database_changes")
            .on(
              "postgres_changes",
              { event: "*", schema: "public", table: "BANCO_DADOS" },
              (a) => {
                (console.log("Mudança detectada na tabela BANCO_DADOS:", a),
                  L());
              },
            )
            .on(
              "postgres_changes",
              { event: "*", schema: "public", table: "sale_payments" },
              (a) => {
                (console.log("Mudança detectada na tabela sale_payments:", a),
                  we());
              },
            )
            .subscribe((a) => {
              console.log("Status da conexão em tempo real:", a);
            })));
      } else
        (console.log("Usuário não logado, limpando dados..."),
          i([]),
          E([]),
          F([]),
          V([]),
          A([]),
          ee(!1),
          x(!1));
      return () => {
        l &&
          (console.log("Removendo listener em tempo real..."),
          De.removeChannel(l));
      };
    }, [t]);
    const W = async () => {
        try {
          (G(null), console.log("Buscando dados da tabela BANCO_DADOS..."));
          let l = De.from("BANCO_DADOS").select("*");
          if ((t == null ? void 0 : t.type) === "collector") {
            const o = xe(t.id);
            (console.log(
              `Cobrador ${t.name} (${t.id}) tem lojas atribuídas:`,
              o,
            ),
              (l = l.or(
                `user_id.eq.${t.id},nome_da_loja.in.(${o.join(",")})`,
              )));
          }
          let n = [],
            d = 0;
          const a = 1e3;
          let f = !0;
          for (; f; ) {
            console.log(`Carregando registros ${d} a ${d + a - 1}...`);
            const { data: o, error: b } = await l
              .range(d, d + a - 1)
              .order("id_parcela", { ascending: !0 });
            if (b) throw (console.error("Erro ao carregar página:", b), b);
            o && o.length > 0
              ? ((n = n.concat(o)),
                console.log(
                  `Carregados ${o.length} registros. Total acumulado: ${n.length}`,
                ),
                o.length < a ? (f = !1) : (d += a))
              : (f = !1);
          }
          console.log("TOTAL FINAL de registros carregados:", n.length);
          const $ = n;
          if (!$ || $.length === 0) {
            (console.warn("Nenhum dado retornado do Supabase"), i([]));
            return;
          }
          console.log("Dados carregados:", $.length, "registros");
          const te = new Set();
          ($.forEach((o) => {
            o.documento &&
              o.documento.trim() !== "" &&
              te.add(o.documento.trim());
          }),
            console.log("Clientes únicos nos dados carregados:", te.size),
            console.log(
              "Primeiros 10 documentos:",
              Array.from(te).slice(0, 10),
            ));
          const g = $.slice(0, 5).map((o) => ({
            data_vencimento: o.data_vencimento,
            data_lancamento: o.data_lancamento,
            data_de_recebimento: o.data_de_recebimento,
          }));
          console.log("Amostras de datas:", g);
          const u = ($ || []).map((o) => ({
            id_parcela: o.id_parcela,
            nome_da_loja: o.nome_da_loja,
            data_lancamento: o.data_lancamento,
            data_vencimento: o.data_vencimento,
            valor_original: parseFloat(
              (o.valor_original || "0").toString().replace(",", "."),
            ),
            valor_reajustado: parseFloat(
              (o.valor_reajustado || "0").toString().replace(",", "."),
            ),
            multa: parseFloat((o.multa || "0").toString().replace(",", ".")),
            juros_por_dia: parseFloat(
              (o.juros_por_dia || "0").toString().replace(",", "."),
            ),
            multa_aplicada: parseFloat(
              (o.multa_aplicada || "0").toString().replace(",", "."),
            ),
            juros_aplicado: parseFloat(
              (o.juros_aplicado || "0").toString().replace(",", "."),
            ),
            valor_recebido: parseFloat(
              (o.valor_recebido || "0").toString().replace(",", "."),
            ),
            data_de_recebimento: o.data_de_recebimento,
            dias_em_atraso: o.dias_em_atraso,
            dias_carencia: parseFloat(o.dias_carencia || "0"),
            desconto: parseFloat(
              (o.desconto || "0").toString().replace(",", "."),
            ),
            acrescimo: parseFloat(
              (o.acrescimo || "0").toString().replace(",", "."),
            ),
            multa_paga: parseFloat(
              (o.multa_paga || "0").toString().replace(",", "."),
            ),
            juros_pago: parseFloat(
              (o.juros_pago || "0").toString().replace(",", "."),
            ),
            tipo_de_cobranca: o.tipo_de_cobranca,
            numero_titulo: o.numero_titulo,
            parcela: o.parcela,
            status: o.status,
            cliente: o.cliente,
            documento: o.documento,
            endereco: o.endereco,
            numero: o.numero,
            bairro: o.bairro,
            complemento: o.complemento,
            cep: o.cep,
            cidade: o.cidade,
            estado: o.estado,
            obs: o.obs,
            codigo_externo: o.codigo_externo,
            descricao: o.descricao,
            venda_n: o.venda_n,
            convenio: o.convenio,
            telefone: o.telefone,
            celular: o.celular,
            celular1: o.celular1,
            celular2: o.celular2,
            email: o.email,
            user_id: o.user_id,
            data_visita_agendada: o.data_visita_agendada,
            data_visita_realizada: o.data_visita_realizada,
            data_recebimento: o.data_recebimento,
            updated_at: o.updated_at,
          }));
          (i(u), console.log("Collections carregadas:", u.length));
        } catch (l) {
          (console.error("Erro ao carregar collections:", l),
            G(l instanceof Error ? l.message : "Erro ao carregar dados"));
        } finally {
          ee(!1);
        }
      },
      T = async () => {
        try {
          console.log("Buscando usuários...");
          const { data: l, error: n } = await De.from("users")
            .select("*")
            .order("name", { ascending: !0 });
          if (n) throw (console.error("Erro ao buscar usuários:", n), n);
          const d = (l || []).map((a) => ({
            id: a.id,
            name: a.name,
            login: a.login,
            password: a.password,
            type: a.type,
            createdAt: a.created_at || new Date().toISOString(),
          }));
          (E(d), console.log("Usuários carregados:", d.length));
        } catch (l) {
          console.error("Erro ao carregar usuários:", l);
        }
      },
      p = async () => {
        try {
          console.log("Buscando atribuições de lojas...");
          const { data: l, error: n } = await De.from("collector_stores")
            .select("*")
            .order("created_at", { ascending: !0 });
          if (n)
            throw (console.error("Erro ao buscar collector_stores:", n), n);
          const d = (l || []).map((a) => ({
            id: a.id,
            collectorId: a.collector_id,
            storeName: a.store_name,
            createdAt: a.created_at || new Date().toISOString(),
          }));
          (F(d), console.log("Atribuições de lojas carregadas:", d.length));
        } catch (l) {
          console.error("Erro ao carregar collector stores:", l);
        }
      },
      I = async (l, n) => {
        try {
          const d = {};
          (n.status !== void 0 && (d.status = n.status),
            n.valor_recebido !== void 0 &&
              (d.valor_recebido = n.valor_recebido.toString()),
            n.data_de_recebimento !== void 0 &&
              (d.data_de_recebimento = n.data_de_recebimento),
            n.obs !== void 0 && (d.obs = n.obs),
            n.user_id !== void 0 && (d.user_id = n.user_id));
          const { error: a } = await De.from("BANCO_DADOS")
            .update(d)
            .eq("id_parcela", l);
          if (a) throw a;
          (i((f) => f.map(($) => ($.id_parcela === l ? { ...$, ...n } : $))),
            console.log("Collection atualizada:", l, n));
        } catch (d) {
          (console.error("Erro ao atualizar collection:", d),
            G(d instanceof Error ? d.message : "Erro ao atualizar cobrança"));
        }
      },
      v = async (l, n) => {
        try {
          if (
            (console.log("Atribuindo loja ao cobrador:", {
              collectorId: l,
              storeName: n,
            }),
            O.find((f) => f.collectorId === l && f.storeName === n))
          ) {
            (console.log("Atribuição já existe"),
              G("Esta loja já está atribuída a este cobrador"));
            return;
          }
          const { error: a } = await De.from("collector_stores")
            .insert({ collector_id: l, store_name: n })
            .select();
          if (a)
            throw (console.error("Erro do Supabase ao atribuir loja:", a), a);
          (await p(), console.log("Loja atribuída com sucesso"), G(null));
        } catch (d) {
          (console.error("Erro ao atribuir loja ao cobrador:", d),
            G(
              d instanceof Error
                ? d.message
                : "Erro ao atribuir loja ao cobrador",
            ));
        }
      },
      j = async (l, n) => {
        try {
          console.log("Removendo loja do cobrador:", {
            collectorId: l,
            storeName: n,
          });
          const { error: d } = await De.from("collector_stores")
            .delete()
            .eq("collector_id", l)
            .eq("store_name", n);
          if (d)
            throw (console.error("Erro do Supabase ao remover loja:", d), d);
          (await p(), console.log("Loja removida com sucesso"), G(null));
        } catch (d) {
          (console.error("Erro ao remover loja do cobrador:", d),
            G(
              d instanceof Error
                ? d.message
                : "Erro ao remover loja do cobrador",
            ));
        }
      },
      z = async (l, n) => {
        try {
          const { error: d } = await De.from("collection_attempts").insert({
            collection_id: l.toString(),
            date: n.date,
            type: n.type,
            result: n.result,
            notes: n.notes,
            next_action: n.nextAction,
            next_action_date: n.nextActionDate,
          });
          if (d) throw d;
          console.log("Tentativa adicionada para cobrança:", l, n);
        } catch (d) {
          (console.error("Erro ao adicionar tentativa:", d),
            G(d instanceof Error ? d.message : "Erro ao adicionar tentativa"));
        }
      },
      N = async (l) => {
        try {
          const { error: n } = await De.from("users").insert({
            name: l.name,
            login: l.login,
            password: l.password,
            type: l.type,
          });
          if (n) throw n;
          await T();
        } catch (n) {
          (console.error("Erro ao adicionar usuário:", n),
            G(n instanceof Error ? n.message : "Erro ao adicionar usuário"));
        }
      },
      H = async (l, n) => {
        try {
          const d = {};
          (n.name !== void 0 && (d.name = n.name),
            n.login !== void 0 && (d.login = n.login),
            n.password !== void 0 && (d.password = n.password),
            n.type !== void 0 && (d.type = n.type));
          const { error: a } = await De.from("users").update(d).eq("id", l);
          if (a) throw a;
          await T();
        } catch (d) {
          (console.error("Erro ao atualizar usuário:", d),
            G(d instanceof Error ? d.message : "Erro ao atualizar usuário"));
        }
      },
      w = async (l) => {
        try {
          const { error: n } = await De.from("users").delete().eq("id", l);
          if (n) throw n;
          await T();
        } catch (n) {
          (console.error("Erro ao deletar usuário:", n),
            G(n instanceof Error ? n.message : "Erro ao deletar usuário"));
        }
      },
      y = (l, n, d) => {
        var $, te, g;
        let a = h;
        if (n === "collector" && d) {
          const u = xe(d);
          a = a.filter(
            (o) => o.user_id === d || u.includes(o.nome_da_loja || ""),
          );
        }
        const f = (u) => {
          if (!u) return null;
          try {
            const o = u.trim();
            if (o.includes("/")) {
              const k = o.split("/");
              if (k.length === 3) {
                const [ue, me, ie] = k,
                  ve = parseInt(ue, 10),
                  $e = parseInt(me, 10),
                  Ue = parseInt(ie, 10);
                if (ve >= 1 && ve <= 31 && $e >= 1 && $e <= 12 && Ue >= 1900)
                  return new Date(Ue, $e - 1, ve);
              }
            }
            const b = new Date(o);
            return isNaN(b.getTime()) ? null : b;
          } catch {
            return null;
          }
        };
        if (l.overdueOnly) {
          const u = new Date();
          (u.setHours(0, 0, 0, 0),
            (a = a.filter((o) => {
              const b = f(o.data_vencimento || "");
              if (!b) return !1;
              b.setHours(0, 0, 0, 0);
              const k = b < u,
                ue = (o.valor_recebido || 0) < (o.valor_original || 0);
              return k && ue;
            })));
        }
        if (
          (l.highValueOnly &&
            (a = a.filter((u) => (u.valor_original || 0) > 1e3)),
          (l.minAmount !== void 0 && l.minAmount > 0) ||
            (l.maxAmount !== void 0 && l.maxAmount > 0))
        ) {
          const u = new Map();
          a.forEach((b) => {
            const k = `${b.documento}-${b.cliente}`;
            (u.has(k) || u.set(k, []), u.get(k).push(b));
          });
          const o = new Set();
          (u.forEach((b, k) => {
            const ue = b.reduce(($e, Ue) => $e + Ue.valor_original, 0),
              me = b.reduce(($e, Ue) => $e + Ue.valor_recebido, 0),
              ie = Math.max(0, ue - me);
            let ve = !0;
            (l.minAmount !== void 0 &&
              l.minAmount > 0 &&
              (ve = ve && ie >= l.minAmount),
              l.maxAmount !== void 0 &&
                l.maxAmount > 0 &&
                (ve = ve && ie <= l.maxAmount),
              ve && o.add(k));
          }),
            (a = a.filter((b) => {
              const k = `${b.documento}-${b.cliente}`;
              return o.has(k);
            })));
        }
        if (l.status)
          if (
            (($ = l.status) == null ? void 0 : $.toLowerCase()) === "parcial" ||
            ((te = l.status) == null ? void 0 : te.toLowerCase()) === "pago"
          ) {
            const u = new Map();
            a.forEach((b) => {
              const k = `${b.documento}-${b.cliente}`;
              (u.has(k) || u.set(k, []), u.get(k).push(b));
            });
            const o = new Set();
            (u.forEach((b, k) => {
              var ve, $e;
              const ue = b.reduce((Ue, He) => Ue + He.valor_original, 0),
                me = b.reduce((Ue, He) => Ue + He.valor_recebido, 0),
                ie = Math.max(0, ue - me);
              ((ve = l.status) == null ? void 0 : ve.toLowerCase()) ===
              "parcial"
                ? me > 0 && ie > 0 && o.add(k)
                : (($e = l.status) == null ? void 0 : $e.toLowerCase()) ===
                    "pago" &&
                  ie <= 0.01 &&
                  me > 0 &&
                  o.add(k);
            }),
              (a = a.filter((b) => {
                const k = `${b.documento}-${b.cliente}`;
                return o.has(k);
              })));
          } else if (
            ((g = l.status) == null ? void 0 : g.toLowerCase()) === "pendente"
          ) {
            const u = new Map();
            a.forEach((b) => {
              const k = `${b.documento}-${b.cliente}`;
              (u.has(k) || u.set(k, []), u.get(k).push(b));
            });
            const o = new Set();
            (u.forEach((b, k) => {
              const ue = b.reduce((ve, $e) => ve + $e.valor_original, 0),
                me = b.reduce((ve, $e) => ve + $e.valor_recebido, 0),
                ie = Math.max(0, ue - me);
              me <= 0.01 && ie > 0 && o.add(k);
            }),
              (a = a.filter((b) => {
                const k = `${b.documento}-${b.cliente}`;
                return o.has(k);
              })));
          } else
            a = a.filter((u) => {
              var ue;
              const o = u.valor_recebido || 0,
                b = u.valor_original || 0;
              let k;
              if (
                (o === 0
                  ? (k = "pendente")
                  : o >= b
                    ? (k = "pago")
                    : (k = "parcial"),
                u.status)
              ) {
                const me = u.status.toLowerCase();
                [
                  "recebido",
                  "pago",
                  "paid",
                  "received",
                  "quitado",
                  "finalizado",
                ].includes(me)
                  ? (k = "pago")
                  : [
                        "parcialmente_pago",
                        "parcialmente pago",
                        "pago parcial",
                        "partial",
                        "parcial",
                      ].includes(me)
                    ? (k = "parcial")
                    : (k = "pendente");
              }
              return (
                k === ((ue = l.status) == null ? void 0 : ue.toLowerCase())
              );
            });
        if (
          (l.dueDate && (a = a.filter((u) => u.data_vencimento === l.dueDate)),
          l.collector && (a = a.filter((u) => u.user_id === l.collector)),
          l.store && (a = a.filter((u) => u.nome_da_loja === l.store)),
          l.city && (a = a.filter((u) => u.cidade === l.city)),
          l.neighborhood && (a = a.filter((u) => u.bairro === l.neighborhood)),
          (l.dateFrom || l.dateTo) &&
            (a = a.filter((u) => {
              if (!u.data_vencimento) return !1;
              const o = f(u.data_vencimento);
              if (!o) return !1;
              let b = !0;
              if (l.dateFrom) {
                const k = new Date(l.dateFrom);
                isNaN(k.getTime()) ||
                  (k.setHours(0, 0, 0, 0),
                  o.setHours(0, 0, 0, 0),
                  (b = b && o >= k));
              }
              if (l.dateTo) {
                const k = new Date(l.dateTo);
                isNaN(k.getTime()) ||
                  (k.setHours(23, 59, 59, 999),
                  o.setHours(0, 0, 0, 0),
                  (b = b && o <= k));
              }
              return b;
            })),
          l.search)
        ) {
          const u = l.search.toLowerCase();
          a = a.filter((o) => {
            var b, k, ue, me, ie;
            return (
              ((b = o.cliente) == null
                ? void 0
                : b.toLowerCase().includes(u)) ||
              ((k = o.documento) == null
                ? void 0
                : k.toLowerCase().includes(u)) ||
              ((ue = o.numero_titulo) == null
                ? void 0
                : ue.toString().includes(u)) ||
              ((me = o.venda_n) == null ? void 0 : me.toString().includes(u)) ||
              ((ie = o.id_parcela) == null ? void 0 : ie.toString().includes(u))
            );
          });
        }
        return a;
      },
      S = (l) => {
        let n = h;
        if (l) {
          const f = xe(l);
          n = h.filter(
            ($) => $.user_id === l || f.includes($.nome_da_loja || ""),
          );
        }
        const d = new Map();
        let a = 0;
        return (
          n.forEach((f) => {
            var o;
            const $ = (o = f.documento) == null ? void 0 : o.trim();
            if (!$) {
              a++;
              return;
            }
            d.has($) ||
              d.set($, {
                clientId: $,
                client: f.cliente || "Cliente sem nome",
                document: $,
                phone: f.telefone || void 0,
                mobile: f.celular || void 0,
                address: f.endereco || "",
                number: f.numero || "",
                neighborhood: f.bairro || "",
                city: f.cidade || "",
                state: f.estado || "",
                sales: [],
                totalValue: 0,
                totalReceived: 0,
                pendingValue: 0,
              });
            const te = d.get($);
            let g = te.sales.find((b) => b.saleNumber === (f.venda_n || 0));
            if (
              (g ||
                ((g = {
                  saleNumber: f.venda_n || 0,
                  titleNumber: f.numero_titulo || 0,
                  description: f.descricao || "",
                  installments: [],
                  totalValue: 0,
                  totalReceived: 0,
                  pendingValue: 0,
                  saleStatus: "pending",
                  payments: [],
                  clientDocument: f.documento || "",
                }),
                te.sales.push(g)),
              g)
            ) {
              g.installments.push(f);
              const b = (ue) => Math.round((ue + Number.EPSILON) * 100) / 100;
              ((g.totalValue = b(g.totalValue + f.valor_original)),
                (g.totalReceived = b(g.totalReceived + f.valor_recebido)));
              const k = b(f.valor_original - f.valor_recebido);
              k > 0.01 && (g.pendingValue = b(g.pendingValue + k));
            }
            const u = (b) => Math.round((b + Number.EPSILON) * 100) / 100;
            ((te.totalValue = u(te.totalValue + f.valor_original)),
              (te.totalReceived = u(te.totalReceived + f.valor_recebido)));
          }),
          d.forEach((f) => {
            const $ = (te) => Math.round((te + Number.EPSILON) * 100) / 100;
            (f.sales.forEach((te) => {
              te.pendingValue = $(te.totalValue - te.totalReceived);
            }),
              (f.pendingValue = $(f.totalValue - f.totalReceived)));
          }),
          a > 0 &&
            console.warn(
              `[getClientGroups] Skipped ${a} collection entries because they were missing a 'documento'.`,
            ),
          Array.from(d.values()).sort((f, $) =>
            f.client.localeCompare($.client),
          )
        );
      },
      _ = () => {
        const l = h.filter((u) => {
            var o;
            return (
              ((o = u.status) == null ? void 0 : o.toLowerCase()) === "pendente"
            );
          }).length,
          n = h.filter((u) => u.dias_em_atraso && u.dias_em_atraso > 0).length,
          d = h.filter((u) => {
            var o;
            return (
              ((o = u.status) == null ? void 0 : o.toLowerCase()) ===
                "recebido" || u.valor_recebido > 0
            );
          }).length,
          a = h.reduce((u, o) => u + o.valor_original, 0),
          f = h.reduce((u, o) => u + o.valor_recebido, 0),
          $ = a - f,
          te = h.length > 0 ? (d / h.length) * 100 : 0,
          g = D.filter((u) => u.type === "collector").length;
        return {
          totalPending: l,
          totalOverdue: n,
          totalReceived: d,
          totalAmount: a,
          receivedAmount: f,
          pendingAmount: $,
          conversionRate: te,
          collectorsCount: g,
        };
      },
      J = () =>
        D.filter((n) => n.type === "collector").map((n) => {
          const d = xe(n.id),
            a = h.filter(
              (ie) => ie.user_id === n.id || d.includes(ie.nome_da_loja || ""),
            ),
            f = new Set();
          a.forEach((ie) => {
            ie.documento && ie.documento.trim() && f.add(ie.documento.trim());
          });
          const $ = f.size,
            te = new Map();
          (a.forEach((ie) => {
            const ve = `${ie.venda_n}-${ie.documento}`;
            te.has(ve) ||
              te.set(ve, {
                totalValue: 0,
                receivedValue: 0,
                status: "pendente",
                installments: [],
              });
            const $e = te.get(ve);
            (($e.totalValue += ie.valor_original),
              ($e.receivedValue += ie.valor_recebido),
              $e.installments.push(ie));
          }),
            te.forEach((ie) => {
              const ve = Math.max(0, ie.totalValue - ie.receivedValue);
              ie.receivedValue > 0 && ve > 0
                ? (ie.status = "parcial")
                : ve <= 0.01 && ie.receivedValue > 0
                  ? (ie.status = "pago")
                  : (ie.status = "pendente");
            }));
          const g = Array.from(te.values()),
            u = g.length,
            o = g.filter((ie) => ie.status === "pago").length,
            b = g.reduce((ie, ve) => ie + ve.totalValue, 0),
            k = g.reduce((ie, ve) => ie + ve.receivedValue, 0),
            ue = u > 0 ? (o / u) * 100 : 0;
          return {
            collectorId: n.id,
            collectorName: n.name,
            totalAssigned: u,
            totalReceived: o,
            totalAmount: b,
            receivedAmount: k,
            conversionRate: ue,
            averageTime: 15,
            clientCount: $,
          };
        }),
      Z = (l) => {
        const n = xe(l);
        return h.filter(
          (d) => d.user_id === l || n.includes(d.nome_da_loja || ""),
        );
      },
      he = () => {
        const l = new Set();
        return (
          h.forEach((n) => {
            n.nome_da_loja && l.add(n.nome_da_loja);
          }),
          Array.from(l).sort()
        );
      },
      xe = (l) => O.filter((n) => n.collectorId === l).map((n) => n.storeName),
      R = async () => {
        x(!0, "Atualizando dados...");
        try {
          await Promise.all([W(), T(), p(), we(), Ve()]);
        } finally {
          x(!1);
        }
      },
      ge = async () => {
        x(!0, "Atualizando dados...");
        try {
          await Promise.all([W(), T(), p(), we()]);
        } finally {
          x(!1);
        }
      },
      pe = async (l, n) => {
        try {
          (ee(!0),
            console.log(
              `Iniciando atribuição de ${n.length} clientes ao cobrador ${l}`,
            ));
          const d = 200;
          let a = 0;
          for (let f = 0; f < n.length; f += d) {
            const $ = n.slice(f, f + d);
            console.log(
              `Processando lote ${Math.floor(f / d) + 1}: ${$.length} identificadores`,
            );
            const te = $.filter((k) => k.document).map((k) => k.document),
              g = $.filter((k) => !k.document && k.clientName).map(
                (k) => k.clientName,
              );
            let u = [],
              o = null;
            if (te.length > 0) {
              const { data: k, error: ue } = await De.from("BANCO_DADOS")
                .select("id_parcela")
                .in("documento", te);
              (ue && (o = ue), k && (u = u.concat(k)));
            }
            if (g.length > 0 && !o) {
              const { data: k, error: ue } = await De.from("BANCO_DADOS")
                .select("id_parcela")
                .in("cliente", g);
              (ue && (o = ue), k && (u = u.concat(k)));
            }
            if (o)
              throw (console.error("Erro ao buscar parcelas do lote:", o), o);
            if (!u || u.length === 0) {
              console.warn(
                `Nenhuma parcela encontrada para este lote de ${$.length} clientes`,
              );
              continue;
            }
            console.log(`Encontradas ${u.length} parcelas para este lote`);
            const { error: b } = await De.from("BANCO_DADOS")
              .update({ user_id: l })
              .in(
                "id_parcela",
                u.map((k) => k.id_parcela),
              );
            if (b)
              throw (
                console.error("Erro ao atualizar parcelas do lote:", b),
                b
              );
            ((a += u.length),
              console.log(
                `Lote processado com sucesso. Total de parcelas atualizadas até agora: ${a}`,
              ));
          }
          (await R(),
            console.log(
              `✅ Atribuição concluída: ${n.length} clientes (${a} parcelas) atribuídos ao cobrador ${l}`,
            ));
        } catch (d) {
          throw (
            console.error("Erro ao atribuir cobrador aos clientes:", d),
            G(d instanceof Error ? d.message : "Erro ao atribuir cobrador"),
            d
          );
        } finally {
          (ee(!1), x(!1));
        }
      },
      fe = async (l) => {
        try {
          (ee(!0), console.log(`Removendo cobrador de ${l.length} clientes`));
          const n = 200;
          let d = 0;
          for (let a = 0; a < l.length; a += n) {
            const f = l.slice(a, a + n);
            console.log(
              `Processando lote ${Math.floor(a / n) + 1} de ${Math.ceil(l.length / n)} (${f.length} identificadores)`,
            );
            const $ = f.filter((b) => b.document).map((b) => b.document),
              te = f
                .filter((b) => !b.document && b.clientName)
                .map((b) => b.clientName);
            let g = [],
              u = null;
            if ($.length > 0) {
              const { data: b, error: k } = await De.from("BANCO_DADOS")
                .select("id_parcela")
                .in("documento", $);
              (k && (u = k), b && (g = g.concat(b)));
            }
            if (te.length > 0 && !u) {
              const { data: b, error: k } = await De.from("BANCO_DADOS")
                .select("id_parcela")
                .in("cliente", te);
              (k && (u = k), b && (g = g.concat(b)));
            }
            if (u)
              throw (console.error("Erro ao buscar parcelas do lote:", u), u);
            if (!g || g.length === 0) {
              console.warn(
                `Nenhuma parcela encontrada para este lote de ${f.length} clientes`,
              );
              continue;
            }
            console.log(`Encontradas ${g.length} parcelas para este lote`);
            const { error: o } = await De.from("BANCO_DADOS")
              .update({ user_id: null })
              .in(
                "id_parcela",
                g.map((b) => b.id_parcela),
              );
            if (o)
              throw (
                console.error("Erro ao atualizar parcelas do lote:", o),
                o
              );
            ((d += g.length),
              console.log(
                `Lote processado com sucesso. Total de parcelas atualizadas até agora: ${d}`,
              ));
          }
          (await R(),
            console.log(
              `✅ Remoção concluída: ${l.length} clientes (${d} parcelas) removidos do cobrador`,
            ));
        } catch (n) {
          throw (
            console.error("Erro ao remover cobrador dos clientes:", n),
            G(n instanceof Error ? n.message : "Erro ao remover cobrador"),
            n
          );
        } finally {
          (ee(!1), x(!1));
        }
      },
      we = async () => {
        try {
          console.log(
            "Buscando pagamentos de venda da tabela sale_payments...",
          );
          const { data: l, error: n } = await De.from("sale_payments")
            .select("*")
            .order("payment_date", { ascending: !1 });
          if (n) throw (console.error("Erro ao buscar pagamentos:", n), n);
          const d = (l || []).map((a) => ({
            id: a.id,
            saleNumber: a.sale_number,
            clientDocument: a.client_document,
            paymentAmount: a.payment_amount,
            paymentDate: a.payment_date,
            paymentMethod: a.payment_method,
            notes: a.notes,
            collectorId: a.collector_id,
            collectorName: a.collector_name,
            createdAt: a.created_at,
            distributionDetails: a.distribution_details || [],
          }));
          (V(d),
            console.log(
              `✅ ${d.length} pagamentos carregados da tabela sale_payments`,
            ));
        } catch (l) {
          (console.error("Erro ao carregar pagamentos de venda:", l),
            G(l instanceof Error ? l.message : "Erro ao carregar pagamentos"),
            V([]));
        }
      },
      re = (l, n) => {
        console.log(
          "Distribuindo pagamento:",
          n,
          "entre",
          l.length,
          "parcelas",
        );
        const d = l.filter((u) => u.valor_recebido < u.valor_original);
        if (d.length === 0)
          return { updatedInstallments: l, distributionDetails: [] };
        const a = [...d].sort((u, o) => {
          const b = new Date();
          b.setHours(0, 0, 0, 0);
          const k = new Date(u.data_vencimento || ""),
            ue = new Date(o.data_vencimento || "");
          (k.setHours(0, 0, 0, 0), ue.setHours(0, 0, 0, 0));
          const me = k < b,
            ie = ue < b;
          return me && !ie ? -1 : !me && ie ? 1 : k.getTime() - ue.getTime();
        });
        let f = n;
        const $ = [],
          te = [...l],
          g = (u) => Math.round((u + Number.EPSILON) * 100) / 100;
        for (const u of a) {
          if (f <= 0.01) break;
          const o = g(u.valor_original - u.valor_recebido),
            b = g(Math.min(f, o));
          if (b > 0.01) {
            const k = te.findIndex((ue) => ue.id_parcela === u.id_parcela);
            if (k !== -1) {
              const ue = g(te[k].valor_recebido + b),
                me = g(te[k].valor_original - ue);
              ((te[k] = {
                ...te[k],
                valor_recebido: ue,
                status: me <= 0.01 ? "recebido" : "parcialmente_pago",
                data_de_recebimento: new Date().toISOString().split("T")[0],
              }),
                $.push({
                  installmentId: u.id_parcela,
                  originalAmount: o,
                  appliedAmount: b,
                  installmentStatus: te[k].status || "pendente",
                }),
                (f = g(f - b)));
            }
          }
        }
        return (
          console.log("Distribuição concluída. Valor restante:", f),
          console.log("Detalhes da distribuição:", $),
          { updatedInstallments: te, distributionDetails: $ }
        );
      },
      de = async (l, n) => {
        try {
          (ee(!0), console.log("Processando pagamento de venda:", l));
          const d = h.filter(
            (b) =>
              b.venda_n === l.saleNumber && b.documento === l.clientDocument,
          );
          if (d.length === 0)
            throw new Error(
              "Nenhuma parcela encontrada para esta venda e cliente",
            );
          console.log("Parcelas encontradas:", d.length);
          const { updatedInstallments: a, distributionDetails: f } = re(
            d,
            l.paymentAmount,
          );
          for (const b of a) {
            const k = d.find((ue) => ue.id_parcela === b.id_parcela);
            if (
              k &&
              (k.valor_recebido !== b.valor_recebido || k.status !== b.status)
            ) {
              const { error: ue } = await De.from("BANCO_DADOS")
                .update({
                  valor_recebido: b.valor_recebido,
                  status: b.status,
                  data_de_recebimento: b.data_de_recebimento,
                })
                .eq("id_parcela", b.id_parcela);
              if (ue)
                throw (console.error("Erro ao atualizar parcela:", ue), ue);
            }
          }
          const $ = D.find((b) => b.id === n),
            te = d[0],
            g = {
              sale_number: l.saleNumber,
              client_document: l.clientDocument,
              client_name:
                (te == null ? void 0 : te.cliente) || "Cliente não informado",
              payment_amount: l.paymentAmount,
              payment_date: new Date().toISOString().split("T")[0],
              payment_method: l.paymentMethod,
              notes: l.notes || "",
              collector_id: n,
              collector_name:
                ($ == null ? void 0 : $.name) || "Cobrador não encontrado",
              distribution_details: f,
              store_name: (te == null ? void 0 : te.nome_da_loja) || null,
            },
            { data: u, error: o } = await De.from("sale_payments")
              .insert(g)
              .select()
              .single();
          (o
            ? console.error(
                "Erro ao registrar pagamento na tabela sale_payments:",
                o,
              )
            : console.log(
                "✅ Pagamento registrado na tabela sale_payments:",
                u,
              ),
            i((b) =>
              b.map((k) => a.find((me) => me.id_parcela === k.id_parcela) || k),
            ),
            await ge(),
            await le(l.clientDocument));
        } catch (d) {
          throw (
            console.error("Erro ao processar pagamento de venda:", d),
            G(d instanceof Error ? d.message : "Erro ao processar pagamento"),
            d
          );
        } finally {
          ee(!1);
        }
      },
      oe = async (l, n, d, a, f) => {
        try {
          (ee(!0),
            console.log(
              "Processando pagamento geral do cliente:",
              l,
              "Valor:",
              n,
            ),
            console.log("Total de collections no contexto:", h.length),
            console.log("Buscando parcelas para cliente:", l));
          const $ = h.filter(
            (b) => b.documento === l && b.valor_recebido < b.valor_original,
          );
          if (
            (console.log("Parcelas encontradas para o cliente:", $.length),
            $.length === 0)
          )
            throw new Error(
              `Nenhuma parcela pendente encontrada para o cliente ${l}`,
            );
          console.log("Parcelas pendentes encontradas:", $.length);
          const te = $.sort((b, k) => {
            const ue = new Date();
            ue.setHours(0, 0, 0, 0);
            const me = new Date(b.data_vencimento || ""),
              ie = new Date(k.data_vencimento || "");
            (me.setHours(0, 0, 0, 0), ie.setHours(0, 0, 0, 0));
            const ve = me < ue,
              $e = ie < ue;
            return ve && !$e ? -1 : !ve && $e ? 1 : me.getTime() - ie.getTime();
          });
          let g = n;
          const u = [],
            o = [];
          for (const b of te) {
            if (g <= 0) break;
            const k = b.valor_original - b.valor_recebido,
              ue = Math.min(g, k);
            if (ue > 0) {
              const me = b.valor_recebido + ue,
                ie = {
                  ...b,
                  valor_recebido: me,
                  status:
                    me >= b.valor_original ? "recebido" : "parcialmente_pago",
                  data_de_recebimento:
                    me >= b.valor_original
                      ? new Date().toISOString().split("T")[0]
                      : b.data_de_recebimento,
                };
              (u.push(ie),
                o.push({
                  installmentId: b.id_parcela,
                  saleNumber: b.venda_n,
                  installmentNumber: b.parcela,
                  originalAmount: k,
                  appliedAmount: ue,
                  installmentStatus: ie.status,
                }),
                (g -= ue));
            }
          }
          console.log("Atualizando", u.length, "parcelas no banco de dados...");
          for (const b of u) {
            console.log(
              "Atualizando parcela",
              b.id_parcela,
              "valor recebido:",
              b.valor_recebido,
            );
            const { error: k } = await De.from("BANCO_DADOS")
              .update({
                valor_recebido: b.valor_recebido,
                status: b.status,
                data_de_recebimento: b.data_de_recebimento,
              })
              .eq("id_parcela", b.id_parcela);
            if (k)
              throw (
                console.error(
                  "Erro ao atualizar parcela",
                  b.id_parcela,
                  ":",
                  k,
                ),
                k
              );
          }
          try {
            const b = D.find((me) => me.id === f),
              k = u[0],
              ue = [...new Set(o.map((me) => me.saleNumber))];
            for (const me of ue) {
              const ie = o.filter((ns) => ns.saleNumber === me),
                ve = ie.reduce((ns, gs) => ns + gs.appliedAmount, 0),
                $e = {
                  sale_number: me,
                  client_document: l,
                  client_name:
                    (k == null ? void 0 : k.cliente) || "Cliente não informado",
                  payment_amount: ve,
                  payment_date: new Date().toISOString().split("T")[0],
                  payment_method: d,
                  notes: `Pagamento geral do cliente. ${a}`.trim(),
                  collector_id: f,
                  collector_name:
                    (b == null ? void 0 : b.name) || "Cobrador não encontrado",
                  distribution_details: ie,
                  store_name: (k == null ? void 0 : k.nome_da_loja) || null,
                },
                { data: Ue, error: He } = await De.from("sale_payments")
                  .insert($e)
                  .select()
                  .single();
              He
                ? console.error(
                    "Erro ao registrar pagamento na tabela sale_payments:",
                    He,
                  )
                : console.log(
                    "✅ Pagamento registrado na tabela sale_payments:",
                    Ue,
                  );
            }
          } catch (b) {
            console.warn(
              "Erro ao registrar histórico de pagamento (não crítico):",
              b,
            );
          }
          (i((b) =>
            b.map((k) => u.find((me) => me.id_parcela === k.id_parcela) || k),
          ),
            await ge(),
            await le(l),
            console.log("✅ Pagamento geral processado com sucesso!"));
        } catch ($) {
          throw (
            console.error("Erro ao processar pagamento geral:", $),
            G(
              $ instanceof Error
                ? $.message
                : "Erro ao processar pagamento geral",
            ),
            $
          );
        } finally {
          ee(!1);
        }
      },
      P = (l, n) =>
        C.filter((d) => d.saleNumber === l && d.clientDocument === n),
      se = (l, n) => {
        const d = h.filter((o) => o.venda_n === l && o.documento === n),
          a = (o) => Math.round((o + Number.EPSILON) * 100) / 100,
          f = a(d.reduce((o, b) => o + b.valor_original, 0)),
          $ = a(d.reduce((o, b) => o + b.valor_recebido, 0)),
          te = a(f - $);
        let g = "pending";
        $ === 0
          ? (g = "pending")
          : te <= 0.01
            ? (g = "fully_paid")
            : (g = "partially_paid");
        const u = d.map((o) => ({
          installmentId: o.id_parcela,
          originalValue: o.valor_original,
          paidValue: o.valor_recebido,
          remainingValue: a(o.valor_original - o.valor_recebido),
          status: o.status || "pendente",
        }));
        return {
          totalValue: f,
          totalPaid: $,
          remainingBalance: te,
          status: g,
          installmentBreakdown: u,
        };
      },
      Ae = Xe.useCallback(
        (l) => {
          const n = new Map();
          return (
            h
              .filter((d) => d.documento === l)
              .forEach((d) => {
                const a = d.venda_n || 0;
                (n.has(a) || n.set(a, []), n.get(a).push(d));
              }),
            Array.from(n.entries()).map(([d, a]) => {
              var b, k;
              const f = (ue) => Math.round((ue + Number.EPSILON) * 100) / 100,
                $ = f(a.reduce((ue, me) => ue + me.valor_original, 0)),
                te = f(a.reduce((ue, me) => ue + me.valor_recebido, 0)),
                g = Math.max(0, f($ - te)),
                u = se(d, l),
                o = P(d, l);
              return {
                saleNumber: d,
                titleNumber:
                  ((b = a[0]) == null ? void 0 : b.numero_titulo) || 0,
                description:
                  ((k = a[0]) == null ? void 0 : k.descricao) || `Venda ${d}`,
                installments: a,
                totalValue: $,
                totalReceived: te,
                pendingValue: g,
                saleStatus: u.status,
                payments: o,
                clientDocument: l,
              };
            })
          );
        },
        [h, se, P],
      ),
      Ve = async () => {
        try {
          console.log("Buscando visitas agendadas...");
          const { data: l, error: n } = await De.from("scheduled_visits")
            .select("*")
            .order("scheduled_date", { ascending: !0 });
          if (n) {
            (console.error("Erro ao buscar visitas agendadas:", n),
              n.message.includes(
                'relation "scheduled_visits" does not exist',
              ) &&
                console.error(
                  "Tabela scheduled_visits não existe. Verifique a estrutura do banco de dados.",
                ),
              A([]));
            return;
          }
          const d = (l || []).map((a) => ({
            id: a.id,
            collectorId: a.collector_id,
            clientDocument: a.client_document,
            clientName: a.client_name,
            scheduledDate: a.scheduled_date,
            scheduledTime: a.scheduled_time,
            status: a.status,
            notes: a.notes,
            createdAt: a.created_at,
            updatedAt: a.updated_at,
            dataVisitaRealizada: a.data_visita_realizada,
            clientAddress: a.client_address,
            clientNeighborhood: a.client_neighborhood,
            clientCity: a.client_city,
            totalPendingValue: a.total_pending_value,
            overdueCount: a.overdue_count,
            cancellationRequestDate: a.cancellation_request_date,
            cancellationRequestReason: a.cancellation_request_reason,
            cancellationApprovedBy: a.cancellation_approved_by,
            cancellationApprovedAt: a.cancellation_approved_at,
            cancellationRejectedBy: a.cancellation_rejected_by,
            cancellationRejectedAt: a.cancellation_rejected_at,
            cancellationRejectionReason: a.cancellation_rejection_reason,
          }));
          (A(d), console.log("Visitas agendadas carregadas:", d.length));
        } catch (l) {
          (console.error("Erro ao carregar visitas agendadas:", l), A([]));
        }
      },
      ne = async (l) => {
        try {
          console.log("Agendando visita:", l);
          const { data: n, error: d } = await De.from("scheduled_visits")
            .insert([
              {
                collector_id: l.collectorId,
                client_document: l.clientDocument,
                client_name: l.clientName,
                scheduled_date: l.scheduledDate,
                scheduled_time: l.scheduledTime,
                status: l.status,
                notes: l.notes,
                client_address: l.clientAddress,
                client_neighborhood: l.clientNeighborhood,
                client_city: l.clientCity,
                total_pending_value: l.totalPendingValue,
                overdue_count: l.overdueCount,
              },
            ])
            .select()
            .single();
          if (d) {
            console.error("Erro ao inserir visita no Supabase:", d);
            const f = {
              ...l,
              id: Date.now().toString(),
              createdAt: new Date().toISOString(),
            };
            return (
              A(($) => [...$, f]),
              console.log("Visita agendada localmente:", f),
              f
            );
          }
          const a = {
            id: n.id,
            collectorId: n.collector_id,
            clientDocument: n.client_document,
            clientName: n.client_name,
            scheduledDate: n.scheduled_date,
            scheduledTime: n.scheduled_time,
            status: n.status,
            notes: n.notes,
            createdAt: n.created_at,
            updatedAt: n.updated_at,
            clientAddress: n.client_address,
            clientNeighborhood: n.client_neighborhood,
            clientCity: n.client_city,
            totalPendingValue: n.total_pending_value,
            overdueCount: n.overdue_count,
            cancellationRequestDate: n.cancellation_request_date,
            cancellationRequestReason: n.cancellation_request_reason,
            cancellationApprovedBy: n.cancellation_approved_by,
            cancellationApprovedAt: n.cancellation_approved_at,
            cancellationRejectedBy: n.cancellation_rejected_by,
            cancellationRejectedAt: n.cancellation_rejected_at,
            cancellationRejectionReason: n.cancellation_rejection_reason,
          };
          return (A((f) => [...f, a]), a);
        } catch (n) {
          throw (console.error("Erro ao agendar visita:", n), n);
        }
      },
      Re = async (l, n, d) => {
        try {
          console.log("Atualizando status da visita:", l, n);
          const a = { status: n, updated_at: new Date().toISOString() };
          (d !== void 0 && (a.notes = d),
            n === "realizada" &&
              (a.data_visita_realizada = new Date()
                .toISOString()
                .split("T")[0]));
          const { error: f } = await De.from("scheduled_visits")
            .update(a)
            .eq("id", l);
          (f && console.error("Erro ao atualizar visita no Supabase:", f),
            A(($) =>
              $.map((te) =>
                te.id === l
                  ? {
                      ...te,
                      status: n,
                      notes: d || te.notes,
                      updatedAt: new Date().toISOString(),
                      ...(n === "realizada" && {
                        dataVisitaRealizada: new Date()
                          .toISOString()
                          .split("T")[0],
                      }),
                    }
                  : te,
              ),
            ),
            console.log("Status da visita atualizado com sucesso"));
        } catch (a) {
          throw (console.error("Erro ao atualizar status da visita:", a), a);
        }
      },
      K = async (l, n) => {
        try {
          console.log("Solicitando cancelamento da visita:", l, n);
          const d = {
              status: "cancelamento_solicitado",
              cancellation_request_date: new Date().toISOString(),
              cancellation_request_reason: n,
              updated_at: new Date().toISOString(),
            },
            { error: a } = await De.from("scheduled_visits")
              .update(d)
              .eq("id", l);
          (a && console.error("Erro ao solicitar cancelamento no Supabase:", a),
            A((f) =>
              f.map(($) =>
                $.id === l
                  ? {
                      ...$,
                      status: "cancelamento_solicitado",
                      cancellationRequestDate: new Date().toISOString(),
                      cancellationRequestReason: n,
                      updatedAt: new Date().toISOString(),
                    }
                  : $,
              ),
            ),
            console.log("Solicitação de cancelamento enviada com sucesso"));
        } catch (d) {
          throw (console.error("Erro ao solicitar cancelamento:", d), d);
        }
      },
      B = async (l, n) => {
        try {
          console.log("Aprovando cancelamento da visita:", l);
          const d = {
              status: "cancelada",
              cancellation_approved_by: n,
              cancellation_approved_at: new Date().toISOString(),
              updated_at: new Date().toISOString(),
            },
            { error: a } = await De.from("scheduled_visits")
              .update(d)
              .eq("id", l);
          (a && console.error("Erro ao aprovar cancelamento no Supabase:", a),
            A((f) =>
              f.map(($) =>
                $.id === l
                  ? {
                      ...$,
                      status: "cancelada",
                      cancellationApprovedBy: n,
                      cancellationApprovedAt: new Date().toISOString(),
                      updatedAt: new Date().toISOString(),
                    }
                  : $,
              ),
            ),
            console.log("Cancelamento aprovado com sucesso"));
        } catch (d) {
          throw (console.error("Erro ao aprovar cancelamento:", d), d);
        }
      },
      X = async (l, n, d) => {
        try {
          console.log("Rejeitando cancelamento da visita:", l);
          const a = {
              status: "agendada",
              cancellation_rejected_by: n,
              cancellation_rejected_at: new Date().toISOString(),
              cancellation_rejection_reason: d,
              updated_at: new Date().toISOString(),
            },
            { error: f } = await De.from("scheduled_visits")
              .update(a)
              .eq("id", l);
          (f && console.error("Erro ao rejeitar cancelamento no Supabase:", f),
            A(($) =>
              $.map((te) =>
                te.id === l
                  ? {
                      ...te,
                      status: "agendada",
                      cancellationRejectedBy: n,
                      cancellationRejectedAt: new Date().toISOString(),
                      cancellationRejectionReason: d,
                      updatedAt: new Date().toISOString(),
                    }
                  : te,
              ),
            ),
            console.log("Cancelamento rejeitado com sucesso"));
        } catch (a) {
          throw (console.error("Erro ao rejeitar cancelamento:", a), a);
        }
      },
      je = () => U.filter((l) => l.status === "cancelamento_solicitado"),
      Se = (l = 30) => {
        const n = new Date();
        return (
          n.setDate(n.getDate() - l),
          U.filter((d) => {
            const a =
                d.cancellationApprovedAt &&
                new Date(d.cancellationApprovedAt) >= n,
              f =
                d.cancellationRejectedAt &&
                new Date(d.cancellationRejectedAt) >= n;
            return a || f;
          }).sort((d, a) => {
            const f = new Date(
              d.cancellationApprovedAt || d.cancellationRejectedAt || 0,
            );
            return (
              new Date(
                a.cancellationApprovedAt || a.cancellationRejectedAt || 0,
              ).getTime() - f.getTime()
            );
          })
        );
      },
      ae = (l, n) =>
        U.filter((d) => {
          const a = d.scheduledDate === l,
            f = !n || d.collectorId === n;
          return a && f;
        }),
      ke = (l) => U.filter((n) => n.collectorId === l),
      Te = (l) => {
        const d = S().find((g) => g.document === l);
        if (!d) return null;
        const a = Ae(l),
          f = a.reduce((g, u) => g + u.pendingValue, 0),
          $ = (g) => {
            if (!g) return 0;
            try {
              let u;
              const o = g.trim();
              if (o.includes("/")) {
                const me = o.split("/");
                if (me.length === 3) {
                  const [ie, ve, $e] = me,
                    Ue = parseInt(ie, 10),
                    He = parseInt(ve, 10),
                    ns = parseInt($e, 10);
                  if (Ue >= 1 && Ue <= 31 && He >= 1 && He <= 12 && ns >= 1900)
                    u = new Date(ns, He - 1, Ue);
                  else return (console.warn("Data brasileira inválida:", o), 0);
                } else
                  return (
                    console.warn("Formato de data brasileiro inválido:", o),
                    0
                  );
              } else if (o.includes("-")) {
                const me = o.split("-");
                if (me.length === 3)
                  if (me[0].length === 4) u = new Date(o);
                  else {
                    const [ie, ve, $e] = me;
                    u = new Date(
                      parseInt($e, 10),
                      parseInt(ie, 10) - 1,
                      parseInt(ve, 10),
                    );
                  }
                else u = new Date(o);
              } else u = new Date(o);
              if (isNaN(u.getTime()))
                return (console.warn("Data inválida após parsing:", o), 0);
              const b = new Date();
              (b.setHours(0, 0, 0, 0), u.setHours(0, 0, 0, 0));
              const k = b.getTime() - u.getTime(),
                ue = Math.floor(k / (1e3 * 60 * 60 * 24));
              return Math.max(0, ue);
            } catch (u) {
              return (
                console.error("Erro ao calcular dias em atraso:", u, g),
                0
              );
            }
          },
          te = a.reduce(
            (g, u) =>
              g +
              u.installments.filter((o) =>
                (o.valor_original || 0) - (o.valor_recebido || 0) <= 0
                  ? !1
                  : o.dias_em_atraso !== null &&
                      o.dias_em_atraso !== void 0 &&
                      o.dias_em_atraso > 0
                    ? !0
                    : $(o.data_vencimento || "") > 0,
              ).length,
            0,
          );
        return {
          name: d.client,
          document: d.document,
          address: `${d.address}, ${d.number}`,
          neighborhood: d.neighborhood,
          city: d.city,
          phone: d.phone,
          mobile: d.mobile,
          totalPendingValue: f,
          overdueCount: te,
        };
      },
      le = async (l) => {
        try {
          (console.log("=== INÍCIO updateScheduledVisitsAfterPayment ==="),
            console.log("Cliente:", l));
          const n = Te(l);
          if ((console.log("Dados do cliente recalculados:", n), !n)) {
            console.log("❌ Dados do cliente não encontrados:", l);
            return;
          }
          const d = U.filter(
            (a) => a.clientDocument === l && a.status === "agendada",
          );
          if (
            (console.log(`Visitas agendadas encontradas: ${d.length}`),
            d.forEach((a) => {
              console.log(
                `- Visita ${a.id}: Pendente atual: R$ ${a.totalPendingValue}, Atraso atual: ${a.overdueCount}`,
              );
            }),
            d.length === 0)
          ) {
            console.log(
              "❌ Nenhuma visita agendada encontrada para o cliente:",
              l,
            );
            return;
          }
          for (const a of d) {
            const f = {
              total_pending_value: n.totalPendingValue,
              overdue_count: n.overdueCount,
              updated_at: new Date().toISOString(),
            };
            (console.log(`📝 Atualizando visita ${a.id}:`),
              console.log(
                `   - Pendente: R$ ${a.totalPendingValue} → R$ ${n.totalPendingValue}`,
              ),
              console.log(
                `   - Atraso: ${a.overdueCount} → ${n.overdueCount}`,
              ));
            const { error: $ } = await De.from("scheduled_visits")
              .update(f)
              .eq("id", a.id);
            ($
              ? console.error("❌ Erro ao atualizar visita no Supabase:", $)
              : console.log("✅ Visita atualizada no Supabase com sucesso"),
              A((te) => {
                const g = te.map((u) =>
                  u.id === a.id
                    ? {
                        ...u,
                        totalPendingValue: n.totalPendingValue,
                        overdueCount: n.overdueCount,
                        updatedAt: new Date().toISOString(),
                      }
                    : u,
                );
                return (console.log("✅ Estado local atualizado"), g);
              }));
          }
          (console.log(
            "✅ Visitas agendadas atualizadas com sucesso para cliente:",
            l,
          ),
            console.log("=== FIM updateScheduledVisitsAfterPayment ==="));
        } catch (n) {
          console.error("Erro ao atualizar visitas agendadas:", n);
        }
      },
      M = {
        collections: h,
        users: D,
        collectorStores: O,
        salePayments: C,
        scheduledVisits: U,
        loading: Q,
        error: Y,
        fetchCollections: W,
        fetchUsers: T,
        fetchCollectorStores: p,
        fetchSalePayments: we,
        refreshData: R,
        updateCollection: I,
        assignCollectorToStore: v,
        removeCollectorFromStore: j,
        assignCollectorToClients: pe,
        removeCollectorFromClients: fe,
        addAttempt: z,
        addUser: N,
        updateUser: H,
        deleteUser: w,
        getDashboardStats: _,
        getCollectorPerformance: J,
        getCollectorCollections: Z,
        getClientGroups: S,
        getFilteredCollections: y,
        getAvailableStores: he,
        getCollectorStores: xe,
        processSalePayment: de,
        processGeneralPayment: oe,
        getSalePayments: P,
        calculateSaleBalance: se,
        getSalesByClient: Ae,
        fetchScheduledVisits: Ve,
        scheduleVisit: ne,
        updateVisitStatus: Re,
        requestVisitCancellation: K,
        approveVisitCancellation: B,
        rejectVisitCancellation: X,
        getPendingCancellationRequests: je,
        getCancellationHistory: Se,
        getVisitsByDate: ae,
        getVisitsByCollector: ke,
        getClientDataForVisit: Te,
        rescheduleVisit: async (l, n, d, a) => {
          try {
            console.log("Reagendando visita:", l, n, d);
            const f = U.find((o) => o.id === l);
            if (!f) throw new Error("Visita não encontrada");
            const $ = `Reagendado de ${f.scheduledDate} ${f.scheduledTime || ""} para ${n} ${d || ""}${a ? `. Motivo: ${a}` : ""}`,
              te = f.notes
                ? `${f.notes}
${$}`
                : $,
              g = {
                scheduled_date: n,
                scheduled_time: d || null,
                notes: te,
                updated_at: new Date().toISOString(),
              },
              { error: u } = await De.from("scheduled_visits")
                .update(g)
                .eq("id", l);
            (u && console.error("Erro ao reagendar visita no Supabase:", u),
              A((o) =>
                o.map((b) =>
                  b.id === l
                    ? {
                        ...b,
                        scheduledDate: n,
                        scheduledTime: d || b.scheduledTime,
                        notes: te,
                        updatedAt: new Date().toISOString(),
                      }
                    : b,
                ),
              ),
              console.log("Visita reagendada com sucesso"));
          } catch (f) {
            throw (console.error("Erro ao reagendar visita:", f), f);
          }
        },
        updateScheduledVisitsAfterPayment: le,
      };
    return e.jsx(Ht.Provider, { value: M, children: s });
  },
  Wt = r.createContext(void 0),
  za = () => {
    const s = r.useContext(Wt);
    if (!s)
      throw new Error(
        "useNotifications must be used within a NotificationProvider",
      );
    return s;
  },
  Ia = ({ children: s }) => {
    const [t, x] = r.useState([]),
      [h, i] = r.useState(() => {
        try {
          const G = localStorage.getItem("dismissedNotifications");
          return G ? new Set(JSON.parse(G)) : new Set();
        } catch {
          return new Set();
        }
      }),
      { collections: D } = Je(),
      { user: E } = ts();
    (r.useEffect(() => {
      try {
        localStorage.setItem(
          "dismissedNotifications",
          JSON.stringify(Array.from(h)),
        );
      } catch (G) {
        console.error("Erro ao salvar notificações dispensadas:", G);
      }
    }, [h]),
      r.useEffect(() => {
        if (!D || !E) return;
        const G = setTimeout(() => {
          O();
        }, 500);
        return () => clearTimeout(G);
      }, [D, E == null ? void 0 : E.id]));
    const O = () => {
        if (!E) return;
        const L = (() => {
          const W = [],
            T = new Date(),
            p = new Date(T.getFullYear(), T.getMonth(), T.getDate()),
            I = new Date(p);
          I.setDate(I.getDate() + 1);
          const v =
            E.type === "manager" ? D : D.filter((w) => w.user_id === E.id);
          if (E.type === "collector") {
            const w = v.filter((_) => {
              if (_.status === "received") return !1;
              if (_.data_visita_agendada) {
                const J = new Date(_.data_visita_agendada);
                return isNaN(J.getTime())
                  ? !1
                  : (J.setHours(23, 59, 59, 999),
                    J < T && !_.data_visita_realizada);
              }
              return !1;
            });
            w.length > 0 &&
              W.push({
                type: "visit",
                title: "Visitas Atrasadas",
                message: `${w.length} visita${w.length > 1 ? "s agendadas" : " agendada"} em atraso`,
                priority: "high",
              });
            const y = v.filter((_) => {
              if (_.status === "received" || _.data_visita_realizada) return !1;
              if (_.data_visita_agendada) {
                const J = new Date(_.data_visita_agendada);
                return isNaN(J.getTime()) ? !1 : J >= p && J < I;
              }
              return !1;
            });
            y.length > 0 &&
              W.push({
                type: "visit",
                title: "Visitas de Hoje",
                message: `${y.length} visita${y.length > 1 ? "s agendadas" : " agendada"} para hoje`,
                priority: "medium",
              });
            const S = v.filter(
              (_) =>
                _.status !== "received" &&
                !_.data_visita_agendada &&
                !_.data_visita_realizada,
            );
            S.length > 0 &&
              W.push({
                type: "visit",
                title: "Visitas Não Agendadas",
                message: `${S.length} cobrança${S.length > 1 ? "s" : ""} sem visita agendada`,
                priority: "medium",
              });
          }
          const j = v.filter((w) => {
            if (w.status === "received" || !w.data_vencimento) return !1;
            const y = new Date(w.data_vencimento);
            return !isNaN(y.getTime()) && y < p;
          });
          j.length > 0 &&
            W.push({
              type: "overdue",
              title: "Pagamentos em Atraso",
              message: `${j.length} pagamento${j.length > 1 ? "s" : ""} em atraso`,
              priority: "high",
            });
          const z = v.filter((w) => {
            if (w.status === "received" || !w.data_vencimento) return !1;
            const y = new Date(w.data_vencimento);
            return !isNaN(y.getTime()) && y >= p && y < I;
          });
          z.length > 0 &&
            W.push({
              type: "payment",
              title: "Vencimentos de Hoje",
              message: `${z.length} pagamento${z.length > 1 ? "s vencem" : " vence"} hoje`,
              priority: "medium",
            });
          const N = v.filter((w) => {
            if (w.status !== "received") return !1;
            const y = w.data_recebimento || w.updated_at;
            if (!y) return !1;
            const S = new Date(y);
            if (isNaN(S.getTime())) return !1;
            const _ = new Date(T);
            return (_.setDate(_.getDate() - 1), S >= _);
          });
          if (
            (N.length > 0 &&
              W.push({
                type: "payment",
                title: "Pagamentos Recebidos",
                message: `${N.length} pagamento${N.length > 1 ? "s recebidos" : " recebido"} nas últimas 24h`,
                priority: "low",
              }),
            E.type === "manager")
          ) {
            const w = D.filter((y) => !y.user_id);
            w.length > 0 &&
              W.push({
                type: "assignment",
                title: "Cobranças Não Atribuídas",
                message: `${w.length} cobrança${w.length > 1 ? "s" : ""} sem cobrador atribuído`,
                priority: "medium",
              });
          }
          const H = v.filter(
            (w) => w.status !== "received" && w.valor_original > 5e3,
          );
          return (
            H.length > 0 &&
              W.push({
                type: "payment",
                title: "Valores Altos Pendentes",
                message: `${H.length} cobrança${H.length > 1 ? "s de alto valor" : " de alto valor"} pendente${H.length > 1 ? "s" : ""}`,
                priority: "high",
              }),
            W
          );
        })();
        L.length > 0 &&
          x((W) => {
            const T = W.filter((v) => v.type === "system"),
              p = L.filter((v) => !h.has(`${v.type}-${v.title}`)).map(
                (v, j) => ({
                  ...v,
                  id: `${v.type}-${v.title}-${Date.now()}-${j}`,
                  timestamp: new Date(),
                  read: !1,
                }),
              );
            return [...T, ...p].slice(0, 50);
          });
      },
      F = t.filter((G) => !G.read).length,
      C = (G) => {
        x((L) => L.map((W) => (W.id === G ? { ...W, read: !0 } : W)));
      },
      V = () => {
        x((G) => G.map((L) => ({ ...L, read: !0 })));
      },
      U = (G) => {
        const L = t.find((W) => W.id === G);
        if (L && L.type !== "system") {
          const W = new Set(h);
          (W.add(`${L.type}-${L.title}`), i(W));
        }
        x((W) => W.filter((T) => T.id !== G));
      },
      A = () => {
        const G = new Set(h);
        (t.forEach((L) => {
          L.type !== "system" && G.add(`${L.type}-${L.title}`);
        }),
          i(G),
          x([]));
      },
      Q = (G) => {
        const L = {
          ...G,
          id: `${Date.now()}-${Math.random()}`,
          timestamp: new Date(),
          read: !1,
        };
        x((W) => [L, ...W]);
      },
      Y = {
        notifications: r.useMemo(
          () => t.sort((G, L) => L.timestamp.getTime() - G.timestamp.getTime()),
          [t],
        ),
        unreadCount: F,
        markAsRead: C,
        markAllAsRead: V,
        clearNotification: U,
        clearAllNotifications: A,
        addNotification: Q,
      };
    return e.jsx(Wt.Provider, { value: Y, children: s });
  },
  Oa = () => {
    const [s, t] = r.useState(""),
      [x, h] = r.useState(""),
      [i, D] = r.useState(!1),
      [E, O] = r.useState(!1),
      { login: F, isLoading: C, error: V, clearError: U } = ts(),
      A = async (Q) => {
        if ((Q.preventDefault(), O(!0), !(!s.trim() || !x.trim())))
          try {
            (await F(s, x), O(!1));
          } catch (ee) {
            console.error("Erro na autenticação:", ee);
          }
      };
    return e.jsxs("div", {
      className:
        "min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center p-4 relative overflow-hidden",
      children: [
        e.jsxs("div", {
          className: "absolute inset-0 overflow-hidden",
          children: [
            e.jsx("div", {
              className:
                "absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-200/30 to-indigo-300/30 rounded-full blur-3xl",
            }),
            e.jsx("div", {
              className:
                "absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-tr from-purple-200/30 to-pink-300/30 rounded-full blur-3xl",
            }),
            e.jsx("div", {
              className:
                "absolute top-20 left-20 w-32 h-32 bg-gradient-to-br from-cyan-200/20 to-blue-300/20 rounded-full blur-2xl",
            }),
            e.jsx("div", {
              className:
                "absolute bottom-20 right-20 w-40 h-40 bg-gradient-to-bl from-indigo-200/20 to-purple-300/20 rounded-full blur-2xl",
            }),
          ],
        }),
        e.jsx("div", {
          className: "max-w-md w-full space-y-8 relative z-10",
          children: e.jsxs("div", {
            className:
              "bg-white/80 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 p-8 relative overflow-hidden",
            children: [
              e.jsx("div", {
                className:
                  "absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500",
              }),
              e.jsxs("div", {
                className: "text-center mb-8",
                children: [
                  e.jsx("div", {
                    className:
                      "mx-auto h-16 w-16 bg-gradient-to-br from-blue-600 to-indigo-700 rounded-2xl flex items-center justify-center mb-6 shadow-lg transform hover:scale-105 transition-transform duration-300",
                    children: e.jsx(pa, { className: "h-8 w-8 text-white" }),
                  }),
                  e.jsx("h2", {
                    className:
                      "text-2xl lg:text-3xl font-bold text-gray-900 mb-2",
                    children: "Acesso ao Sistema",
                  }),
                  e.jsx("p", {
                    className: "text-sm lg:text-base text-gray-600",
                    children: "Entre com suas credenciais",
                  }),
                  e.jsx("div", {
                    className:
                      "w-16 h-0.5 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto mt-4 rounded-full",
                  }),
                ],
              }),
              e.jsxs("form", {
                onSubmit: A,
                className: "space-y-6",
                children: [
                  e.jsxs("div", {
                    className: "group",
                    children: [
                      e.jsx("label", {
                        htmlFor: "login",
                        className:
                          "block text-xs lg:text-sm font-medium text-gray-700 mb-2 group-focus-within:text-blue-600 transition-colors",
                        children: "Login",
                      }),
                      e.jsxs("div", {
                        className: "relative",
                        children: [
                          e.jsx("input", {
                            id: "login",
                            type: "text",
                            value: s,
                            onChange: (Q) => {
                              (t(Q.target.value), U());
                            },
                            className: `w-full px-4 py-4 bg-white/50 border rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300 placeholder-gray-400 backdrop-blur-sm hover:bg-white/70 ${E && !s.trim() ? "border-red-300" : "border-gray-200"}`,
                            placeholder: "Digite seu login",
                            disabled: C,
                          }),
                          e.jsx("div", {
                            className:
                              "absolute inset-0 bg-gradient-to-r from-blue-500/0 via-purple-500/0 to-pink-500/0 rounded-xl opacity-0 group-focus-within:opacity-10 transition-opacity duration-300 pointer-events-none",
                          }),
                        ],
                      }),
                      E &&
                        !s.trim() &&
                        e.jsx("p", {
                          className: "mt-1 text-xs lg:text-sm text-red-600",
                          children: "Campo obrigatório",
                        }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "group",
                    children: [
                      e.jsx("label", {
                        htmlFor: "password",
                        className:
                          "block text-xs lg:text-sm font-medium text-gray-700 mb-2 group-focus-within:text-blue-600 transition-colors",
                        children: "Senha",
                      }),
                      e.jsxs("div", {
                        className: "relative",
                        children: [
                          e.jsx("input", {
                            id: "password",
                            type: i ? "text" : "password",
                            value: x,
                            onChange: (Q) => {
                              (h(Q.target.value), U());
                            },
                            className: `w-full px-4 py-4 pr-12 bg-white/50 border rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 transition-all duration-300 placeholder-gray-400 backdrop-blur-sm hover:bg-white/70 ${E && !x.trim() ? "border-red-300" : "border-gray-200"}`,
                            placeholder: "Digite sua senha",
                            disabled: C,
                          }),
                          e.jsx("button", {
                            type: "button",
                            onClick: () => D(!i),
                            className:
                              "absolute inset-y-0 right-0 pr-4 flex items-center hover:bg-gray-100/50 rounded-r-xl transition-colors",
                            disabled: C,
                            children: i
                              ? e.jsx(ba, {
                                  className:
                                    "h-5 w-5 text-gray-400 hover:text-gray-600 transition-colors",
                                })
                              : e.jsx(pt, {
                                  className:
                                    "h-5 w-5 text-gray-400 hover:text-gray-600 transition-colors",
                                }),
                          }),
                          e.jsx("div", {
                            className:
                              "absolute inset-0 bg-gradient-to-r from-blue-500/0 via-purple-500/0 to-pink-500/0 rounded-xl opacity-0 group-focus-within:opacity-10 transition-opacity duration-300 pointer-events-none",
                          }),
                        ],
                      }),
                      E &&
                        !x.trim() &&
                        e.jsx("p", {
                          className: "mt-1 text-xs lg:text-sm text-red-600",
                          children: "Campo obrigatório",
                        }),
                    ],
                  }),
                  V &&
                    e.jsxs("div", {
                      className:
                        "bg-red-50/80 backdrop-blur-sm border border-red-200/50 rounded-xl p-4 flex items-start space-x-3 animate-in slide-in-from-top-2 duration-300",
                      children: [
                        e.jsx(Be, {
                          className:
                            "h-5 w-5 text-red-500 mt-0.5 flex-shrink-0",
                        }),
                        e.jsx("div", {
                          className: "flex-1",
                          children: e.jsx("p", {
                            className:
                              "text-xs lg:text-sm text-red-700 font-medium",
                            children: V,
                          }),
                        }),
                      ],
                    }),
                  e.jsx("button", {
                    type: "submit",
                    disabled: C,
                    className:
                      "w-full bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-4 px-6 rounded-xl hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:ring-offset-2 transition-all duration-300 text-base lg:text-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 active:translate-y-0",
                    children: C
                      ? e.jsxs(e.Fragment, {
                          children: [
                            e.jsx(Cs, {
                              className: "animate-spin h-5 w-5 mr-2",
                            }),
                            "Entrando...",
                          ],
                        })
                      : "Entrar",
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
  },
  Rt = () => {
    const [s, t] = r.useState(!1),
      x = r.useRef(null),
      {
        notifications: h,
        unreadCount: i,
        markAsRead: D,
        markAllAsRead: E,
        clearNotification: O,
        clearAllNotifications: F,
      } = za();
    r.useEffect(() => {
      const A = (Q) => {
        x.current && !x.current.contains(Q.target) && t(!1);
      };
      return (
        document.addEventListener("mousedown", A),
        () => document.removeEventListener("mousedown", A)
      );
    }, []);
    const C = (A) => {
        switch (A) {
          case "payment":
            return e.jsx(Oe, { className: "h-4 w-4 text-green-600" });
          case "overdue":
            return e.jsx(Be, { className: "h-4 w-4 text-red-600" });
          case "assignment":
            return e.jsx(is, { className: "h-4 w-4 text-blue-600" });
          case "visit":
            return e.jsx(Ie, { className: "h-4 w-4 text-orange-600" });
          default:
            return e.jsx(fa, { className: "h-4 w-4 text-gray-600" });
        }
      },
      V = (A) => {
        switch (A) {
          case "high":
            return "border-l-red-500 bg-red-50";
          case "medium":
            return "border-l-yellow-500 bg-yellow-50";
          default:
            return "border-l-blue-500 bg-blue-50";
        }
      },
      U = (A) => {
        const ee = new Date().getTime() - A.getTime(),
          Y = Math.floor(ee / 6e4),
          G = Math.floor(ee / 36e5),
          L = Math.floor(ee / 864e5);
        return Y < 1
          ? "Agora"
          : Y < 60
            ? `${Y}m atrás`
            : G < 24
              ? `${G}h atrás`
              : `${L}d atrás`;
      };
    return e.jsxs("div", {
      className: "relative",
      ref: x,
      children: [
        e.jsxs("button", {
          onClick: () => t(!s),
          className:
            "relative p-2 text-gray-400 hover:text-gray-600 transition-colors",
          children: [
            e.jsx(ct, { className: "h-5 w-5" }),
            i > 0 &&
              e.jsx("span", {
                className:
                  "absolute -top-1 -right-1 h-5 w-5 bg-red-500 text-white text-xs font-medium rounded-full flex items-center justify-center",
                children: i > 9 ? "9+" : i,
              }),
          ],
        }),
        s &&
          e.jsxs("div", {
            className: "fixed inset-0 z-50 sm:hidden",
            children: [
              e.jsx("div", {
                className: "fixed inset-0 bg-black bg-opacity-50",
                onClick: () => t(!1),
              }),
              e.jsxs("div", {
                className:
                  "fixed inset-x-2 top-12 bottom-12 bg-white rounded-lg shadow-xl flex flex-col max-h-[calc(100vh-6rem)]",
                children: [
                  e.jsx("div", {
                    className: "p-4 border-b border-gray-200 flex-shrink-0",
                    children: e.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        e.jsxs("div", {
                          children: [
                            e.jsx("h3", {
                              className: "text-lg font-semibold text-gray-900",
                              children: "Notificações",
                            }),
                            e.jsx("p", {
                              className: "text-sm text-gray-600",
                              children:
                                i > 0
                                  ? `${i} não lida${i > 1 ? "s" : ""}`
                                  : "Todas lidas",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "flex items-center space-x-2",
                          children: [
                            i > 0 &&
                              e.jsx("button", {
                                onClick: E,
                                className:
                                  "text-xs text-blue-600 hover:text-blue-800 transition-colors",
                                title: "Marcar todas como lidas",
                                children: e.jsx(us, { className: "h-4 w-4" }),
                              }),
                            e.jsx("button", {
                              onClick: () => t(!1),
                              className:
                                "text-gray-400 hover:text-gray-600 transition-colors",
                              children: e.jsx(ze, { className: "h-4 w-4" }),
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                  e.jsx("div", {
                    className: "flex-1 overflow-y-auto",
                    children:
                      h.length === 0
                        ? e.jsxs("div", {
                            className: "p-8 text-center",
                            children: [
                              e.jsx(ct, {
                                className:
                                  "h-12 w-12 text-gray-300 mx-auto mb-4",
                              }),
                              e.jsx("p", {
                                className: "text-gray-500",
                                children: "Nenhuma notificação",
                              }),
                            ],
                          })
                        : e.jsx("div", {
                            className: "p-2",
                            children: h.map((A) =>
                              e.jsx(
                                "div",
                                {
                                  className: `relative p-3 mb-2 rounded-lg border-l-4 transition-colors hover:bg-gray-50 ${A.read ? "bg-gray-50" : V(A.priority)} ${A.read ? "border-l-gray-200" : "border-l-4"}`,
                                  children: e.jsxs("div", {
                                    className:
                                      "flex items-start justify-between",
                                    children: [
                                      e.jsxs("div", {
                                        className:
                                          "flex items-start space-x-3 flex-1 min-w-0",
                                        children: [
                                          e.jsx("div", {
                                            className: "flex-shrink-0 mt-1",
                                            children: C(A.type),
                                          }),
                                          e.jsxs("div", {
                                            className: "flex-1 min-w-0",
                                            children: [
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center justify-between",
                                                children: [
                                                  e.jsx("h4", {
                                                    className: `text-sm font-medium ${A.read ? "text-gray-700" : "text-gray-900"} truncate`,
                                                    children: A.title,
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "text-xs text-gray-500 ml-2 flex-shrink-0",
                                                    children: U(A.timestamp),
                                                  }),
                                                ],
                                              }),
                                              e.jsx("p", {
                                                className: `text-sm mt-1 ${A.read ? "text-gray-600" : "text-gray-700"}`,
                                                children: A.message,
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                      e.jsxs("div", {
                                        className:
                                          "flex items-center space-x-1 ml-2 flex-shrink-0",
                                        children: [
                                          !A.read &&
                                            e.jsx("button", {
                                              onClick: () => D(A.id),
                                              className:
                                                "p-1 text-gray-400 hover:text-blue-600 transition-colors",
                                              title: "Marcar como lida",
                                              children: e.jsx(us, {
                                                className: "h-3 w-3",
                                              }),
                                            }),
                                          e.jsx("button", {
                                            onClick: () => O(A.id),
                                            className:
                                              "p-1 text-gray-400 hover:text-red-600 transition-colors",
                                            title: "Remover notificação",
                                            children: e.jsx(ze, {
                                              className: "h-3 w-3",
                                            }),
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                },
                                A.id,
                              ),
                            ),
                          }),
                  }),
                  h.length > 0 &&
                    e.jsx("div", {
                      className:
                        "p-3 border-t border-gray-200 bg-gray-50 rounded-b-lg flex-shrink-0",
                      children: e.jsx("button", {
                        onClick: F,
                        className:
                          "w-full text-sm text-red-600 hover:text-red-800 transition-colors",
                        children: "Limpar todas as notificações",
                      }),
                    }),
                ],
              }),
            ],
          }),
        s &&
          e.jsxs("div", {
            className:
              "hidden sm:block absolute right-0 mt-2 w-96 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 flex-col",
            children: [
              e.jsx("div", {
                className: "p-4 border-b border-gray-200",
                children: e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-semibold text-gray-900",
                          children: "Notificações",
                        }),
                        e.jsx("p", {
                          className: "text-sm text-gray-600",
                          children:
                            i > 0
                              ? `${i} não lida${i > 1 ? "s" : ""}`
                              : "Todas lidas",
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex items-center space-x-2",
                      children: [
                        i > 0 &&
                          e.jsx("button", {
                            onClick: E,
                            className:
                              "text-xs text-blue-600 hover:text-blue-800 transition-colors",
                            title: "Marcar todas como lidas",
                            children: e.jsx(us, { className: "h-4 w-4" }),
                          }),
                        e.jsx("button", {
                          onClick: () => t(!1),
                          className:
                            "text-gray-400 hover:text-gray-600 transition-colors",
                          children: e.jsx(ze, { className: "h-4 w-4" }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              e.jsx("div", {
                className: "flex-1 overflow-y-auto",
                children:
                  h.length === 0
                    ? e.jsxs("div", {
                        className: "p-8 text-center",
                        children: [
                          e.jsx(ct, {
                            className: "h-12 w-12 text-gray-300 mx-auto mb-4",
                          }),
                          e.jsx("p", {
                            className: "text-gray-500",
                            children: "Nenhuma notificação",
                          }),
                        ],
                      })
                    : e.jsx("div", {
                        className: "p-2",
                        children: h.map((A) =>
                          e.jsx(
                            "div",
                            {
                              className: `relative p-3 mb-2 rounded-lg border-l-4 transition-colors hover:bg-gray-50 ${A.read ? "bg-gray-50" : V(A.priority)} ${A.read ? "border-l-gray-200" : "border-l-4"}`,
                              children: e.jsxs("div", {
                                className: "flex items-start justify-between",
                                children: [
                                  e.jsxs("div", {
                                    className:
                                      "flex items-start space-x-3 flex-1 min-w-0",
                                    children: [
                                      e.jsx("div", {
                                        className: "flex-shrink-0 mt-1",
                                        children: C(A.type),
                                      }),
                                      e.jsxs("div", {
                                        className: "flex-1 min-w-0",
                                        children: [
                                          e.jsxs("div", {
                                            className:
                                              "flex items-center justify-between",
                                            children: [
                                              e.jsx("h4", {
                                                className: `text-sm font-medium ${A.read ? "text-gray-700" : "text-gray-900"} truncate`,
                                                children: A.title,
                                              }),
                                              e.jsx("span", {
                                                className:
                                                  "text-xs text-gray-500 ml-2 flex-shrink-0",
                                                children: U(A.timestamp),
                                              }),
                                            ],
                                          }),
                                          e.jsx("p", {
                                            className: `text-sm mt-1 ${A.read ? "text-gray-600" : "text-gray-700"}`,
                                            children: A.message,
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    className:
                                      "flex items-center space-x-1 ml-2 flex-shrink-0",
                                    children: [
                                      !A.read &&
                                        e.jsx("button", {
                                          onClick: () => D(A.id),
                                          className:
                                            "p-1 text-gray-400 hover:text-blue-600 transition-colors",
                                          title: "Marcar como lida",
                                          children: e.jsx(us, {
                                            className: "h-3 w-3",
                                          }),
                                        }),
                                      e.jsx("button", {
                                        onClick: () => O(A.id),
                                        className:
                                          "p-1 text-gray-400 hover:text-red-600 transition-colors",
                                        title: "Remover notificação",
                                        children: e.jsx(ze, {
                                          className: "h-3 w-3",
                                        }),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            },
                            A.id,
                          ),
                        ),
                      }),
              }),
              h.length > 0 &&
                e.jsx("div", {
                  className:
                    "p-3 border-t border-gray-200 bg-gray-50 rounded-b-lg",
                  children: e.jsx("button", {
                    onClick: F,
                    className:
                      "w-full text-sm text-red-600 hover:text-red-800 transition-colors",
                    children: "Limpar todas as notificações",
                  }),
                }),
            ],
          }),
      ],
    });
  },
  Fa = ({
    tabs: s = [],
    activeTab: t = "",
    onTabChange: x = () => {},
    pendingCancellations: h = 0,
  }) => {
    const { user: i, logout: D } = ts(),
      [E, O] = r.useState(!1);
    return e.jsx("header", {
      className:
        "bg-white shadow-sm border-b border-gray-200 sticky top-0 z-40",
      children: e.jsxs("div", {
        className: "mx-auto px-4 sm:px-6 lg:px-8",
        children: [
          e.jsxs("div", {
            className: "flex justify-between items-center py-3 lg:py-4",
            children: [
              e.jsxs("div", {
                className: "flex items-center flex-1 min-w-0",
                children: [
                  e.jsx("div", {
                    className:
                      "h-8 w-8 bg-blue-600 rounded-lg flex items-center justify-center mr-3 flex-shrink-0",
                    children: e.jsx("span", {
                      className: "text-white font-bold text-sm",
                      children: "SC",
                    }),
                  }),
                  e.jsxs("div", {
                    className: "min-w-0 flex-1",
                    children: [
                      e.jsx("h1", {
                        className:
                          "text-lg lg:text-xl font-bold text-gray-900 truncate",
                        children: "Sistema de Cobrança",
                      }),
                      e.jsx("p", {
                        className: "text-xs lg:text-sm text-gray-500 truncate",
                        children:
                          (i == null ? void 0 : i.type) === "manager"
                            ? "Painel Gerencial"
                            : "Carteira de Cobrança",
                      }),
                    ],
                  }),
                ],
              }),
              e.jsxs("div", {
                className: "hidden sm:flex items-center space-x-4",
                children: [
                  e.jsx(Rt, {}),
                  e.jsxs("div", {
                    className: "flex items-center space-x-3",
                    children: [
                      e.jsxs("div", {
                        className: "flex items-center space-x-2",
                        children: [
                          e.jsx("div", {
                            className:
                              "h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center",
                            children: e.jsx(Qe, {
                              className: "h-4 w-4 text-gray-600",
                            }),
                          }),
                          e.jsxs("div", {
                            children: [
                              e.jsx("p", {
                                className: "text-sm font-medium text-gray-900",
                                children: i == null ? void 0 : i.name,
                              }),
                              e.jsx("p", {
                                className: "text-xs text-gray-500 capitalize",
                                children:
                                  (i == null ? void 0 : i.type) === "manager"
                                    ? "Gerente"
                                    : "Cobrador",
                              }),
                            ],
                          }),
                        ],
                      }),
                      e.jsx("button", {
                        onClick: D,
                        className:
                          "p-2 text-gray-400 hover:text-red-600 transition-colors",
                        title: "Sair",
                        children: e.jsx(_t, { className: "h-5 w-5" }),
                      }),
                    ],
                  }),
                ],
              }),
              e.jsx("div", {
                className: "sm:hidden",
                children: e.jsx("button", {
                  onClick: () => O(!E),
                  className:
                    "p-2 text-gray-400 hover:text-gray-600 transition-colors",
                  children: E
                    ? e.jsx(ze, { className: "h-6 w-6" })
                    : e.jsx(ja, { className: "h-6 w-6" }),
                }),
              }),
            ],
          }),
          e.jsxs("div", {
            className: `sm:hidden fixed inset-0 z-50 transition-all duration-300 ease-in-out ${E ? "opacity-100 pointer-events-auto" : "opacity-0 pointer-events-none"}`,
            children: [
              e.jsx("div", {
                className: `absolute inset-0 bg-black backdrop-blur-md transition-all duration-300 ease-in-out ${E ? "bg-opacity-60" : "bg-opacity-0"}`,
                onClick: () => O(!1),
              }),
              e.jsxs("div", {
                className: `fixed left-0 top-0 h-full w-72 bg-white shadow-xl transform transition-all duration-300 ease-out overflow-hidden flex flex-col ${E ? "translate-x-0" : "-translate-x-full"}`,
                children: [
                  e.jsx("div", {
                    className: "p-4 border-b border-gray-100",
                    children: e.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        e.jsxs("div", {
                          className: "flex items-center space-x-3",
                          children: [
                            e.jsx("div", {
                              className:
                                "h-8 w-8 bg-blue-600 rounded-lg flex items-center justify-center",
                              children: e.jsx("span", {
                                className: "text-white font-semibold text-sm",
                                children: "SC",
                              }),
                            }),
                            e.jsx("h2", {
                              className: "text-lg font-semibold text-gray-900",
                              children: "Sistema de Cobrança",
                            }),
                          ],
                        }),
                        e.jsx("button", {
                          onClick: () => O(!1),
                          className:
                            "p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors",
                          children: e.jsx(ze, { className: "h-5 w-5" }),
                        }),
                      ],
                    }),
                  }),
                  e.jsx("div", {
                    className: "p-4 border-b border-gray-100",
                    children: e.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        e.jsxs("div", {
                          className: "flex items-center space-x-3",
                          children: [
                            e.jsx("div", {
                              className:
                                "h-10 w-10 bg-gray-100 rounded-full flex items-center justify-center",
                              children: e.jsx(Qe, {
                                className: "h-5 w-5 text-gray-600",
                              }),
                            }),
                            e.jsxs("div", {
                              className: "flex-1",
                              children: [
                                e.jsx("p", {
                                  className:
                                    "text-sm font-medium text-gray-900",
                                  children: i == null ? void 0 : i.name,
                                }),
                                e.jsx("p", {
                                  className: "text-xs text-gray-500 capitalize",
                                  children:
                                    (i == null ? void 0 : i.type) === "manager"
                                      ? "Gerente"
                                      : "Cobrador",
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsx(Rt, {}),
                      ],
                    }),
                  }),
                  s.length > 0 &&
                    e.jsx("div", {
                      className: "p-4 flex-1 overflow-y-auto",
                      children: e.jsx("nav", {
                        className: "space-y-1",
                        children: s.map((F) => {
                          const C = F.icon;
                          return e.jsxs(
                            "button",
                            {
                              onClick: () => {
                                (x(F.id), O(!1));
                              },
                              className: `group w-full flex items-center px-3 py-2 rounded-lg text-left transition-colors ${t === F.id ? "bg-blue-50 text-blue-700 border-l-3 border-blue-500" : "text-gray-700 hover:bg-gray-50"}`,
                              children: [
                                e.jsx(C, {
                                  className: `h-5 w-5 mr-3 ${t === F.id ? "text-blue-600" : "text-gray-400"}`,
                                }),
                                e.jsx("span", {
                                  className: "font-medium",
                                  children: F.name,
                                }),
                                F.id === "visit-tracking" &&
                                  h > 0 &&
                                  e.jsx("span", {
                                    className:
                                      "ml-auto h-5 w-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center font-medium",
                                    children: h,
                                  }),
                              ],
                            },
                            F.id,
                          );
                        }),
                      }),
                    }),
                  e.jsx("div", {
                    className:
                      "mt-auto p-4 border-t border-gray-200 bg-gray-50",
                    children: e.jsxs("button", {
                      onClick: D,
                      className:
                        "w-full flex items-center justify-center space-x-2 px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors font-medium",
                      title: "Sair",
                      children: [
                        e.jsx(_t, { className: "h-4 w-4" }),
                        e.jsx("span", { children: "Sair do Sistema" }),
                      ],
                    }),
                  }),
                ],
              }),
            ],
          }),
        ],
      }),
    });
  },
  ss = ({
    title: s,
    value: t,
    change: x,
    changeType: h = "neutral",
    icon: i,
    iconColor: D = "bg-blue-500",
    onClick: E,
  }) => {
    const O = () => {
      switch (h) {
        case "positive":
          return "text-green-600";
        case "negative":
          return "text-red-600";
        default:
          return "text-gray-600";
      }
    };
    return e.jsx("div", {
      className: `bg-white rounded-xl shadow-sm p-4 lg:p-6 border border-gray-100 hover:shadow-md hover:border-blue-200 transition-all ${E ? "cursor-pointer hover:shadow-lg" : ""}`,
      onClick: E,
      children: e.jsxs("div", {
        className: "flex items-center justify-between",
        children: [
          e.jsxs("div", {
            className: "flex-1 min-w-0",
            children: [
              e.jsx("p", {
                className:
                  "text-xs lg:text-sm font-medium text-gray-600 truncate",
                children: s,
              }),
              e.jsx("p", {
                className:
                  "text-lg lg:text-2xl font-bold text-gray-900 mt-1 lg:mt-2 truncate",
                children: t,
              }),
              x &&
                e.jsx("p", {
                  className: `text-xs lg:text-sm mt-1 lg:mt-2 ${O()} truncate`,
                  children: x,
                }),
            ],
          }),
          e.jsx("div", {
            className: `h-10 w-10 lg:h-12 lg:w-12 ${D} rounded-lg flex items-center justify-center flex-shrink-0 ml-3`,
            children: e.jsx(i, {
              className: "h-5 w-5 lg:h-6 lg:w-6 text-white",
            }),
          }),
        ],
      }),
    });
  };
var ms = ((s) => (
  (s.PENDENTE = "pendente"),
  (s.PAGO = "pago"),
  (s.PARCIAL = "parcial"),
  s
))(ms || {});
const Kt = { pendente: "Pendente", pago: "Pago", parcial: "Parcial" },
  La = (s) => {
    if (!s) return ms.PENDENTE;
    const t = s.toLowerCase().trim();
    return [
      "recebido",
      "pago",
      "paid",
      "received",
      "quitado",
      "finalizado",
    ].includes(t)
      ? ms.PAGO
      : [
            "parcialmente_pago",
            "parcialmente pago",
            "pago parcial",
            "partial",
            "parcial",
          ].includes(t)
        ? ms.PARCIAL
        : ms.PENDENTE;
  },
  ht = (s) => {
    const t = La(s);
    return Kt[t] || "Indefinido";
  },
  qa = () => Object.values(ms).map((s) => ({ value: s, label: Kt[s] })),
  q = (s, t = !0) =>
    new Intl.NumberFormat("pt-BR", {
      style: "currency",
      currency: "BRL",
      minimumFractionDigits: t ? 2 : 0,
      maximumFractionDigits: t ? 2 : 0,
    }).format(s),
  ls = (s) => {
    if (!s || s.toString().trim() === "" || s === "null" || s === "undefined")
      return "-";
    try {
      let t;
      const x = s.toString().trim();
      if (x.includes("-") && x.length >= 10)
        if (x.length === 10 && x.match(/^\d{4}-\d{2}-\d{2}$/)) {
          const [h, i, D] = x.split("-").map(Number);
          t = new Date(h, i - 1, D);
        } else t = new Date(x);
      else if (x.includes("/") || (x.includes("-") && x.length === 10)) {
        const h = x.split(/[\/\-]/);
        h.length === 3
          ? parseInt(h[0]) <= 31 && parseInt(h[1]) <= 12
            ? (t = new Date(`${h[2]}-${h[1]}-${h[0]}`))
            : (t = new Date(x))
          : (t = new Date(x));
      } else isNaN(Number(x)) ? (t = new Date(x)) : (t = new Date(Number(x)));
      return isNaN(t.getTime())
        ? (console.warn("Data inválida encontrada:", s), "-")
        : t.toLocaleDateString("pt-BR");
    } catch (t) {
      return (console.warn("Erro ao formatar data:", s, t), "-");
    }
  },
  bt = ({ filters: s, onFilterChange: t, userType: x }) => {
    var v;
    const {
        getAvailableStores: h,
        users: i,
        getCollectorCollections: D,
      } = Je(),
      { user: E } = ts(),
      [O, F] = Xe.useState(!1),
      C = h(),
      V = i.filter((j) => j.type === "collector"),
      A = (() => {
        if (x !== "collector" || !E) return C;
        const j = D(E.id);
        return Array.from(
          new Set(j.map((N) => N.nome_da_loja).filter(Boolean)),
        ).sort();
      })(),
      Q = () => {
        if (x !== "collector" || !E) return [];
        const j = D(E.id);
        return Array.from(
          new Set(j.map((N) => N.cidade).filter(Boolean)),
        ).sort();
      },
      ee = () => {
        if (x !== "collector" || !E) return [];
        const j = D(E.id);
        return Array.from(
          new Set(j.map((N) => N.bairro).filter(Boolean)),
        ).sort();
      },
      Y = Q(),
      G = ee(),
      L = (j) => {
        t({ ...s, status: j === "all" ? void 0 : j });
      },
      W = (j, z) => {
        t({ ...s, [j]: z === "all" ? void 0 : z });
      },
      T = (j) => {
        t({ ...s, search: j || void 0 });
      },
      p = () => {
        (t({}), F(!1));
      },
      I =
        s.status ||
        s.dueDate ||
        s.city ||
        s.neighborhood ||
        s.store ||
        s.collector ||
        s.search ||
        s.dateFrom ||
        s.dateTo ||
        s.minAmount ||
        s.maxAmount ||
        s.overdueOnly ||
        s.highValueOnly ||
        s.visitsOnly;
    return e.jsxs("div", {
      className: "bg-white rounded-lg shadow-sm border border-gray-200 mb-4",
      children: [
        e.jsx("div", {
          className: "p-6",
          children: e.jsxs("div", {
            className: "relative",
            children: [
              e.jsx(Vs, {
                className:
                  "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
              }),
              e.jsx("input", {
                type: "text",
                placeholder: "Buscar cliente, documento, título...",
                value: s.search || "",
                onChange: (j) => T(j.target.value),
                className:
                  "w-full pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
              }),
            ],
          }),
        }),
        e.jsx("div", {
          className: "px-6 pb-4",
          children: e.jsxs("div", {
            className: "flex flex-wrap gap-2",
            children: [
              e.jsx("button", {
                onClick: () =>
                  t({
                    ...s,
                    status: s.status === "pendente" ? void 0 : "pendente",
                  }),
                className: `px-3 py-2 text-xs font-medium rounded-full transition-colors ${s.status === "pendente" ? "bg-red-100 text-red-700 border border-red-300" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                children: "Pendente",
              }),
              e.jsx("button", {
                onClick: () =>
                  t({ ...s, status: s.status === "pago" ? void 0 : "pago" }),
                className: `px-3 py-2 text-xs font-medium rounded-full transition-colors ${s.status === "pago" ? "bg-green-100 text-green-700 border border-green-300" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                children: "Pago",
              }),
              e.jsx("button", {
                onClick: () =>
                  t({
                    ...s,
                    status: s.status === "parcial" ? void 0 : "parcial",
                  }),
                className: `px-3 py-2 text-xs font-medium rounded-full transition-colors ${s.status === "parcial" ? "bg-orange-100 text-orange-700 border border-orange-300" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                children: "Parcial",
              }),
            ],
          }),
        }),
        e.jsx("div", {
          className: "px-6 pb-4",
          children: e.jsxs("button", {
            onClick: () => F(!O),
            className:
              "w-full flex items-center justify-between py-2 px-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors",
            children: [
              e.jsxs("div", {
                className: "flex items-center",
                children: [
                  e.jsx(fs, { className: "h-4 w-4 text-gray-600 mr-2" }),
                  e.jsxs("span", {
                    className: "text-sm font-medium text-gray-700",
                    children: [
                      "Filtros avançados",
                      I &&
                        e.jsxs("span", {
                          className:
                            "ml-2 px-2 py-0.5 bg-blue-100 text-blue-700 text-xs rounded-full",
                          children: [
                            Object.values(s).filter(Boolean).length,
                            " ativos",
                          ],
                        }),
                    ],
                  }),
                ],
              }),
              e.jsxs("div", {
                className: "flex items-center",
                children: [
                  I &&
                    e.jsx("div", {
                      role: "button",
                      tabIndex: 0,
                      onClick: (j) => {
                        (j.stopPropagation(), p());
                      },
                      onKeyDown: (j) => {
                        (j.key === "Enter" || j.key === " ") &&
                          (j.stopPropagation(), p());
                      },
                      className:
                        "mr-2 p-1 text-red-600 hover:text-red-800 cursor-pointer",
                      children: e.jsx(ze, { className: "h-4 w-4" }),
                    }),
                  e.jsx("svg", {
                    className: `w-4 h-4 text-gray-500 transform transition-transform ${O ? "rotate-180" : ""}`,
                    fill: "none",
                    stroke: "currentColor",
                    viewBox: "0 0 24 24",
                    children: e.jsx("path", {
                      strokeLinecap: "round",
                      strokeLinejoin: "round",
                      strokeWidth: 2,
                      d: "M19 9l-7 7-7-7",
                    }),
                  }),
                ],
              }),
            ],
          }),
        }),
        O &&
          e.jsxs("div", {
            className:
              "px-4 sm:px-6 pb-6 space-y-4 border-t border-gray-200 pt-4",
            children: [
              e.jsxs("div", {
                className:
                  "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4",
                children: [
                  e.jsxs("div", {
                    children: [
                      e.jsx("label", {
                        className:
                          "block text-xs font-medium text-gray-700 mb-1",
                        children: "Status",
                      }),
                      e.jsxs("select", {
                        className:
                          "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                        value: s.status || "all",
                        onChange: (j) => L(j.target.value),
                        children: [
                          e.jsx("option", { value: "all", children: "Todos" }),
                          qa().map((j) =>
                            e.jsx(
                              "option",
                              { value: j.value, children: j.label },
                              j.value,
                            ),
                          ),
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "sm:col-span-2 lg:col-span-1",
                    children: [
                      e.jsx("label", {
                        className:
                          "block text-xs font-medium text-gray-700 mb-1",
                        children: "Período",
                      }),
                      e.jsxs("div", {
                        className: "grid grid-cols-1 sm:grid-cols-2 gap-2",
                        children: [
                          e.jsx("input", {
                            type: "date",
                            className:
                              "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                            value: s.dateFrom || "",
                            onChange: (j) =>
                              t({ ...s, dateFrom: j.target.value || void 0 }),
                            placeholder: "De",
                          }),
                          e.jsx("input", {
                            type: "date",
                            className:
                              "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                            value: s.dateTo || "",
                            onChange: (j) =>
                              t({ ...s, dateTo: j.target.value || void 0 }),
                            placeholder: "Até",
                          }),
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    children: [
                      e.jsx("label", {
                        className:
                          "block text-xs font-medium text-gray-700 mb-1",
                        children: "Loja",
                      }),
                      e.jsxs("select", {
                        className:
                          "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                        value: s.store || "all",
                        onChange: (j) =>
                          t({
                            ...s,
                            store:
                              j.target.value === "all"
                                ? void 0
                                : j.target.value,
                          }),
                        children: [
                          e.jsx("option", { value: "all", children: "Todas" }),
                          A.filter((j) => j !== null).map((j) =>
                            e.jsx("option", { value: j, children: j }, j),
                          ),
                        ],
                      }),
                    ],
                  }),
                  x === "manager" &&
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-xs font-medium text-gray-700 mb-1",
                          children: "Cobrador",
                        }),
                        e.jsxs("select", {
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                          value: s.collector || "all",
                          onChange: (j) =>
                            t({
                              ...s,
                              collector:
                                j.target.value === "all"
                                  ? void 0
                                  : j.target.value,
                            }),
                          children: [
                            e.jsx("option", {
                              value: "all",
                              children: "Todos",
                            }),
                            V.map((j) =>
                              e.jsx(
                                "option",
                                { value: j.id, children: j.name },
                                j.id,
                              ),
                            ),
                          ],
                        }),
                      ],
                    }),
                  x === "collector" &&
                    e.jsxs(e.Fragment, {
                      children: [
                        e.jsxs("div", {
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-xs font-medium text-gray-700 mb-1",
                              children: "Cidade",
                            }),
                            e.jsxs("select", {
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                              value: s.city || "all",
                              onChange: (j) => W("city", j.target.value),
                              children: [
                                e.jsx("option", {
                                  value: "all",
                                  children: "Todas",
                                }),
                                Y.filter((j) => j !== null).map((j) =>
                                  e.jsx("option", { value: j, children: j }, j),
                                ),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-xs font-medium text-gray-700 mb-1",
                              children: "Bairro",
                            }),
                            e.jsxs("select", {
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                              value: s.neighborhood || "all",
                              onChange: (j) =>
                                W("neighborhood", j.target.value),
                              children: [
                                e.jsx("option", {
                                  value: "all",
                                  children: "Todos",
                                }),
                                G.filter((j) => j !== null).map((j) =>
                                  e.jsx("option", { value: j, children: j }, j),
                                ),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                  e.jsxs("div", {
                    className: "sm:col-span-2 lg:col-span-1",
                    children: [
                      e.jsx("label", {
                        className:
                          "block text-xs font-medium text-gray-700 mb-1",
                        children: "Valor",
                      }),
                      e.jsxs("div", {
                        className: "grid grid-cols-2 gap-2",
                        children: [
                          e.jsx("input", {
                            type: "number",
                            placeholder: "Mínimo",
                            className:
                              "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                            value: s.minAmount || "",
                            onChange: (j) =>
                              t({
                                ...s,
                                minAmount: j.target.value
                                  ? parseFloat(j.target.value)
                                  : void 0,
                              }),
                          }),
                          e.jsx("input", {
                            type: "number",
                            placeholder: "Máximo",
                            className:
                              "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm",
                            value: s.maxAmount || "",
                            onChange: (j) =>
                              t({
                                ...s,
                                maxAmount: j.target.value
                                  ? parseFloat(j.target.value)
                                  : void 0,
                              }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  x === "collector" &&
                    e.jsxs("div", {
                      className: "sm:col-span-2 lg:col-span-3",
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-xs font-medium text-gray-700 mb-1",
                          children: "Filtro de Visitas",
                        }),
                        e.jsx("div", {
                          className: "flex items-center space-x-4",
                          children: e.jsxs("button", {
                            onClick: () =>
                              t({ ...s, visitsOnly: !s.visitsOnly }),
                            className: `px-3 py-2 text-sm rounded-lg border transition-colors ${s.visitsOnly ? "bg-blue-600 text-white border-blue-600 hover:bg-blue-700" : "bg-white text-gray-700 border-gray-300 hover:bg-gray-50"}`,
                            children: [
                              s.visitsOnly ? "✓ " : "",
                              "Mostrar apenas clientes com visitas agendadas",
                            ],
                          }),
                        }),
                      ],
                    }),
                ],
              }),
              I &&
                e.jsxs("div", {
                  className: "mt-4 p-3 bg-gray-50 rounded-lg",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center justify-between mb-2",
                      children: [
                        e.jsx("h4", {
                          className: "text-xs font-medium text-gray-600",
                          children: "Filtros ativos:",
                        }),
                        e.jsx("button", {
                          onClick: p,
                          className:
                            "text-xs text-red-600 hover:text-red-800 font-medium",
                          children: "Limpar tudo",
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex flex-wrap gap-1",
                      children: [
                        s.status &&
                          e.jsxs("span", {
                            className:
                              "inline-flex items-center px-2 py-1 rounded text-xs bg-gray-200 text-gray-700",
                            children: [
                              "Status: ",
                              s.status,
                              e.jsx("button", {
                                onClick: () => t({ ...s, status: void 0 }),
                                className:
                                  "ml-1 text-gray-500 hover:text-gray-700",
                                children: "×",
                              }),
                            ],
                          }),
                        s.store &&
                          e.jsxs("span", {
                            className:
                              "inline-flex items-center px-2 py-1 rounded text-xs bg-gray-200 text-gray-700",
                            children: [
                              "Loja: ",
                              s.store,
                              e.jsx("button", {
                                onClick: () => t({ ...s, store: void 0 }),
                                className:
                                  "ml-1 text-gray-500 hover:text-gray-700",
                                children: "×",
                              }),
                            ],
                          }),
                        s.collector &&
                          e.jsxs("span", {
                            className:
                              "inline-flex items-center px-2 py-1 rounded text-xs bg-gray-200 text-gray-700",
                            children: [
                              "Cobrador:",
                              " ",
                              (v = V.find((j) => j.id === s.collector)) == null
                                ? void 0
                                : v.name,
                              e.jsx("button", {
                                onClick: () => t({ ...s, collector: void 0 }),
                                className:
                                  "ml-1 text-gray-500 hover:text-gray-700",
                                children: "×",
                              }),
                            ],
                          }),
                        s.city &&
                          e.jsxs("span", {
                            className:
                              "inline-flex items-center px-2 py-1 rounded text-xs bg-gray-200 text-gray-700",
                            children: [
                              "Cidade: ",
                              s.city,
                              e.jsx("button", {
                                onClick: () => t({ ...s, city: void 0 }),
                                className:
                                  "ml-1 text-gray-500 hover:text-gray-700",
                                children: "×",
                              }),
                            ],
                          }),
                        s.visitsOnly &&
                          e.jsxs("span", {
                            className:
                              "inline-flex items-center px-2 py-1 rounded text-xs bg-blue-100 text-blue-700",
                            children: [
                              "Apenas com visitas",
                              e.jsx("button", {
                                onClick: () => t({ ...s, visitsOnly: void 0 }),
                                className:
                                  "ml-1 text-blue-500 hover:text-blue-700",
                                children: "×",
                              }),
                            ],
                          }),
                      ],
                    }),
                  ],
                }),
            ],
          }),
      ],
    });
  },
  Tt = ({ collection: s, userType: t, onClose: x }) => {
    const { updateCollection: h, addAttempt: i } = Je(),
      [D, E] = r.useState("details"),
      [O, F] = r.useState(s.status || ""),
      [C, V] = r.useState({
        type: "call",
        result: "no_answer",
        notes: "",
        nextAction: "",
        nextActionDate: "",
      }),
      [U, A] = r.useState(s.obs || ""),
      [Q, ee] = r.useState(s.valor_recebido.toString()),
      [Y, G] = r.useState(
        s.data_de_recebimento || new Date().toISOString().split("T")[0],
      ),
      L = async () => {
        const v = { status: O };
        (O.toLowerCase() === "recebido" &&
          ((v.valor_recebido = s.valor_original),
          (v.data_de_recebimento = new Date().toISOString().split("T")[0])),
          await h(s.id_parcela, v),
          x());
      },
      W = async () => {
        C.notes.trim() &&
          (await i(s.id_parcela, {
            ...C,
            date: new Date().toISOString().split("T")[0],
          }),
          V({
            type: "call",
            result: "no_answer",
            notes: "",
            nextAction: "",
            nextActionDate: "",
          }),
          E("attempts"));
      },
      T = async () => {
        (await h(s.id_parcela, { obs: U }), x());
      },
      p = async () => {
        const v = parseFloat(Q) || 0;
        if (v < 0) {
          alert("O valor não pode ser negativo");
          return;
        }
        if (
          v > s.valor_original &&
          !window.confirm(
            `O valor informado (${q(v)}) é maior que o valor original (${q(s.valor_original)}). Deseja continuar?`,
          )
        )
          return;
        const j = { valor_recebido: v, data_de_recebimento: Y || null };
        (v === 0
          ? (j.status = "pendente")
          : v >= s.valor_original
            ? (j.status = "recebido")
            : (j.status = "parcialmente_pago"),
          await h(s.id_parcela, j),
          x());
      },
      I = [
        { id: "details", name: "Detalhes", icon: Oe },
        { id: "attempts", name: "Tentativas", icon: bs },
        ...(t === "collector"
          ? [{ id: "action", name: "Ações", icon: Le }]
          : []),
      ];
    return e.jsx("div", {
      className:
        "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
      children: e.jsxs("div", {
        className:
          "bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden",
        children: [
          e.jsxs("div", {
            className:
              "px-6 py-4 border-b border-gray-200 flex items-center justify-between",
            children: [
              e.jsxs("div", {
                children: [
                  e.jsx("h2", {
                    className: "text-xl font-semibold text-gray-900",
                    children: s.cliente,
                  }),
                  e.jsx("p", {
                    className: "text-sm text-gray-600",
                    children: s.documento,
                  }),
                ],
              }),
              e.jsx("button", {
                onClick: x,
                className:
                  "p-2 text-gray-400 hover:text-gray-600 transition-colors",
                children: e.jsx(ze, { className: "h-5 w-5" }),
              }),
            ],
          }),
          e.jsx("div", {
            className: "border-b border-gray-200",
            children: e.jsx("nav", {
              className: "flex",
              children: I.map((v) => {
                const j = v.icon;
                return e.jsxs(
                  "button",
                  {
                    onClick: () => E(v.id),
                    className: `flex items-center px-6 py-3 font-medium text-sm ${D === v.id ? "border-b-2 border-blue-500 text-blue-600" : "text-gray-500 hover:text-gray-700"}`,
                    children: [e.jsx(j, { className: "h-4 w-4 mr-2" }), v.name],
                  },
                  v.id,
                );
              }),
            }),
          }),
          e.jsxs("div", {
            className: "p-6 overflow-y-auto max-h-[60vh]",
            children: [
              D === "details" &&
                e.jsxs("div", {
                  className: "space-y-6",
                  children: [
                    e.jsxs("div", {
                      className: "grid grid-cols-1 md:grid-cols-2 gap-6",
                      children: [
                        e.jsxs("div", {
                          className: "space-y-4",
                          children: [
                            e.jsx("h3", {
                              className: "text-lg font-medium text-gray-900",
                              children: "Informações da Cobrança",
                            }),
                            e.jsxs("div", {
                              className: "space-y-3",
                              children: [
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Loja",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: s.nome_da_loja,
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Número da Venda",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: s.venda_n,
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Parcela",
                                    }),
                                    e.jsxs("p", {
                                      className: "text-gray-900",
                                      children: [
                                        s.parcela,
                                        " - ",
                                        s.numero_titulo,
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Tipo de Cobrança",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: s.tipo_de_cobranca,
                                    }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "space-y-4",
                          children: [
                            e.jsx("h3", {
                              className: "text-lg font-medium text-gray-900",
                              children: "Valores e Datas",
                            }),
                            e.jsxs("div", {
                              className: "space-y-3",
                              children: [
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Valor Original",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: q(s.valor_original),
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Valor da Cobrança",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900 font-medium",
                                      children: q(s.valor_original),
                                    }),
                                    s.valor_original !== s.valor_reajustado &&
                                      e.jsxs("p", {
                                        className: "text-sm text-gray-500",
                                        children: [
                                          "Valor ajustado:",
                                          " ",
                                          q(s.valor_reajustado),
                                        ],
                                      }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Valor Recebido",
                                    }),
                                    e.jsx("p", {
                                      className: `font-medium ${s.valor_recebido > 0 ? "text-green-600" : "text-gray-500"}`,
                                      children: q(s.valor_recebido),
                                    }),
                                    s.valor_recebido > 0 &&
                                      s.valor_recebido < s.valor_original &&
                                      e.jsxs("p", {
                                        className: "text-sm text-red-600",
                                        children: [
                                          "Restante:",
                                          " ",
                                          q(
                                            s.valor_original - s.valor_recebido,
                                          ),
                                        ],
                                      }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Data de Vencimento",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: ls(s.data_vencimento || ""),
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("label", {
                                      className:
                                        "text-sm font-medium text-gray-700",
                                      children: "Status",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-900",
                                      children: ht(s.status || ""),
                                    }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-4",
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-medium text-gray-900",
                          children: "Contato e Endereço",
                        }),
                        e.jsxs("div", {
                          className: "grid grid-cols-1 md:grid-cols-2 gap-6",
                          children: [
                            e.jsxs("div", {
                              className: "space-y-3",
                              children: [
                                s.telefone &&
                                  e.jsxs("div", {
                                    className: "flex items-center",
                                    children: [
                                      e.jsx(bs, {
                                        className: "h-4 w-4 text-gray-400 mr-2",
                                      }),
                                      e.jsx("span", { children: s.telefone }),
                                    ],
                                  }),
                                s.celular &&
                                  e.jsxs("div", {
                                    className: "flex items-center",
                                    children: [
                                      e.jsx(Mt, {
                                        className: "h-4 w-4 text-gray-400 mr-2",
                                      }),
                                      e.jsx("span", { children: s.celular }),
                                    ],
                                  }),
                              ],
                            }),
                            e.jsxs("div", {
                              className: "flex items-start",
                              children: [
                                e.jsx(Fe, {
                                  className: "h-4 w-4 text-gray-400 mr-2 mt-1",
                                }),
                                e.jsxs("div", {
                                  children: [
                                    e.jsxs("p", {
                                      children: [s.endereco, ", ", s.numero],
                                    }),
                                    s.complemento &&
                                      e.jsx("p", { children: s.complemento }),
                                    e.jsxs("p", {
                                      children: [
                                        s.bairro,
                                        " - ",
                                        s.cidade,
                                        "/",
                                        s.estado,
                                      ],
                                    }),
                                    e.jsx("p", { children: s.cep }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-4",
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-medium text-gray-900",
                          children: "Observações",
                        }),
                        e.jsx("textarea", {
                          value: U,
                          onChange: (v) => A(v.target.value),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          rows: 3,
                          placeholder:
                            "Adicione observações sobre este cliente...",
                          disabled: t === "manager",
                        }),
                        t === "collector" &&
                          e.jsxs("button", {
                            onClick: T,
                            className:
                              "inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors",
                            children: [
                              e.jsx(va, { className: "h-4 w-4 mr-2" }),
                              "Salvar Observações",
                            ],
                          }),
                      ],
                    }),
                  ],
                }),
              D === "attempts" &&
                e.jsxs("div", {
                  className: "space-y-6",
                  children: [
                    e.jsx("h3", {
                      className: "text-lg font-medium text-gray-900",
                      children: "Histórico de Tentativas",
                    }),
                    e.jsxs("div", {
                      className: "text-center py-8",
                      children: [
                        e.jsx("p", {
                          className: "text-gray-500",
                          children: "Nenhuma tentativa registrada",
                        }),
                        e.jsx("p", {
                          className: "text-sm text-gray-400 mt-2",
                          children:
                            'Use a aba "Ações" para registrar tentativas de contato',
                        }),
                      ],
                    }),
                  ],
                }),
              D === "action" &&
                t === "collector" &&
                e.jsxs("div", {
                  className: "space-y-6",
                  children: [
                    e.jsxs("div", {
                      className: "space-y-4",
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-medium text-gray-900",
                          children: "Atualizar Status",
                        }),
                        e.jsxs("div", {
                          className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Novo Status",
                                }),
                                e.jsxs("select", {
                                  value: O,
                                  onChange: (v) => F(v.target.value),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                  children: [
                                    e.jsx("option", {
                                      value: "pendente",
                                      children: "Pendente",
                                    }),
                                    e.jsx("option", {
                                      value: "em_negociacao",
                                      children: "Em Negociação",
                                    }),
                                    e.jsx("option", {
                                      value: "acordado",
                                      children: "Acordado",
                                    }),
                                    e.jsx("option", {
                                      value: "recebido",
                                      children: "Recebido",
                                    }),
                                  ],
                                }),
                              ],
                            }),
                            e.jsx("div", {
                              className: "flex items-end",
                              children: e.jsx("button", {
                                onClick: L,
                                className:
                                  "w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors",
                                children: "Atualizar Status",
                              }),
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-4 border-t border-gray-200 pt-6",
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-medium text-gray-900",
                          children: "Corrigir Valor Pago",
                        }),
                        e.jsxs("p", {
                          className: "text-sm text-gray-600",
                          children: [
                            "Valor atual recebido:",
                            " ",
                            e.jsx("span", {
                              className: "font-semibold",
                              children: q(s.valor_recebido),
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Novo Valor Recebido",
                                }),
                                e.jsxs("div", {
                                  className: "relative",
                                  children: [
                                    e.jsx(Oe, {
                                      className:
                                        "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                                    }),
                                    e.jsx("input", {
                                      type: "number",
                                      step: "0.01",
                                      min: "0",
                                      value: Q,
                                      onChange: (v) => ee(v.target.value),
                                      className:
                                        "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                      placeholder: "0,00",
                                    }),
                                  ],
                                }),
                              ],
                            }),
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Data do Recebimento",
                                }),
                                e.jsx("input", {
                                  type: "date",
                                  value: Y,
                                  onChange: (v) => G(v.target.value),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsx("div", {
                          className:
                            "flex justify-between items-center p-3 bg-blue-50 rounded-lg",
                          children: e.jsxs("div", {
                            className: "text-sm",
                            children: [
                              e.jsxs("p", {
                                className: "text-gray-600",
                                children: [
                                  "Valor original:",
                                  " ",
                                  e.jsx("span", {
                                    className: "font-semibold",
                                    children: q(s.valor_original),
                                  }),
                                ],
                              }),
                              e.jsxs("p", {
                                className: "text-gray-600",
                                children: [
                                  "Novo valor recebido:",
                                  " ",
                                  e.jsx("span", {
                                    className: "font-semibold",
                                    children: q(parseFloat(Q) || 0),
                                  }),
                                ],
                              }),
                              e.jsxs("p", {
                                className: "text-gray-600",
                                children: [
                                  "Restante:",
                                  " ",
                                  e.jsx("span", {
                                    className: "font-semibold text-red-600",
                                    children: q(
                                      Math.max(
                                        0,
                                        s.valor_original - (parseFloat(Q) || 0),
                                      ),
                                    ),
                                  }),
                                ],
                              }),
                            ],
                          }),
                        }),
                        e.jsx("button", {
                          onClick: p,
                          className:
                            "w-full bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors",
                          children: "Atualizar Valor Pago",
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-4 border-t border-gray-200 pt-6",
                      children: [
                        e.jsx("h3", {
                          className: "text-lg font-medium text-gray-900",
                          children: "Registrar Tentativa",
                        }),
                        e.jsxs("div", {
                          className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Tipo de Contato",
                                }),
                                e.jsxs("select", {
                                  value: C.type,
                                  onChange: (v) =>
                                    V({ ...C, type: v.target.value }),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                  children: [
                                    e.jsx("option", {
                                      value: "call",
                                      children: "Ligação",
                                    }),
                                    e.jsx("option", {
                                      value: "visit",
                                      children: "Visita",
                                    }),
                                    e.jsx("option", {
                                      value: "email",
                                      children: "E-mail",
                                    }),
                                    e.jsx("option", {
                                      value: "whatsapp",
                                      children: "WhatsApp",
                                    }),
                                  ],
                                }),
                              ],
                            }),
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Resultado",
                                }),
                                e.jsxs("select", {
                                  value: C.result,
                                  onChange: (v) =>
                                    V({ ...C, result: v.target.value }),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                  children: [
                                    e.jsx("option", {
                                      value: "no_answer",
                                      children: "Não atendeu",
                                    }),
                                    e.jsx("option", {
                                      value: "busy",
                                      children: "Ocupado",
                                    }),
                                    e.jsx("option", {
                                      value: "not_found",
                                      children: "Não encontrado",
                                    }),
                                    e.jsx("option", {
                                      value: "promise",
                                      children: "Promessa de pagamento",
                                    }),
                                    e.jsx("option", {
                                      value: "refusal",
                                      children: "Recusa",
                                    }),
                                    e.jsx("option", {
                                      value: "partial_payment",
                                      children: "Pagamento parcial",
                                    }),
                                    e.jsx("option", {
                                      value: "full_payment",
                                      children: "Pagamento total",
                                    }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-sm font-medium text-gray-700 mb-2",
                              children: "Observações",
                            }),
                            e.jsx("textarea", {
                              value: C.notes,
                              onChange: (v) =>
                                V({ ...C, notes: v.target.value }),
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                              rows: 3,
                              placeholder:
                                "Descreva o resultado da tentativa...",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Próxima Ação",
                                }),
                                e.jsx("input", {
                                  type: "text",
                                  value: C.nextAction,
                                  onChange: (v) =>
                                    V({ ...C, nextAction: v.target.value }),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                  placeholder: "Ex: Ligar novamente...",
                                }),
                              ],
                            }),
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  className:
                                    "block text-sm font-medium text-gray-700 mb-2",
                                  children: "Data da Próxima Ação",
                                }),
                                e.jsx("input", {
                                  type: "date",
                                  value: C.nextActionDate,
                                  onChange: (v) =>
                                    V({ ...C, nextActionDate: v.target.value }),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("button", {
                          onClick: W,
                          disabled: !C.notes.trim(),
                          className:
                            "inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
                          children: [
                            e.jsx(Js, { className: "h-4 w-4 mr-2" }),
                            "Registrar Tentativa",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
            ],
          }),
        ],
      }),
    });
  };
class as {
  static async createAuthorizationRequest(t) {
    const { data: x, error: h } = await De.from("authorization_history")
      .insert({
        token: t.token,
        collector_id: t.collector_id,
        collector_name: t.collector_name,
        client_name: t.client_name,
        client_document: t.client_document,
        requested_at: new Date().toISOString(),
        expires_at: t.expires_at,
        status: "pending",
        notes: t.notes,
      })
      .select()
      .single();
    if (h)
      throw new Error(`Failed to create authorization request: ${h.message}`);
    return x;
  }
  static async getPendingRequests() {
    const { data: t, error: x } = await De.from("authorization_history")
      .select("*")
      .eq("status", "pending")
      .gt("expires_at", new Date().toISOString())
      .order("requested_at", { ascending: !1 });
    if (x) throw new Error(`Failed to get pending requests: ${x.message}`);
    return t || [];
  }
  static async getRecentlyProcessedRequests() {
    const t = new Date();
    t.setDate(t.getDate() - 1);
    const { data: x, error: h } = await De.from("authorization_history")
      .select("*")
      .in("status", ["approved", "rejected"])
      .gte("processed_at", t.toISOString())
      .order("processed_at", { ascending: !1 });
    if (h)
      throw new Error(
        `Failed to get recently processed requests: ${h.message}`,
      );
    return x || [];
  }
  static async getExpiredRequests() {
    const { data: t, error: x } = await De.from("authorization_history")
      .select("*")
      .or(`status.eq.expired,expires_at.lt.${new Date().toISOString()}`)
      .order("requested_at", { ascending: !1 });
    if (x) throw new Error(`Failed to get expired requests: ${x.message}`);
    return t || [];
  }
  static async approveRequest(t, x, h) {
    const { data: i, error: D } = await De.from("authorization_history")
      .update({
        status: "approved",
        processed_at: new Date().toISOString(),
        processed_by_id: x,
        processed_by_name: h,
      })
      .eq("token", t)
      .eq("status", "pending")
      .select()
      .single();
    if (D) throw new Error(`Failed to approve request: ${D.message}`);
    return i;
  }
  static async rejectRequest(t, x, h, i) {
    const { data: D, error: E } = await De.from("authorization_history")
      .update({
        status: "rejected",
        processed_at: new Date().toISOString(),
        processed_by_id: x,
        processed_by_name: h,
        notes: i || void 0,
      })
      .eq("token", t)
      .eq("status", "pending")
      .select()
      .single();
    if (E) throw new Error(`Failed to reject request: ${E.message}`);
    return D;
  }
  static async markExpiredRequests() {
    const { error: t } = await De.from("authorization_history")
      .update({
        status: "expired",
        processed_at: new Date().toISOString(),
        processed_by_name: "Sistema",
      })
      .eq("status", "pending")
      .lt("expires_at", new Date().toISOString());
    if (t) throw new Error(`Failed to mark expired requests: ${t.message}`);
  }
  static async expirePreviousRequests(t, x) {
    const { error: h } = await De.from("authorization_history")
      .update({
        status: "expired",
        processed_at: new Date().toISOString(),
        processed_by_name: "Sistema - Nova solicitação",
      })
      .eq("collector_id", t)
      .eq("client_document", x)
      .eq("status", "pending");
    if (h) throw new Error(`Failed to expire previous requests: ${h.message}`);
  }
  static async getAuthorizationHistory(t = {}) {
    const {
      status: x = "all",
      searchTerm: h,
      dateFilter: i,
      page: D = 1,
      limit: E = 10,
    } = t;
    let O = De.from("authorization_history").select("*", { count: "exact" });
    if (
      (x !== "all" &&
        (x === "expired"
          ? (O = O.or(
              `status.eq.expired,expires_at.lt.${new Date().toISOString()}`,
            ))
          : (O = O.eq("status", x))),
      h &&
        (O = O.or(
          `collector_name.ilike.%${h}%,client_name.ilike.%${h}%,client_document.ilike.%${h}%,token.ilike.%${h}%`,
        )),
      i)
    ) {
      const Y = new Date(i),
        G = new Date(Y.setHours(0, 0, 0, 0)).toISOString(),
        L = new Date(Y.setHours(23, 59, 59, 999)).toISOString();
      O = O.gte("requested_at", G).lte("requested_at", L);
    }
    const F = (D - 1) * E,
      C = F + E - 1,
      {
        data: V,
        error: U,
        count: A,
      } = await O.order("requested_at", { ascending: !1 }).range(F, C);
    if (U) throw new Error(`Failed to get authorization history: ${U.message}`);
    const Q = A || 0,
      ee = Math.ceil(Q / E);
    return { data: V || [], total: Q, page: D, totalPages: ee };
  }
  static async getAuthorizationStats() {
    const { data: t, error: x } = await De.from("authorization_history").select(
      "status, expires_at",
    );
    if (x) throw new Error(`Failed to get authorization stats: ${x.message}`);
    const h = (t == null ? void 0 : t.length) || 0,
      i =
        (t == null
          ? void 0
          : t.filter((F) => F.status === "approved").length) || 0,
      D =
        (t == null
          ? void 0
          : t.filter((F) => F.status === "rejected").length) || 0,
      E =
        (t == null
          ? void 0
          : t.filter(
              (F) =>
                F.status === "expired" || new Date(F.expires_at) < new Date(),
            ).length) || 0,
      O = h > 0 ? (i / h) * 100 : 0;
    return { total: h, approved: i, rejected: D, expired: E, approvalRate: O };
  }
  static async getAuthorizationByToken(t) {
    const { data: x, error: h } = await De.from("authorization_history")
      .select("*")
      .eq("token", t)
      .single();
    if (h) {
      if (h.code === "PGRST116") return null;
      throw new Error(`Failed to get authorization by token: ${h.message}`);
    }
    return x;
  }
  static async validateToken(t) {
    try {
      const x = await this.getAuthorizationByToken(t);
      return x
        ? x.status !== "approved"
          ? x.status === "pending"
            ? {
                isValid: !1,
                error: "Token ainda não foi aprovado pelo gerente",
              }
            : x.status === "rejected"
              ? { isValid: !1, error: "Token foi rejeitado pelo gerente" }
              : { isValid: !1, error: "Token expirado" }
          : new Date(x.expires_at) < new Date()
            ? (await this.markExpiredRequests(),
              { isValid: !1, error: "Token expirado" })
            : { isValid: !0, authorization: x }
        : { isValid: !1, error: "Token não encontrado" };
    } catch {
      return { isValid: !1, error: "Erro ao validar token" };
    }
  }
  static async exportAuthorizationHistory(t = {}) {
    const { data: x } = await this.getAuthorizationHistory({
        ...t,
        limit: 1e4,
      }),
      h = `Token,Cobrador,Cliente,Documento,Data Solicitação,Data Processamento,Status,Processado Por,Observações
`,
      i = x.map((D) => {
        const E = (F) => new Date(F).toLocaleString("pt-BR"),
          O = {
            approved: "Aprovado",
            rejected: "Rejeitado",
            expired: "Expirado",
            pending: "Pendente",
          };
        return [
          D.token,
          D.collector_name,
          D.client_name,
          D.client_document,
          E(D.requested_at),
          D.processed_at ? E(D.processed_at) : "-",
          O[D.status],
          D.processed_by_name || "-",
          D.notes || "-",
        ]
          .map((F) => `"${F}"`)
          .join(",");
      });
    return (
      h +
      i.join(`
`)
    );
  }
}
const Ba = ({ saleGroup: s, onClose: t, onSuccess: x }) => {
    var I;
    const { processSalePayment: h, calculateSaleBalance: i } = Je(),
      { user: D } = ts(),
      [E, O] = r.useState(""),
      [F, C] = r.useState("dinheiro"),
      [V, U] = r.useState(""),
      [A, Q] = r.useState(!1),
      [ee, Y] = r.useState(!1);
    r.useEffect(
      () => (
        (document.body.style.overflow = "hidden"),
        () => {
          document.body.style.overflow = "unset";
        }
      ),
      [],
    );
    const G = i(s.saleNumber, s.clientDocument),
      L = () => {
        const v = parseFloat(E) || 0;
        if (v <= 0) return [];
        const j = s.installments
          .filter((H) => H.valor_recebido < H.valor_original)
          .sort((H, w) => {
            const y = new Date();
            y.setHours(0, 0, 0, 0);
            const S = new Date(H.data_vencimento || ""),
              _ = new Date(w.data_vencimento || "");
            (S.setHours(0, 0, 0, 0), _.setHours(0, 0, 0, 0));
            const J = S < y,
              Z = _ < y;
            return J && !Z ? -1 : !J && Z ? 1 : S.getTime() - _.getTime();
          });
        let z = v;
        const N = [];
        for (const H of j) {
          if (z <= 0) break;
          const w = H.valor_original - H.valor_recebido,
            y = Math.min(z, w);
          y > 0 &&
            (N.push({
              installment: H,
              appliedAmount: y,
              newTotal: H.valor_recebido + y,
              willBeComplete: H.valor_recebido + y >= H.valor_original,
            }),
            (z -= y));
        }
        return N;
      },
      W = async (v) => {
        if ((v.preventDefault(), !D)) {
          alert("Usuário não identificado");
          return;
        }
        const j = parseFloat(E);
        if (j <= 0) {
          alert("Digite um valor válido para o pagamento");
          return;
        }
        if (
          !(
            j > G.remainingBalance &&
            !confirm(`O valor informado (${q(j)}) é maior que o saldo devedor (${q(G.remainingBalance)}).

Deseja prosseguir assim mesmo?`)
          )
        )
          try {
            Q(!0);
            const z = {
              saleNumber: s.saleNumber,
              clientDocument: s.clientDocument,
              paymentAmount: j,
              paymentMethod: F,
              notes: V.trim() || void 0,
            };
            await h(z, D.id);
            const N = document.createElement("div");
            ((N.className =
              "fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
              (N.innerHTML = `
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>
        Pagamento de ${q(j)} processado com sucesso!
      `),
              document.body.appendChild(N),
              setTimeout(() => {
                document.body.contains(N) && document.body.removeChild(N);
              }, 5e3),
              x(),
              t());
          } catch (z) {
            console.error("Erro ao processar pagamento:", z);
            const N = document.createElement("div");
            ((N.className =
              "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
              (N.innerHTML = `
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
        </svg>
        Erro ao processar pagamento. Tente novamente.
      `),
              document.body.appendChild(N),
              setTimeout(() => document.body.removeChild(N), 5e3));
          } finally {
            Q(!1);
          }
      },
      T = L(),
      p = parseFloat(E) > 0;
    return e.jsx("div", {
      className:
        "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-2 sm:p-4",
      children: e.jsxs("div", {
        className:
          "bg-white rounded-xl max-w-6xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-hidden shadow-2xl",
        children: [
          e.jsxs("div", {
            className:
              "sticky top-0 bg-gradient-to-r from-green-600 to-emerald-600 text-white px-4 sm:px-6 py-4 flex items-center justify-between",
            children: [
              e.jsxs("div", {
                className: "flex items-center flex-1 min-w-0",
                children: [
                  e.jsx(ut, {
                    className:
                      "h-5 w-5 sm:h-6 sm:w-6 text-white mr-2 sm:mr-3 flex-shrink-0",
                  }),
                  e.jsxs("div", {
                    className: "min-w-0 flex-1",
                    children: [
                      e.jsx("h2", {
                        className:
                          "text-lg sm:text-xl font-bold text-white truncate",
                        children: "Receber Pagamento da Venda",
                      }),
                      e.jsxs("p", {
                        className: "text-sm text-green-100 truncate",
                        children: [
                          "Venda #",
                          s.saleNumber,
                          " - ",
                          (I = s.installments[0]) == null ? void 0 : I.cliente,
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              e.jsx("button", {
                onClick: t,
                className:
                  "p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors flex-shrink-0",
                children: e.jsx(ze, { className: "h-5 w-5 text-white" }),
              }),
            ],
          }),
          e.jsx("div", {
            className:
              "overflow-y-auto max-h-[calc(95vh-180px)] sm:max-h-[calc(90vh-180px)]",
            children: e.jsxs("form", {
              onSubmit: W,
              className: "p-4 sm:p-6",
              children: [
                e.jsxs("div", {
                  className:
                    "bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl p-4 sm:p-6 mb-6 border border-green-200",
                  children: [
                    e.jsxs("h3", {
                      className:
                        "text-lg font-semibold text-gray-900 mb-4 flex items-center",
                      children: [
                        e.jsx(Qs, { className: "h-5 w-5 text-green-600 mr-2" }),
                        "Resumo da Venda",
                      ],
                    }),
                    e.jsxs("div", {
                      className:
                        "grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4",
                      children: [
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-gray-900",
                              children: q(G.totalValue),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Valor Total",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-green-600",
                              children: q(G.totalPaid),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Já Recebido",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-red-600",
                              children: q(G.remainingBalance),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Saldo Devedor",
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsx("div", {
                      className: "mt-4 flex justify-center",
                      children: e.jsxs("span", {
                        className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${G.status === "fully_paid" ? "bg-green-100 text-green-800" : G.status === "partially_paid" ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                        children: [
                          G.status === "fully_paid" &&
                            e.jsx(Le, { className: "h-4 w-4 mr-1" }),
                          G.status === "partially_paid" &&
                            e.jsx(Ie, { className: "h-4 w-4 mr-1" }),
                          G.status === "pending" &&
                            e.jsx(Be, { className: "h-4 w-4 mr-1" }),
                          G.status === "fully_paid"
                            ? "Pago Integralmente"
                            : G.status === "partially_paid"
                              ? "Parcialmente Pago"
                              : "Pendente",
                        ],
                      }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "mb-6",
                  children: [
                    e.jsx("label", {
                      className:
                        "block text-lg font-semibold text-gray-900 mb-3",
                      children: "Valor do Pagamento",
                    }),
                    e.jsxs("div", {
                      className: "relative",
                      children: [
                        e.jsx(Oe, {
                          className:
                            "absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400",
                        }),
                        e.jsx("input", {
                          type: "number",
                          step: "0.01",
                          value: E,
                          onChange: (v) => {
                            (O(v.target.value), Y(!1));
                          },
                          onBlur: () => Y(!0),
                          className:
                            "w-full pl-12 pr-4 py-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 text-2xl font-bold",
                          placeholder: "0,00",
                          required: !0,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex flex-wrap gap-2 mt-3",
                      children: [
                        e.jsxs("button", {
                          type: "button",
                          onClick: () => {
                            (O(G.remainingBalance.toString()), Y(!0));
                          },
                          className:
                            "px-4 py-2 text-sm bg-green-100 text-green-700 rounded-full hover:bg-green-200 transition-colors font-medium",
                          children: [
                            "Saldo Total (",
                            q(G.remainingBalance),
                            ")",
                          ],
                        }),
                        e.jsx("button", {
                          type: "button",
                          onClick: () => {
                            (O("100"), Y(!0));
                          },
                          className:
                            "px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors",
                          children: "R$ 100",
                        }),
                        e.jsx("button", {
                          type: "button",
                          onClick: () => {
                            (O("500"), Y(!0));
                          },
                          className:
                            "px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors",
                          children: "R$ 500",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "mb-6",
                  children: [
                    e.jsx("label", {
                      className:
                        "block text-lg font-semibold text-gray-900 mb-3",
                      children: "Forma de Pagamento",
                    }),
                    e.jsxs("select", {
                      value: F,
                      onChange: (v) => C(v.target.value),
                      className:
                        "w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 text-base",
                      children: [
                        e.jsx("option", {
                          value: "dinheiro",
                          children: "Dinheiro",
                        }),
                        e.jsx("option", {
                          value: "cartao_debito",
                          children: "Cartão de Débito",
                        }),
                        e.jsx("option", {
                          value: "cartao_credito",
                          children: "Cartão de Crédito",
                        }),
                        e.jsx("option", { value: "pix", children: "PIX" }),
                        e.jsx("option", {
                          value: "transferencia",
                          children: "Transferência Bancária",
                        }),
                        e.jsx("option", {
                          value: "boleto",
                          children: "Boleto",
                        }),
                        e.jsx("option", {
                          value: "cheque",
                          children: "Cheque",
                        }),
                        e.jsx("option", {
                          value: "outros",
                          children: "Outros",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "mb-6",
                  children: [
                    e.jsx("label", {
                      className:
                        "block text-lg font-semibold text-gray-900 mb-3",
                      children: "Observações (opcional)",
                    }),
                    e.jsx("textarea", {
                      value: V,
                      onChange: (v) => U(v.target.value),
                      rows: 3,
                      className:
                        "w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 text-base",
                      placeholder: "Observações sobre o pagamento...",
                    }),
                  ],
                }),
                p &&
                  ee &&
                  e.jsxs("div", {
                    className: "mb-6",
                    children: [
                      e.jsxs("h3", {
                        className:
                          "text-lg font-semibold text-gray-900 mb-4 flex items-center",
                        children: [
                          e.jsx(zt, {
                            className: "h-5 w-5 text-green-600 mr-2",
                          }),
                          "Distribuição do Pagamento por Parcela",
                        ],
                      }),
                      T.length > 0
                        ? e.jsxs("div", {
                            className: "space-y-3",
                            children: [
                              T.map((v) =>
                                e.jsxs(
                                  "div",
                                  {
                                    className: `bg-white rounded-xl border-2 p-4 transition-all duration-200 ${v.willBeComplete ? "border-green-300 bg-green-50 shadow-md" : "border-gray-200 hover:border-gray-300"}`,
                                    children: [
                                      e.jsxs("div", {
                                        className:
                                          "flex items-center justify-between mb-3",
                                        children: [
                                          e.jsxs("div", {
                                            children: [
                                              e.jsxs("h4", {
                                                className:
                                                  "text-lg font-semibold text-gray-900",
                                                children: [
                                                  "Parcela ",
                                                  v.installment.parcela,
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "text-sm text-gray-600",
                                                children: [
                                                  "Venc: ",
                                                  ls(
                                                    v.installment
                                                      .data_vencimento,
                                                  ),
                                                ],
                                              }),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className: "text-right",
                                            children: [
                                              e.jsx("div", {
                                                className:
                                                  "text-xs text-gray-600",
                                                children: "Valor Original",
                                              }),
                                              e.jsx("div", {
                                                className:
                                                  "font-semibold text-gray-900",
                                                children: q(
                                                  v.installment.valor_original,
                                                ),
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                      e.jsxs("div", {
                                        className:
                                          "grid grid-cols-1 lg:grid-cols-3 gap-4",
                                        children: [
                                          e.jsxs("div", {
                                            className:
                                              "bg-gray-50 rounded-lg p-3",
                                            children: [
                                              e.jsx("div", {
                                                className:
                                                  "text-xs text-gray-600 mb-1",
                                                children: "Já Recebido",
                                              }),
                                              e.jsx("div", {
                                                className:
                                                  "font-semibold text-gray-900",
                                                children: q(
                                                  v.installment.valor_recebido,
                                                ),
                                              }),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className:
                                              "bg-green-50 rounded-lg p-3",
                                            children: [
                                              e.jsx("div", {
                                                className:
                                                  "text-xs text-gray-600 mb-1",
                                                children: "Será Aplicado",
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "font-semibold text-green-600",
                                                children: [
                                                  "+",
                                                  q(v.appliedAmount),
                                                ],
                                              }),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className:
                                              "bg-blue-50 rounded-lg p-3",
                                            children: [
                                              e.jsx("div", {
                                                className:
                                                  "text-xs text-gray-600 mb-1",
                                                children: "Novo Total",
                                              }),
                                              e.jsx("div", {
                                                className:
                                                  "font-semibold text-blue-600",
                                                children: q(v.newTotal),
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                      v.willBeComplete &&
                                        e.jsxs("div", {
                                          className:
                                            "mt-3 flex items-center text-green-600 text-sm font-medium",
                                          children: [
                                            e.jsx(Le, {
                                              className: "h-4 w-4 mr-1",
                                            }),
                                            "Parcela será quitada",
                                          ],
                                        }),
                                    ],
                                  },
                                  v.installment.id_parcela,
                                ),
                              ),
                              parseFloat(E) > G.remainingBalance &&
                                e.jsxs("div", {
                                  className:
                                    "bg-yellow-50 border border-yellow-200 rounded-lg p-4",
                                  children: [
                                    e.jsxs("div", {
                                      className:
                                        "flex items-center text-yellow-800",
                                      children: [
                                        e.jsx(Be, {
                                          className:
                                            "h-4 w-4 mr-2 flex-shrink-0",
                                        }),
                                        e.jsx("span", {
                                          className: "font-medium text-sm",
                                          children:
                                            "Valor maior que o saldo devedor",
                                        }),
                                      ],
                                    }),
                                    e.jsxs("p", {
                                      className: "text-yellow-700 text-sm mt-1",
                                      children: [
                                        "O valor excede o saldo em ",
                                        q(parseFloat(E) - G.remainingBalance),
                                      ],
                                    }),
                                  ],
                                }),
                            ],
                          })
                        : e.jsxs("div", {
                            className: "text-center py-8 text-gray-500",
                            children: [
                              e.jsx(Be, {
                                className: "h-8 w-8 mx-auto mb-2 opacity-50",
                              }),
                              e.jsx("p", {
                                className: "text-sm",
                                children: "Todas as parcelas já estão quitadas",
                              }),
                            ],
                          }),
                    ],
                  }),
                e.jsx("div", {
                  className: "mt-6 pt-6 border-t border-gray-200",
                  children: e.jsxs("div", {
                    className:
                      "flex flex-col sm:flex-row gap-3 sm:gap-4 sm:justify-end",
                    children: [
                      e.jsx("button", {
                        type: "button",
                        onClick: t,
                        className:
                          "w-full sm:w-auto px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                        children: "Cancelar",
                      }),
                      e.jsxs("button", {
                        type: "submit",
                        disabled: A || !p,
                        className:
                          "w-full sm:w-auto px-6 py-3 bg-gradient-to-r from-green-600 to-emerald-600 text-white rounded-lg hover:from-green-700 hover:to-emerald-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-semibold flex items-center justify-center shadow-lg",
                        children: [
                          A
                            ? e.jsx("div", {
                                className:
                                  "animate-spin h-5 w-5 border-2 border-white border-t-transparent rounded-full mr-2",
                              })
                            : e.jsx(Le, { className: "h-5 w-5 mr-2" }),
                          A ? "Processando..." : "Confirmar Pagamento",
                        ],
                      }),
                    ],
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
    });
  },
  Ua = ({ clientGroup: s, clientSales: t, onClose: x, onSuccess: h }) => {
    const { processGeneralPayment: i } = Je(),
      { user: D } = ts(),
      [E, O] = r.useState(!1),
      [F, C] = r.useState(""),
      [V, U] = r.useState("auto"),
      [A, Q] = r.useState([]),
      [ee, Y] = r.useState({}),
      G =
        (t == null ? void 0 : t.reduce((w, y) => w + (y.totalValue || 0), 0)) ||
        0,
      L =
        (t == null
          ? void 0
          : t.reduce((w, y) => w + (y.totalReceived || 0), 0)) || 0,
      W =
        (t == null
          ? void 0
          : t.reduce((w, y) => w + (y.pendingValue || 0), 0)) || 0,
      T = Xe.useCallback(() => {
        const w = parseFloat(F) || 0;
        if (w <= 0) {
          Q([]);
          return;
        }
        let y = w;
        const S = [],
          _ = [...(t || [])].sort(
            (Z, he) => (Z.pendingValue || 0) - (he.pendingValue || 0),
          );
        for (const Z of _) {
          if (y <= 0) break;
          const he = Z.totalReceived || 0,
            xe = Z.pendingValue || 0;
          if (xe > 0) {
            const R = Math.min(y, xe),
              ge = he + R;
            (S.push({
              sale: Z,
              currentReceived: he,
              newAmount: ge,
              appliedAmount: R,
            }),
              (y -= R));
          }
        }
        Q(S);
        const J = {};
        (S.forEach((Z) => {
          J[Z.sale.saleNumber] = Z.newAmount.toFixed(2);
        }),
          Y(J));
      }, [F, t]);
    r.useEffect(() => {
      V === "auto" && T();
    }, [F, V, T]);
    const p = (w, y) => {
        (Y((S) => ({ ...S, [w]: y })),
          Q((S) =>
            S.map((_) => {
              if (_.sale.saleNumber === w) {
                const J = parseFloat(y) || 0;
                return {
                  ..._,
                  newAmount: J,
                  appliedAmount: J - _.currentReceived,
                };
              }
              return _;
            }),
          ));
      },
      I = () => A.reduce((w, y) => w + y.appliedAmount, 0),
      v = async (w) => {
        if ((w.preventDefault(), !D)) {
          alert("Usuário não identificado");
          return;
        }
        if (A.length === 0) {
          alert("Nenhuma distribuição foi calculada");
          return;
        }
        const y = I(),
          S = parseFloat(F) || 0;
        if (
          !(
            Math.abs(y - S) > 0.01 &&
            !window.confirm(`O valor distribuído (${q(y)}) é diferente do valor informado (${q(S)}).

Deseja continuar?`)
          )
        )
          try {
            (O(!0),
              await i(
                s.document || "",
                parseFloat(F) || 0,
                "dinheiro",
                `Distribuição geral de ${q(parseFloat(F) || 0)}`,
                D.id,
              ),
              j(),
              h(),
              x());
          } catch (_) {
            (console.error("Erro ao aplicar distribuição:", _), z(_));
          } finally {
            O(!1);
          }
      },
      j = () => {
        const w = document.createElement("div");
        ((w.className =
          "fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
          (w.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
      </svg>
      Pagamento distribuído com sucesso!
    `),
          document.body.appendChild(w),
          setTimeout(() => {
            document.body.contains(w) && document.body.removeChild(w);
          }, 5e3));
      },
      z = (w) => {
        const y = w instanceof Error ? w.message : "Erro desconhecido",
          S = document.createElement("div");
        ((S.className =
          "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center max-w-md"),
          (S.innerHTML = `
      <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
      </svg>
      <div>
        <div class="font-semibold">Erro ao distribuir pagamento</div>
        <div class="text-sm">${y}</div>
      </div>
    `),
          document.body.appendChild(S),
          setTimeout(() => {
            document.body.contains(S) && document.body.removeChild(S);
          }, 8e3));
      },
      N = I(),
      H = (parseFloat(F) || 0) - N;
    return e.jsx("div", {
      className:
        "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
      children: e.jsxs("div", {
        className:
          "bg-white rounded-xl max-w-6xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-hidden shadow-2xl",
        children: [
          e.jsxs("div", {
            className:
              "sticky top-0 bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-4 sm:px-6 py-4 flex items-center justify-between",
            children: [
              e.jsxs("div", {
                className: "flex items-center flex-1 min-w-0",
                children: [
                  e.jsx(zt, {
                    className:
                      "h-5 w-5 sm:h-6 sm:w-6 text-white mr-2 sm:mr-3 flex-shrink-0",
                  }),
                  e.jsxs("div", {
                    className: "min-w-0 flex-1",
                    children: [
                      e.jsx("h2", {
                        className:
                          "text-lg sm:text-xl font-bold text-white truncate",
                        children: "Distribuir Pagamento",
                      }),
                      e.jsxs("p", {
                        className: "text-sm text-purple-100 truncate",
                        children: [
                          s.client || "Cliente",
                          " -",
                          " ",
                          s.document || "Sem documento",
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              e.jsx("button", {
                onClick: x,
                className:
                  "p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors flex-shrink-0",
                children: e.jsx(ze, { className: "h-5 w-5 text-white" }),
              }),
            ],
          }),
          e.jsx("div", {
            className:
              "overflow-y-auto max-h-[calc(95vh-180px)] sm:max-h-[calc(90vh-180px)]",
            children: e.jsxs("form", {
              onSubmit: v,
              className: "p-4 sm:p-6",
              children: [
                e.jsxs("div", {
                  className:
                    "bg-gradient-to-r from-purple-50 to-indigo-50 rounded-xl p-4 sm:p-6 mb-6 border border-purple-200",
                  children: [
                    e.jsxs("h3", {
                      className:
                        "text-lg font-semibold text-gray-900 mb-4 flex items-center",
                      children: [
                        e.jsx(Qs, {
                          className: "h-5 w-5 text-purple-600 mr-2",
                        }),
                        "Resumo Financeiro",
                      ],
                    }),
                    e.jsxs("div", {
                      className:
                        "grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4",
                      children: [
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-gray-900",
                              children: q(G),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Valor Total",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-green-600",
                              children: q(L),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Já Recebido",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-red-600",
                              children: q(W),
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Saldo Devedor",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className:
                            "text-center p-3 sm:p-4 bg-white rounded-lg shadow-sm",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-lg sm:text-xl font-bold text-purple-600",
                              children: (t == null ? void 0 : t.length) || 0,
                            }),
                            e.jsx("div", {
                              className: "text-xs sm:text-sm text-gray-600",
                              children: "Total Vendas",
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "mb-6",
                  children: [
                    e.jsx("label", {
                      className:
                        "block text-lg font-semibold text-gray-900 mb-3",
                      children: "Valor a Distribuir",
                    }),
                    e.jsxs("div", {
                      className: "relative",
                      children: [
                        e.jsx(Oe, {
                          className:
                            "absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400",
                        }),
                        e.jsx("input", {
                          type: "number",
                          step: "0.01",
                          value: F,
                          onChange: (w) => C(w.target.value),
                          className:
                            "w-full pl-12 pr-4 py-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 text-2xl font-bold",
                          placeholder: "0,00",
                          required: !0,
                        }),
                      ],
                    }),
                    e.jsx("div", {
                      className:
                        "flex flex-wrap items-center justify-between gap-2 mt-3",
                      children: e.jsxs("div", {
                        className: "flex flex-wrap gap-2",
                        children: [
                          e.jsxs("button", {
                            type: "button",
                            onClick: () => C(W.toFixed(2)),
                            className:
                              "px-4 py-2 text-sm bg-purple-100 text-purple-700 rounded-full hover:bg-purple-200 transition-colors font-medium",
                            children: ["Saldo Total (", q(W), ")"],
                          }),
                          e.jsx("button", {
                            type: "button",
                            onClick: () => C("100"),
                            className:
                              "px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors",
                            children: "R$ 100",
                          }),
                          e.jsx("button", {
                            type: "button",
                            onClick: () => C("500"),
                            className:
                              "px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors",
                            children: "R$ 500",
                          }),
                          e.jsx("button", {
                            type: "button",
                            onClick: () => C("1000"),
                            className:
                              "px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors",
                            children: "R$ 1.000",
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "mb-6",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center gap-4",
                      children: [
                        e.jsxs("button", {
                          type: "button",
                          onClick: () => U("auto"),
                          className: `flex items-center px-4 py-2 rounded-lg font-medium transition-colors ${V === "auto" ? "bg-purple-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                          children: [
                            e.jsx(ya, { className: "h-4 w-4 mr-2" }),
                            "Distribuição Automática",
                          ],
                        }),
                        e.jsxs("button", {
                          type: "button",
                          onClick: () => U("manual"),
                          className: `flex items-center px-4 py-2 rounded-lg font-medium transition-colors ${V === "manual" ? "bg-purple-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                          children: [
                            e.jsx(_s, { className: "h-4 w-4 mr-2" }),
                            "Ajuste Manual",
                          ],
                        }),
                      ],
                    }),
                    e.jsx("p", {
                      className: "text-sm text-gray-600 mt-2",
                      children:
                        V === "auto"
                          ? "O valor será distribuído automaticamente entre as vendas com saldo devedor"
                          : "Você pode ajustar manualmente o valor recebido de cada venda",
                    }),
                  ],
                }),
                A.length > 0 &&
                  e.jsxs("div", {
                    className: "mb-6",
                    children: [
                      e.jsxs("div", {
                        className: "flex items-center justify-between mb-4",
                        children: [
                          e.jsx("h3", {
                            className: "text-lg font-semibold text-gray-900",
                            children: "Distribuição do Pagamento por Venda",
                          }),
                          e.jsx("div", {
                            className: "flex items-center gap-3",
                            children:
                              V === "auto" &&
                              e.jsxs("button", {
                                type: "button",
                                onClick: T,
                                className:
                                  "flex items-center text-sm text-purple-600 hover:text-purple-800",
                                children: [
                                  e.jsx(hs, { className: "h-4 w-4 mr-1" }),
                                  "Recalcular",
                                ],
                              }),
                          }),
                        ],
                      }),
                      e.jsx("div", {
                        className: "space-y-3 max-h-96 overflow-y-auto",
                        children: A.map((w) => {
                          var y, S;
                          return e.jsxs(
                            "div",
                            {
                              className: `bg-white rounded-xl border-2 p-4 transition-all duration-200 ${w.appliedAmount > 0 ? "border-purple-300 bg-purple-50 shadow-md" : "border-gray-200 hover:border-gray-300"}`,
                              children: [
                                e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between mb-3",
                                  children: [
                                    e.jsxs("div", {
                                      children: [
                                        e.jsxs("h4", {
                                          className:
                                            "text-lg font-semibold text-gray-900",
                                          children: [
                                            "Venda #",
                                            w.sale.saleNumber,
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className: "text-sm text-gray-600",
                                          children: [
                                            ((y = w.sale.installments) == null
                                              ? void 0
                                              : y.length) || 0,
                                            " parcela",
                                            (((S = w.sale.installments) == null
                                              ? void 0
                                              : S.length) || 0) !== 1
                                              ? "s"
                                              : "",
                                          ],
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "text-right",
                                      children: [
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: "Valor Total",
                                        }),
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-gray-900",
                                          children: q(w.sale.totalValue || 0),
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  className:
                                    "grid grid-cols-1 lg:grid-cols-3 gap-4",
                                  children: [
                                    e.jsxs("div", {
                                      className: "bg-gray-50 rounded-lg p-3",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-xs text-gray-600 mb-1",
                                          children: "Recebido Atualmente",
                                        }),
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-gray-900",
                                          children: q(w.currentReceived),
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "bg-green-50 rounded-lg p-3",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-xs text-gray-600 mb-1",
                                          children: "Novo Total Recebido",
                                        }),
                                        V === "manual"
                                          ? e.jsxs("div", {
                                              className: "flex items-center",
                                              children: [
                                                e.jsx(Oe, {
                                                  className:
                                                    "h-4 w-4 text-gray-400 mr-1",
                                                }),
                                                e.jsx("input", {
                                                  type: "number",
                                                  step: "0.01",
                                                  min: "0",
                                                  value:
                                                    ee[w.sale.saleNumber] || "",
                                                  onChange: (_) =>
                                                    p(
                                                      w.sale.saleNumber,
                                                      _.target.value,
                                                    ),
                                                  className:
                                                    "w-full px-2 py-1 border border-gray-300 rounded text-sm font-semibold",
                                                }),
                                              ],
                                            })
                                          : e.jsx("div", {
                                              className:
                                                "font-semibold text-green-600",
                                              children: q(w.newAmount),
                                            }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "bg-purple-50 rounded-lg p-3",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-xs text-gray-600 mb-1",
                                          children: "Valor Aplicado",
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "font-semibold text-purple-600",
                                          children: ["+", q(w.appliedAmount)],
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  className:
                                    "mt-3 flex items-center justify-between",
                                  children: [
                                    e.jsxs("div", {
                                      className: "text-sm text-gray-600",
                                      children: [
                                        "Saldo devedor:",
                                        " ",
                                        e.jsx("span", {
                                          className: "font-medium text-red-600",
                                          children: q(
                                            Math.max(
                                              0,
                                              (w.sale.totalValue || 0) -
                                                w.newAmount,
                                            ),
                                          ),
                                        }),
                                      ],
                                    }),
                                    w.newAmount >= (w.sale.totalValue || 0) &&
                                      e.jsxs("div", {
                                        className:
                                          "flex items-center text-green-600 text-sm font-medium",
                                        children: [
                                          e.jsx(Le, {
                                            className: "h-4 w-4 mr-1",
                                          }),
                                          "Venda será quitada",
                                        ],
                                      }),
                                  ],
                                }),
                              ],
                            },
                            w.sale.saleNumber,
                          );
                        }),
                      }),
                      e.jsxs("div", {
                        className: "mt-4 p-4 bg-purple-100 rounded-lg",
                        children: [
                          e.jsxs("div", {
                            className:
                              "flex items-center justify-between text-sm",
                            children: [
                              e.jsx("span", {
                                className: "font-medium text-gray-700",
                                children: "Valor Informado:",
                              }),
                              e.jsx("span", {
                                className: "font-bold text-gray-900",
                                children: q(parseFloat(F) || 0),
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "flex items-center justify-between text-sm mt-1",
                            children: [
                              e.jsx("span", {
                                className: "font-medium text-gray-700",
                                children: "Total Distribuído:",
                              }),
                              e.jsx("span", {
                                className: "font-bold text-green-600",
                                children: q(N),
                              }),
                            ],
                          }),
                          Math.abs(H) > 0.01 &&
                            e.jsxs("div", {
                              className:
                                "flex items-center justify-between text-sm mt-1",
                              children: [
                                e.jsx("span", {
                                  className: "font-medium text-gray-700",
                                  children: "Diferença:",
                                }),
                                e.jsx("span", {
                                  className: `font-bold ${H > 0 ? "text-orange-600" : "text-red-600"}`,
                                  children: q(Math.abs(H)),
                                }),
                              ],
                            }),
                        ],
                      }),
                    ],
                  }),
                e.jsx("div", {
                  className: "mt-6 pt-4 sm:pt-6 border-t border-gray-200",
                  children: e.jsxs("div", {
                    className:
                      "flex flex-col sm:flex-row gap-3 sm:gap-4 sm:justify-end",
                    children: [
                      e.jsx("button", {
                        type: "button",
                        onClick: x,
                        className:
                          "w-full sm:w-auto px-6 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                        children: "Cancelar",
                      }),
                      e.jsxs("button", {
                        type: "submit",
                        disabled: E || A.length === 0 || !F,
                        className:
                          "w-full sm:w-auto px-6 py-3 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg hover:from-purple-700 hover:to-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-semibold flex items-center justify-center shadow-lg",
                        children: [
                          E
                            ? e.jsx("div", {
                                className:
                                  "animate-spin h-5 w-5 border-2 border-white border-t-transparent rounded-full mr-2",
                              })
                            : e.jsx(Le, { className: "h-5 w-5 mr-2" }),
                          E ? "Processando..." : "Confirmar Distribuição",
                        ],
                      }),
                    ],
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
    });
  },
  Ha = ({ clientGroup: s, clientSales: t, onClose: x, onSuccess: h }) => {
    const { updateCollection: i } = Je(),
      { user: D } = ts(),
      [E, O] = r.useState(!1),
      [F, C] = r.useState({}),
      [V, U] = r.useState(!1),
      A =
        (t == null ? void 0 : t.reduce((y, S) => y + (S.totalValue || 0), 0)) ||
        0,
      Q =
        (t == null
          ? void 0
          : t.reduce((y, S) => y + (S.totalReceived || 0), 0)) || 0;
    r.useEffect(() => {
      console.log("Inicializando valores de edição por venda");
      const y = {};
      (t == null ||
        t.forEach((S) => {
          var J;
          const _ =
            ((J = S.installments) == null
              ? void 0
              : J.reduce((Z, he) => Z + (he.valor_recebido || 0), 0)) || 0;
          y[S.saleNumber] = _.toString();
        }),
        console.log("Valores iniciais por venda:", y),
        C(y));
    }, [t]);
    const ee = (y, S) => {
        if (S === "" || S === ".") {
          C((J) => ({ ...J, [y]: S }));
          return;
        }
        const _ = parseFloat(S);
        !isNaN(_) && _ >= 0 && C((J) => ({ ...J, [y]: S }));
      },
      Y = (y, S) => {
        const _ = parseFloat(F[y] || "0"),
          J = Math.max(0, _ + S);
        ee(y, J.toFixed(2));
      },
      G = (y, S) => {
        ee(y, S.toFixed(2));
      },
      L = (y) => {
        ee(y, "0");
      },
      W = () => {
        U(!0);
      },
      T = () => {
        const y = {};
        (t == null ||
          t.forEach((S) => {
            y[S.saleNumber] = "0";
          }),
          C(y),
          U(!1));
      },
      p = () => {
        let y = 0;
        const S = [];
        return (
          t == null ||
            t.forEach((_) => {
              var xe;
              const J = F[_.saleNumber] || "0",
                Z = parseFloat(J) || 0,
                he =
                  ((xe = _.installments) == null
                    ? void 0
                    : xe.reduce((R, ge) => R + (ge.valor_recebido || 0), 0)) ||
                  0;
              ((y += Z),
                Math.abs(Z - he) > 0.01 &&
                  S.push({
                    sale: _,
                    oldValue: he,
                    newValue: Z,
                    difference: Z - he,
                  }));
            }),
          {
            newTotalReceived: y,
            newTotalPending: A - y,
            totalDifference: y - Q,
            changes: S,
          }
        );
      },
      {
        newTotalReceived: I,
        newTotalPending: v,
        totalDifference: j,
        changes: z,
      } = p(),
      N = async (y) => {
        var J;
        if ((y.preventDefault(), !D)) {
          alert("Usuário não identificado");
          return;
        }
        if (z.length === 0) {
          alert("Nenhuma alteração foi feita");
          return;
        }
        if (z.some((Z) => Z.newValue < 0)) {
          alert("Não é possível definir valores negativos");
          return;
        }
        if (
          !(
            z.some((Z) => Z.newValue > Z.sale.totalValue) &&
            !confirm(
              "Algumas vendas têm valores recebidos maiores que o valor total. Deseja continuar?",
            )
          )
        )
          try {
            (O(!0),
              console.log("Aplicando edições de pagamento por venda:", z));
            for (const Z of z) {
              const { sale: he, newValue: xe } = Z,
                R =
                  ((J = he.installments) == null
                    ? void 0
                    : J.sort(
                        (pe, fe) => (pe.parcela || 0) - (fe.parcela || 0),
                      )) || [];
              let ge = xe;
              for (const pe of R)
                pe.id_parcela &&
                  (await i(pe.id_parcela, {
                    valor_recebido: 0,
                    status: ms.PENDENTE,
                    data_de_recebimento: null,
                  }));
              for (const pe of R) {
                if (!pe.id_parcela || ge <= 0) continue;
                const fe = pe.valor_original || 0,
                  we = Math.min(ge, fe),
                  re = { valor_recebido: we };
                (we === 0
                  ? ((re.status = ms.PENDENTE), (re.data_de_recebimento = null))
                  : we >= fe
                    ? ((re.status = ms.PAGO),
                      (re.data_de_recebimento = new Date()
                        .toISOString()
                        .split("T")[0]))
                    : ((re.status = ms.PARCIAL),
                      (re.data_de_recebimento = new Date()
                        .toISOString()
                        .split("T")[0])),
                  console.log(`Atualizando parcela ${pe.id_parcela}:`, re),
                  await i(pe.id_parcela, re),
                  (ge -= we));
              }
            }
            (H(z.length), h(), x());
          } catch (Z) {
            (console.error("Erro ao editar pagamentos:", Z), w(Z));
          } finally {
            O(!1);
          }
      },
      H = (y) => {
        const S = document.createElement("div");
        ((S.className =
          "fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
          (S.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
      </svg>
      ${y} venda${y !== 1 ? "s" : ""} editada${y !== 1 ? "s" : ""} com sucesso!
    `),
          document.body.appendChild(S),
          setTimeout(() => {
            document.body.contains(S) && document.body.removeChild(S);
          }, 5e3));
      },
      w = (y) => {
        const S = y instanceof Error ? y.message : "Erro desconhecido",
          _ = document.createElement("div");
        ((_.className =
          "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center max-w-md"),
          (_.innerHTML = `
      <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
      </svg>
      <div>
        <div class="font-semibold">Erro ao editar pagamentos</div>
        <div class="text-sm">${S}</div>
      </div>
    `),
          document.body.appendChild(_),
          setTimeout(() => {
            document.body.contains(_) && document.body.removeChild(_);
          }, 8e3));
      };
    return e.jsxs("div", {
      className:
        "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
      children: [
        e.jsxs("div", {
          className:
            "bg-white rounded-xl max-w-6xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-hidden shadow-2xl",
          children: [
            e.jsxs("div", {
              className:
                "sticky top-0 bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-4 sm:px-6 py-4 flex items-center justify-between",
              children: [
                e.jsxs("div", {
                  className: "flex items-center flex-1 min-w-0",
                  children: [
                    e.jsx(_s, {
                      className:
                        "h-5 w-5 sm:h-6 sm:w-6 text-white mr-2 sm:mr-3 flex-shrink-0",
                    }),
                    e.jsxs("div", {
                      className: "min-w-0 flex-1",
                      children: [
                        e.jsx("h2", {
                          className:
                            "text-lg sm:text-xl font-bold text-white truncate",
                          children: "Editar Pagamentos",
                        }),
                        e.jsxs("p", {
                          className: "text-sm text-purple-100 truncate",
                          children: [
                            s.client || "Cliente",
                            " -",
                            " ",
                            s.document || "Sem documento",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsx("button", {
                  onClick: x,
                  className:
                    "p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors flex-shrink-0",
                  children: e.jsx(ze, { className: "h-5 w-5 text-white" }),
                }),
              ],
            }),
            e.jsx("div", {
              className:
                "overflow-y-auto max-h-[calc(95vh-180px)] sm:max-h-[calc(90vh-180px)]",
              children: e.jsxs("div", {
                className: "p-4 sm:p-6",
                children: [
                  e.jsxs("div", {
                    className:
                      "bg-gradient-to-r from-purple-50 to-indigo-50 rounded-xl p-4 sm:p-6 mb-6 border border-purple-200",
                    children: [
                      e.jsxs("h3", {
                        className:
                          "text-lg font-semibold text-gray-900 mb-4 flex items-center",
                        children: [
                          e.jsx(Qs, {
                            className: "h-5 w-5 text-purple-600 mr-2",
                          }),
                          "Resumo dos Pagamentos",
                        ],
                      }),
                      e.jsxs("div", {
                        className: "grid grid-cols-2 lg:grid-cols-4 gap-3",
                        children: [
                          e.jsxs("div", {
                            className:
                              "text-center p-4 bg-white rounded-lg shadow-sm h-20 flex flex-col justify-center",
                            children: [
                              e.jsx("div", {
                                className: "text-xl font-bold text-gray-900",
                                children: q(A),
                              }),
                              e.jsx("div", {
                                className: "text-sm text-gray-600",
                                children: "Valor Total",
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "text-center p-4 bg-white rounded-lg shadow-sm h-20 flex flex-col justify-center",
                            children: [
                              e.jsx("div", {
                                className: "text-xl font-bold text-green-600",
                                children: q(I),
                              }),
                              e.jsx("div", {
                                className: "text-sm text-gray-600",
                                children: "Novo Recebido",
                              }),
                              j !== 0 &&
                                e.jsxs("div", {
                                  className: `text-xs font-medium mt-1 ${j > 0 ? "text-green-600" : "text-red-600"}`,
                                  children: [j > 0 ? "+" : "", q(j)],
                                }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "text-center p-4 bg-white rounded-lg shadow-sm h-20 flex flex-col justify-center",
                            children: [
                              e.jsx("div", {
                                className: "text-xl font-bold text-red-600",
                                children: q(v),
                              }),
                              e.jsx("div", {
                                className: "text-sm text-gray-600",
                                children: "Novo Pendente",
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "text-center p-4 bg-white rounded-lg shadow-sm h-20 flex flex-col justify-center",
                            children: [
                              e.jsx("div", {
                                className: "text-xl font-bold text-purple-600",
                                children: z.length,
                              }),
                              e.jsx("div", {
                                className: "text-sm text-gray-600",
                                children: "Alterações",
                              }),
                            ],
                          }),
                        ],
                      }),
                      I > 0 &&
                        e.jsx("div", {
                          className: "mt-4 flex items-center justify-end",
                          children: e.jsxs("button", {
                            type: "button",
                            onClick: W,
                            className:
                              "flex items-center px-4 py-2 text-sm bg-red-100 text-red-700 rounded-full hover:bg-red-200 transition-colors font-medium",
                            title: "Zerar todos os valores",
                            children: [
                              e.jsx(Ks, { className: "h-4 w-4 mr-1" }),
                              "Zerar Tudo",
                            ],
                          }),
                        }),
                    ],
                  }),
                  (t == null ? void 0 : t.length) === 0
                    ? e.jsxs("div", {
                        className: "text-center py-8 text-gray-500",
                        children: [
                          e.jsx(Be, {
                            className: "h-12 w-12 mx-auto mb-4 opacity-50",
                          }),
                          e.jsx("p", {
                            className: "text-lg",
                            children:
                              "Nenhuma venda encontrada para este cliente",
                          }),
                        ],
                      })
                    : e.jsxs("form", {
                        onSubmit: N,
                        children: [
                          e.jsx("div", {
                            className: "space-y-4 sm:space-y-6",
                            children:
                              t == null
                                ? void 0
                                : t.map((y) => {
                                    var he;
                                    if (
                                      !y.installments ||
                                      y.installments.length === 0
                                    )
                                      return null;
                                    const S = F[y.saleNumber] || "0",
                                      _ = parseFloat(S) || 0,
                                      J =
                                        ((he = y.installments) == null
                                          ? void 0
                                          : he.reduce(
                                              (xe, R) =>
                                                xe + (R.valor_recebido || 0),
                                              0,
                                            )) || 0,
                                      Z = Math.abs(_ - J) > 0.01;
                                    return e.jsxs(
                                      "div",
                                      {
                                        className: `bg-white rounded-xl border-2 transition-all duration-200 p-4 sm:p-6 ${Z ? "border-purple-300 bg-purple-50 shadow-md" : "border-gray-200 hover:border-gray-300"}`,
                                        children: [
                                          e.jsxs("div", {
                                            className:
                                              "flex items-center justify-between mb-4",
                                            children: [
                                              e.jsxs("div", {
                                                children: [
                                                  e.jsxs("h4", {
                                                    className:
                                                      "text-lg font-semibold text-gray-900",
                                                    children: [
                                                      "Venda #",
                                                      y.saleNumber,
                                                    ],
                                                  }),
                                                  e.jsxs("div", {
                                                    className:
                                                      "text-sm text-gray-600",
                                                    children: [
                                                      y.installments.length,
                                                      " parcela",
                                                      y.installments.length !==
                                                      1
                                                        ? "s"
                                                        : "",
                                                      " • Valor total: ",
                                                      q(y.totalValue),
                                                      Z &&
                                                        e.jsx("span", {
                                                          className:
                                                            "ml-2 text-purple-600 font-medium",
                                                          children: "(Editado)",
                                                        }),
                                                    ],
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className: "text-right",
                                                children: [
                                                  e.jsx("div", {
                                                    className:
                                                      "text-xs text-gray-600",
                                                    children: "Recebido Atual",
                                                  }),
                                                  e.jsx("div", {
                                                    className:
                                                      "font-semibold text-gray-900",
                                                    children: q(J),
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                          e.jsx("div", {
                                            className: "space-y-4",
                                            children: e.jsxs("div", {
                                              className:
                                                "grid grid-cols-1 lg:grid-cols-2 gap-4",
                                              children: [
                                                e.jsxs("div", {
                                                  className: "space-y-3",
                                                  children: [
                                                    e.jsx("label", {
                                                      className:
                                                        "block text-sm font-semibold text-gray-700",
                                                      children:
                                                        "Valor Total Recebido da Venda",
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center space-x-2",
                                                      children: [
                                                        e.jsx("button", {
                                                          type: "button",
                                                          onClick: () =>
                                                            Y(
                                                              y.saleNumber,
                                                              -50,
                                                            ),
                                                          className:
                                                            "p-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200 transition-colors",
                                                          title:
                                                            "Diminuir R$ 50",
                                                          children: e.jsx(Na, {
                                                            className:
                                                              "h-4 w-4",
                                                          }),
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "relative flex-1",
                                                          children: [
                                                            e.jsx(Oe, {
                                                              className:
                                                                "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                                                            }),
                                                            e.jsx("input", {
                                                              type: "number",
                                                              step: "0.01",
                                                              min: "0",
                                                              value: S,
                                                              onChange: (xe) =>
                                                                ee(
                                                                  y.saleNumber,
                                                                  xe.target
                                                                    .value,
                                                                ),
                                                              className:
                                                                "w-full pl-9 pr-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 text-center font-semibold text-lg",
                                                            }),
                                                          ],
                                                        }),
                                                        e.jsx("button", {
                                                          type: "button",
                                                          onClick: () =>
                                                            Y(y.saleNumber, 50),
                                                          className:
                                                            "p-2 bg-green-100 text-green-600 rounded-lg hover:bg-green-200 transition-colors",
                                                          title:
                                                            "Aumentar R$ 50",
                                                          children: e.jsx(Js, {
                                                            className:
                                                              "h-4 w-4",
                                                          }),
                                                        }),
                                                      ],
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex space-x-2",
                                                      children: [
                                                        e.jsx("button", {
                                                          type: "button",
                                                          onClick: () =>
                                                            L(y.saleNumber),
                                                          className:
                                                            "flex-1 p-2 text-sm bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors font-medium",
                                                          children: "Zerar",
                                                        }),
                                                        e.jsx("button", {
                                                          type: "button",
                                                          onClick: () =>
                                                            G(
                                                              y.saleNumber,
                                                              y.totalValue,
                                                            ),
                                                          className:
                                                            "flex-1 p-2 text-sm bg-green-100 text-green-700 rounded-lg hover:bg-green-200 transition-colors font-medium",
                                                          children:
                                                            "Quitar Total",
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "bg-gray-50 rounded-lg p-4",
                                                  children: [
                                                    e.jsx("h5", {
                                                      className:
                                                        "text-sm font-semibold text-gray-700 mb-3",
                                                      children:
                                                        "Preview da Distribuição",
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "space-y-2 text-sm",
                                                      children: [
                                                        e.jsxs("div", {
                                                          className:
                                                            "flex justify-between",
                                                          children: [
                                                            e.jsx("span", {
                                                              children:
                                                                "Valor da venda:",
                                                            }),
                                                            e.jsx("span", {
                                                              className:
                                                                "font-medium",
                                                              children: q(
                                                                y.totalValue,
                                                              ),
                                                            }),
                                                          ],
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "flex justify-between",
                                                          children: [
                                                            e.jsx("span", {
                                                              children:
                                                                "Novo total recebido:",
                                                            }),
                                                            e.jsx("span", {
                                                              className:
                                                                "font-medium text-green-600",
                                                              children: q(_),
                                                            }),
                                                          ],
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "flex justify-between",
                                                          children: [
                                                            e.jsx("span", {
                                                              children:
                                                                "Saldo devedor:",
                                                            }),
                                                            e.jsx("span", {
                                                              className: `font-medium ${y.totalValue - _ > 0 ? "text-red-600" : "text-green-600"}`,
                                                              children: q(
                                                                Math.max(
                                                                  0,
                                                                  y.totalValue -
                                                                    _,
                                                                ),
                                                              ),
                                                            }),
                                                          ],
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "flex justify-between pt-2 border-t border-gray-200",
                                                          children: [
                                                            e.jsx("span", {
                                                              children:
                                                                "Status:",
                                                            }),
                                                            e.jsx("span", {
                                                              className: `font-medium ${_ >= y.totalValue ? "text-green-600" : _ > 0 ? "text-yellow-600" : "text-red-600"}`,
                                                              children:
                                                                _ >=
                                                                y.totalValue
                                                                  ? "Quitada"
                                                                  : _ > 0
                                                                    ? "Parcial"
                                                                    : "Pendente",
                                                            }),
                                                          ],
                                                        }),
                                                      ],
                                                    }),
                                                    Z &&
                                                      e.jsx("div", {
                                                        className:
                                                          "mt-3 p-2 bg-purple-100 rounded-lg",
                                                        children: e.jsxs(
                                                          "div",
                                                          {
                                                            className:
                                                              "flex items-center text-purple-700 text-xs",
                                                            children: [
                                                              e.jsx(_s, {
                                                                className:
                                                                  "h-3 w-3 mr-1",
                                                              }),
                                                              e.jsxs("span", {
                                                                className:
                                                                  "font-medium",
                                                                children: [
                                                                  q(J),
                                                                  " →",
                                                                  " ",
                                                                  q(_),
                                                                ],
                                                              }),
                                                              e.jsxs("span", {
                                                                className: `ml-2 font-semibold ${_ > J ? "text-green-600" : "text-red-600"}`,
                                                                children: [
                                                                  "(",
                                                                  _ > J
                                                                    ? "+"
                                                                    : "",
                                                                  q(_ - J),
                                                                  ")",
                                                                ],
                                                              }),
                                                            ],
                                                          },
                                                        ),
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                          }),
                                        ],
                                      },
                                      y.saleNumber,
                                    );
                                  }),
                          }),
                          e.jsx("div", {
                            className:
                              "mt-6 pt-4 sm:pt-6 border-t border-gray-200",
                            children: e.jsxs("div", {
                              className:
                                "flex flex-col sm:flex-row gap-3 sm:gap-4 sm:justify-end",
                              children: [
                                e.jsx("button", {
                                  type: "button",
                                  onClick: x,
                                  className:
                                    "w-full sm:w-auto px-6 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                                  children: "Cancelar",
                                }),
                                e.jsxs("button", {
                                  type: "submit",
                                  disabled: E || z.length === 0,
                                  className:
                                    "w-full sm:w-auto px-6 py-3 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg hover:from-purple-700 hover:to-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-semibold flex items-center justify-center shadow-lg",
                                  children: [
                                    E
                                      ? e.jsx("div", {
                                          className:
                                            "animate-spin h-5 w-5 border-2 border-white border-t-transparent rounded-full mr-2",
                                        })
                                      : e.jsx(Le, {
                                          className: "h-5 w-5 mr-2",
                                        }),
                                    E
                                      ? "Salvando..."
                                      : z.length > 0
                                        ? `Salvar ${z.length} Alteração${z.length !== 1 ? "ões" : ""}`
                                        : "Nenhuma Alteração",
                                  ],
                                }),
                              ],
                            }),
                          }),
                        ],
                      }),
                ],
              }),
            }),
          ],
        }),
        V &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60] p-4",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl max-w-md w-full p-6 shadow-2xl",
              children: [
                e.jsxs("div", {
                  className: "flex items-center mb-4",
                  children: [
                    e.jsx("div", {
                      className:
                        "h-10 w-10 bg-red-100 rounded-full flex items-center justify-center mr-3",
                      children: e.jsx(Be, {
                        className: "h-5 w-5 text-red-600",
                      }),
                    }),
                    e.jsx("h3", {
                      className: "text-lg font-semibold text-gray-900",
                      children: "Confirmar Ação",
                    }),
                  ],
                }),
                e.jsx("p", {
                  className: "text-gray-600 mb-6",
                  children:
                    "Tem certeza que deseja zerar todos os valores recebidos? Esta ação não pode ser desfeita.",
                }),
                e.jsxs("div", {
                  className: "flex gap-3",
                  children: [
                    e.jsx("button", {
                      onClick: () => U(!1),
                      className:
                        "flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                      children: "Cancelar",
                    }),
                    e.jsx("button", {
                      onClick: T,
                      className:
                        "flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium",
                      children: "Zerar Tudo",
                    }),
                  ],
                }),
              ],
            }),
          }),
      ],
    });
  },
  Gt = ({ clientGroup: s, userType: t, onClose: x }) => {
    const { getSalesByClient: h, calculateSaleBalance: i } = Je(),
      { user: D } = ts(),
      [E, O] = r.useState(null),
      [F, C] = r.useState(!1),
      [V, U] = r.useState(!1),
      [A, Q] = r.useState(!1),
      [ee, Y] = r.useState(!1),
      [G, L] = r.useState(new Set()),
      [W, T] = r.useState(0),
      [p, I] = r.useState(!1),
      [v, j] = r.useState(""),
      [z, N] = r.useState(""),
      [H, w] = r.useState(!1),
      [y, S] = r.useState(!1),
      [_, J] = r.useState(!1),
      [Z, he] = r.useState(!1),
      [xe, R] = r.useState(""),
      [ge, pe] = r.useState("");
    (Xe.useEffect(() => {
      const K = (Se) => {
          const ae = Se.detail;
          ae.clientDocument === s.document &&
            y &&
            (R(ae.token),
            pe(ae.token),
            J(!0),
            j(ae.token),
            "Notification" in window &&
              Notification.permission === "granted" &&
              new Notification("Token Aprovado!", {
                body: `Seu token ${ae.token} foi aprovado pelo gerente.`,
                icon: "/icon_aplicativo.png",
              }),
            setTimeout(() => {
              J(!1);
            }, 1e4));
        },
        B = (Se) => {
          const ae = Se.detail;
          ae.clientDocument === s.document &&
            y &&
            (he(!0),
            I(!1),
            "Notification" in window &&
              Notification.permission === "granted" &&
              new Notification("Token Rejeitado", {
                body: `Seu token ${ae.token} foi rejeitado pelo gerente.`,
                icon: "/icon_aplicativo.png",
              }));
        },
        X = async () => {
          if (y && D)
            try {
              const { data: Se } = await as.getAuthorizationHistory({
                  searchTerm: s.document,
                  status: "all",
                }),
                ae = Se.filter(
                  (le) =>
                    le.collector_id === D.id &&
                    le.client_document === s.document,
                ),
                ke = ae.find(
                  (le) =>
                    le.status === "approved" &&
                    new Date(le.expires_at) > new Date(),
                );
              ke &&
                ge !== ke.token &&
                (R(ke.token),
                pe(ke.token),
                J(!0),
                j(ke.token),
                "Notification" in window &&
                  Notification.permission === "granted" &&
                  new Notification("Token Aprovado!", {
                    body: `Seu token ${ke.token} foi aprovado pelo gerente.`,
                    icon: "/icon_aplicativo.png",
                  }),
                setTimeout(() => {
                  J(!1);
                }, 1e4));
              const Te = ae.find(
                (le) =>
                  le.status === "rejected" &&
                  new Date(le.processed_at) > new Date(Date.now() - 3e4),
              );
              Te &&
                !Z &&
                (he(!0),
                I(!1),
                "Notification" in window &&
                  Notification.permission === "granted" &&
                  new Notification("Token Rejeitado", {
                    body: `Seu token ${Te.token} foi rejeitado pelo gerente.`,
                    icon: "/icon_aplicativo.png",
                  }));
            } catch (Se) {
              console.error("Erro ao verificar status de token:", Se);
            }
        };
      (window.addEventListener("tokenApproved", K),
        window.addEventListener("tokenRejected", B));
      const je = setInterval(X, 3e3);
      return () => {
        (window.removeEventListener("tokenApproved", K),
          window.removeEventListener("tokenRejected", B),
          clearInterval(je));
      };
    }, [y, s.document, _, Z, D, ge]),
      Xe.useEffect(() => {
        "Notification" in window &&
          Notification.permission === "default" &&
          Notification.requestPermission();
      }, []));
    const fe = Xe.useMemo(() => {
        const K = h(s.document);
        return (
          console.log(
            "Vendas do Cliente recalculadas:",
            K.map((B) => ({
              saleNumber: B.saleNumber,
              totalValue: B.totalValue,
              totalReceived: B.totalReceived,
              pendingValue: B.pendingValue,
            })),
          ),
          K
        );
      }, [h, s.document, W]),
      we = (K) => {
        (O(K), C(!0));
      },
      re = () => {
        (O(null), C(!1));
      },
      de = () => {
        (T((K) => K + 1), re());
      },
      oe = () => {
        (T((K) => K + 1), U(!1));
      },
      P = () => {
        (T((K) => K + 1), Q(!1));
      },
      se = (K) => {
        const B = new Set(G);
        (B.has(K) ? B.delete(K) : B.add(K), L(B));
      },
      Ae = () => Math.floor(1e5 + Math.random() * 9e5).toString(),
      Ve = async () => {
        if (D) {
          (w(!0), N(""));
          try {
            await as.expirePreviousRequests(D.id, s.document);
            const K = Ae(),
              B = new Date(Date.now() + 5 * 60 * 1e3).toISOString(),
              X = await as.createAuthorizationRequest({
                token: K,
                collector_id: D.id,
                collector_name: D.name,
                client_name: s.client,
                client_document: s.document,
                expires_at: B,
              });
            (window.dispatchEvent(
              new CustomEvent("authRequestCreated", {
                detail: {
                  token: X.token,
                  collectorName: X.collector_name,
                  clientName: X.client_name,
                  clientDocument: X.client_document,
                },
              }),
            ),
              S(!0),
              pe(""),
              N(""));
          } catch (K) {
            (console.error("Erro ao solicitar autorização:", K),
              N("Erro ao solicitar autorização. Tente novamente."));
          } finally {
            w(!1);
          }
        }
      },
      ne = async () => {
        if (v)
          try {
            const {
              isValid: K,
              authorization: B,
              error: X,
            } = await as.validateToken(v);
            K && B
              ? (N(""), I(!1), j(""), S(!1), Q(!0))
              : N(X || "Token inválido.");
          } catch (K) {
            (console.error("Erro ao validar token:", K),
              N("Erro ao validar token. Tente novamente."));
          }
      },
      Re = () => {
        t === "manager" ? Q(!0) : (I(!0), N(""), j(""), S(!1), w(!1));
      };
    return e.jsxs(e.Fragment, {
      children: [
        e.jsx("div", {
          className:
            "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
          children: e.jsxs("div", {
            className:
              "bg-white rounded-xl max-w-6xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-hidden shadow-2xl",
            children: [
              e.jsxs("div", {
                className:
                  "px-4 lg:px-6 py-4 border-b border-gray-200 flex items-center justify-between",
                children: [
                  e.jsxs("div", {
                    className: "flex items-center flex-1 min-w-0",
                    children: [
                      e.jsx(Qe, {
                        className: "h-6 w-6 text-blue-600 mr-3 flex-shrink-0",
                      }),
                      e.jsxs("div", {
                        className: "min-w-0 flex-1",
                        children: [
                          e.jsx("h2", {
                            className:
                              "text-sm sm:text-lg lg:text-xl font-semibold text-gray-900 truncate",
                            children: s.client,
                          }),
                          e.jsx("p", {
                            className:
                              "text-xs sm:text-sm text-gray-600 truncate",
                            children: s.document,
                          }),
                        ],
                      }),
                    ],
                  }),
                  e.jsx("button", {
                    id: "close-modal",
                    name: "closeModal",
                    onClick: x,
                    className:
                      "p-2 text-gray-400 hover:text-gray-600 transition-colors flex-shrink-0",
                    children: e.jsx(ze, { className: "h-5 w-5" }),
                  }),
                ],
              }),
              t === "collector" &&
                e.jsxs("div", {
                  className:
                    "mt-4 px-4 lg:px-6 py-0 grid grid-cols-2 sm:grid-cols-4 gap-3",
                  children: [
                    e.jsxs("button", {
                      id: "view-client-data",
                      name: "viewClientData",
                      onClick: () => Y(!0),
                      className:
                        "flex items-center px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium shadow-sm",
                      title: "Ver todos os dados de cadastro do cliente",
                      children: [
                        e.jsx(zs, { className: "h-5 w-5 mr-2" }),
                        e.jsx("span", {
                          className: "text-xs sm:text-sm",
                          children: "Ver Dados",
                        }),
                      ],
                    }),
                    e.jsxs("button", {
                      id: "view-client-sales",
                      name: "viewClientSales",
                      onClick: () => Y(!1),
                      className:
                        "flex items-center px-3 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors text-sm font-medium shadow-sm",
                      title: "Ver vendas do cliente",
                      children: [
                        e.jsx(Qs, { className: "h-5 w-5 mr-2" }),
                        e.jsx("span", {
                          className: "text-xs sm:text-sm",
                          children: "Ver Vendas",
                        }),
                      ],
                    }),
                    fe.reduce((K, B) => K + B.pendingValue, 0) > 0 &&
                      e.jsxs("button", {
                        id: "distribute-payment",
                        name: "distributePayment",
                        onClick: () => U(!0),
                        className:
                          "flex items-center px-3 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors text-sm font-medium shadow-sm",
                        title: "Distribuir pagamento entre parcelas",
                        children: [
                          e.jsx(ut, { className: "h-5 w-5 mr-2" }),
                          e.jsx("span", {
                            className: "text-xs sm:text-sm",
                            children: "Distribuir Pagamento",
                          }),
                        ],
                      }),
                    fe.reduce((K, B) => K + B.totalReceived, 0) > 0 &&
                      e.jsxs("button", {
                        id: "edit-payments",
                        name: "editPayments",
                        onClick: Re,
                        className:
                          "flex items-center px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm font-medium shadow-sm",
                        title:
                          t === "manager"
                            ? "Editar valores recebidos"
                            : "Solicitar autorização para editar pagamentos",
                        children: [
                          e.jsx(_s, { className: "h-5 w-5 mr-2" }),
                          e.jsx("span", {
                            className: "text-xs sm:text-sm",
                            children: "Editar Pagamentos",
                          }),
                        ],
                      }),
                  ],
                }),
              ee
                ? e.jsxs("div", {
                    className: "overflow-y-auto max-h-[60vh] p-4 lg:p-6",
                    children: [
                      e.jsx("h3", {
                        className:
                          "text-sm sm:text-lg font-medium text-gray-900 mb-4",
                        children: "Dados de Cadastro do Cliente",
                      }),
                      e.jsx("div", {
                        className: "space-y-3 text-xs sm:text-sm text-gray-700",
                        children: Object.entries(s)
                          .filter(([K]) =>
                            [
                              "client",
                              "document",
                              "address",
                              "number",
                              "neighborhood",
                              "city",
                              "phone",
                              "mobile",
                            ].includes(K),
                          )
                          .map(([K, B]) => {
                            const X = {
                              client: "Nome do Cliente",
                              document: "Documento",
                              address: "Endereço",
                              number: "Número",
                              neighborhood: "Bairro",
                              city: "Cidade",
                              phone: "Telefone",
                              mobile: "Celular",
                            };
                            return e.jsxs(
                              "div",
                              {
                                className:
                                  "flex justify-between items-center border-b pb-2 last:border-b-0 last:pb-0",
                                children: [
                                  e.jsxs("span", {
                                    className: "font-medium capitalize",
                                    children: [
                                      X[K] ||
                                        K.replace(/([A-Z])/g, " $1").trim(),
                                      ":",
                                    ],
                                  }),
                                  e.jsx("span", {
                                    className: "text-right",
                                    children: B
                                      ? typeof B == "object" && B !== null
                                        ? JSON.stringify(B)
                                        : String(B)
                                      : "-",
                                  }),
                                ],
                              },
                              K,
                            );
                          }),
                      }),
                    ],
                  })
                : e.jsx("div", {
                    className: "overflow-y-auto max-h-[60vh]",
                    children: e.jsxs("div", {
                      className: "px-4 lg:px-6 py-4",
                      children: [
                        e.jsxs("h3", {
                          className:
                            "text-sm sm:text-lg font-medium text-gray-900 mb-4",
                          children: [
                            "Vendas (",
                            fe.length,
                            " venda",
                            fe.length !== 1 ? "s" : "",
                            ")",
                          ],
                        }),
                        e.jsx("div", {
                          className: "space-y-3",
                          children: fe.map((K) => {
                            const B = i(K.saleNumber, s.document);
                            return e.jsxs(
                              "div",
                              {
                                className:
                                  "border border-gray-200 rounded-lg overflow-hidden",
                                children: [
                                  e.jsx("div", {
                                    className: "px-4 py-3 bg-gray-50",
                                    children: e.jsxs("div", {
                                      className:
                                        "flex items-center justify-between",
                                      children: [
                                        e.jsxs("div", {
                                          id: `sale-expansion-${K.saleNumber}`,
                                          className:
                                            "flex items-center flex-1 cursor-pointer hover:bg-gray-100 p-2 rounded-lg -m-2",
                                          onClick: () => se(K.saleNumber),
                                          children: [
                                            e.jsx("div", {
                                              className: "mr-3",
                                              children: G.has(K.saleNumber)
                                                ? e.jsx(Ns, {
                                                    className:
                                                      "h-5 w-5 text-gray-400",
                                                  })
                                                : e.jsx(js, {
                                                    className:
                                                      "h-5 w-5 text-gray-400",
                                                  }),
                                            }),
                                            e.jsxs("div", {
                                              children: [
                                                e.jsxs("h4", {
                                                  className:
                                                    "font-medium text-gray-900",
                                                  children: [
                                                    "Venda ",
                                                    K.saleNumber,
                                                  ],
                                                }),
                                                e.jsxs("p", {
                                                  className:
                                                    "text-xs sm:text-sm text-gray-600",
                                                  children: [
                                                    K.installments.length,
                                                    " parcela",
                                                    K.installments.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                                e.jsx("div", {
                                                  className:
                                                    "flex items-center mt-1",
                                                  children: e.jsx("span", {
                                                    className: `inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${B.status === "fully_paid" ? "bg-green-100 text-green-800" : B.status === "partially_paid" ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                                                    children:
                                                      B.status === "fully_paid"
                                                        ? "Pago Integralmente"
                                                        : B.status ===
                                                            "partially_paid"
                                                          ? "Parcialmente Pago"
                                                          : "Pendente",
                                                  }),
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className: "flex items-center gap-3",
                                          children: [
                                            e.jsxs("div", {
                                              className: "text-right",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "text-xs sm:text-sm font-medium text-gray-900",
                                                  children: q(K.totalValue),
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-green-600 font-medium",
                                                  children: [
                                                    "Pago: ",
                                                    q(B.totalPaid),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-red-600 font-medium",
                                                  children: [
                                                    "Restante:",
                                                    " ",
                                                    q(B.remainingBalance),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            t === "collector" &&
                                              B.remainingBalance > 0 &&
                                              e.jsxs("button", {
                                                id: `receive-payment-${K.saleNumber}`,
                                                name: `receivePayment${K.saleNumber}`,
                                                onClick: (X) => {
                                                  (X.stopPropagation(), we(K));
                                                },
                                                className:
                                                  "flex items-center px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm font-medium shadow-sm",
                                                title:
                                                  "Receber pagamento da venda",
                                                children: [
                                                  e.jsx(ut, {
                                                    className: "h-4 w-4 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "text-xs sm:text-sm",
                                                    children: "Receber",
                                                  }),
                                                ],
                                              }),
                                          ],
                                        }),
                                      ],
                                    }),
                                  }),
                                  G.has(K.saleNumber) &&
                                    e.jsx("div", {
                                      className: "px-4 py-3 bg-gray-50",
                                      children: e.jsxs("div", {
                                        className: "space-y-3",
                                        children: [
                                          e.jsxs("div", {
                                            className:
                                              "grid grid-cols-1 md:grid-cols-3 gap-4",
                                            children: [
                                              e.jsxs("div", {
                                                className:
                                                  "text-center p-3 bg-blue-50 rounded-lg",
                                                children: [
                                                  e.jsx("div", {
                                                    className:
                                                      "text-sm sm:text-base lg:text-lg font-bold text-blue-600",
                                                    children: q(
                                                      B.totalValue,
                                                      !1,
                                                    ),
                                                  }),
                                                  e.jsx("div", {
                                                    className:
                                                      "text-xs text-gray-600",
                                                    children: "Valor Total",
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "text-center p-3 bg-green-50 rounded-lg",
                                                children: [
                                                  e.jsx("div", {
                                                    className:
                                                      "text-sm sm:text-lg font-bold text-green-600",
                                                    children: q(B.totalPaid),
                                                  }),
                                                  e.jsx("div", {
                                                    className:
                                                      "text-xs text-gray-600",
                                                    children: "Já Pago",
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "text-center p-3 bg-red-50 rounded-lg",
                                                children: [
                                                  e.jsx("div", {
                                                    className:
                                                      "text-sm sm:text-lg font-bold text-red-600",
                                                    children: q(
                                                      B.remainingBalance,
                                                    ),
                                                  }),
                                                  e.jsx("div", {
                                                    className:
                                                      "text-xs text-gray-600",
                                                    children: "Saldo Devedor",
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className:
                                              "text-xs sm:text-sm text-gray-600 pt-2 border-t border-gray-200",
                                            children: [
                                              e.jsxs("div", {
                                                className:
                                                  "flex justify-between items-center",
                                                children: [
                                                  e.jsx("span", {
                                                    children:
                                                      "Número de parcelas:",
                                                  }),
                                                  e.jsx("span", {
                                                    className: "font-medium",
                                                    children:
                                                      K.installments.length,
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "flex justify-between items-center mt-1",
                                                children: [
                                                  e.jsx("span", {
                                                    children:
                                                      "Status da venda:",
                                                  }),
                                                  e.jsx("span", {
                                                    className: `font-medium ${B.status === "fully_paid" ? "text-green-600" : B.status === "partially_paid" ? "text-yellow-600" : "text-red-600"}`,
                                                    children:
                                                      B.status === "fully_paid"
                                                        ? "Quitada"
                                                        : B.status ===
                                                            "partially_paid"
                                                          ? "Parcial"
                                                          : "Pendente",
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                    }),
                                ],
                              },
                              K.saleNumber,
                            );
                          }),
                        }),
                      ],
                    }),
                  }),
            ],
          }),
        }),
        F && E && e.jsx(Ba, { saleGroup: E, onClose: re, onSuccess: de }),
        p &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl max-w-md w-full p-6 shadow-2xl",
              children: [
                e.jsx("h3", {
                  className:
                    "text-sm sm:text-lg font-semibold text-gray-900 mb-4",
                  children: "Autorização Necessária",
                }),
                y
                  ? e.jsxs(e.Fragment, {
                      children: [
                        _
                          ? e.jsx("div", {
                              className:
                                "bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4 animate-pulse",
                              children: e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "bg-blue-500 rounded-full p-1 mr-3",
                                    children: e.jsx("svg", {
                                      className: "h-4 w-4 text-white",
                                      fill: "currentColor",
                                      viewBox: "0 0 20 20",
                                      children: e.jsx("path", {
                                        fillRule: "evenodd",
                                        d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
                                        clipRule: "evenodd",
                                      }),
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-xs sm:text-sm font-medium text-blue-700",
                                        children:
                                          "Token Aprovado pelo Gerente!",
                                      }),
                                      e.jsxs("p", {
                                        className:
                                          "text-xs sm:text-sm text-blue-600",
                                        children: [
                                          "Token: ",
                                          e.jsx("span", {
                                            className: "font-mono font-bold",
                                            children: xe,
                                          }),
                                          " - Token preenchido automaticamente",
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            })
                          : !xe &&
                            e.jsx("div", {
                              className:
                                "bg-green-50 border border-green-200 rounded-lg p-3 mb-4",
                              children: e.jsx("p", {
                                className: "text-xs sm:text-sm text-green-700",
                                children:
                                  "✅ Solicitação enviada para o gerente! Aguarde a aprovação.",
                              }),
                            }),
                        e.jsxs("div", {
                          className: "space-y-4",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("label", {
                                  htmlFor: "auth-token",
                                  className:
                                    "block text-xs sm:text-sm font-medium text-gray-700 mb-2",
                                  children: "Token de Autorização",
                                }),
                                e.jsx("input", {
                                  id: "auth-token",
                                  name: "authToken",
                                  type: "text",
                                  value: v,
                                  onChange: (K) =>
                                    j(
                                      K.target.value
                                        .replace(/\D/g, "")
                                        .slice(0, 6),
                                    ),
                                  className:
                                    "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-center text-sm sm:text-lg font-mono",
                                  placeholder: "000000",
                                  maxLength: 6,
                                  onKeyDown: (K) => K.key === "Enter" && ne(),
                                }),
                              ],
                            }),
                            z &&
                              e.jsx("div", {
                                className:
                                  "bg-red-50 border border-red-200 rounded-lg p-3",
                                children: e.jsx("p", {
                                  className: "text-xs sm:text-sm text-red-700",
                                  children: z,
                                }),
                              }),
                            e.jsxs("div", {
                              className: "flex gap-3",
                              children: [
                                e.jsx("button", {
                                  id: "cancel-auth",
                                  name: "cancelAuth",
                                  onClick: () => {
                                    (I(!1), j(""), N(""), S(!1));
                                  },
                                  className:
                                    "flex-1 px-4 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors",
                                  children: "Cancelar",
                                }),
                                e.jsx("button", {
                                  id: "validate-token",
                                  name: "validateToken",
                                  onClick: ne,
                                  disabled: v.length !== 6,
                                  className:
                                    "flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
                                  children: "Validar Token",
                                }),
                              ],
                            }),
                            e.jsx("button", {
                              id: "new-request",
                              name: "newRequest",
                              onClick: () => {
                                (S(!1),
                                  J(!1),
                                  he(!1),
                                  j(""),
                                  N(""),
                                  R(""),
                                  pe(""));
                              },
                              className:
                                "w-full px-4 py-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors text-xs sm:text-sm",
                              children: "Solicitar Nova Autorização",
                            }),
                          ],
                        }),
                      ],
                    })
                  : e.jsxs(e.Fragment, {
                      children: [
                        e.jsx("p", {
                          className: "text-gray-600 mb-4",
                          children:
                            "Para editar pagamentos, é necessária autorização do gerente. Clique no botão abaixo para solicitar um token de autorização.",
                        }),
                        e.jsx("p", {
                          className: "text-xs sm:text-sm text-amber-600 mb-4",
                          children:
                            "⚠️ O token expira em 5 minutos após a aprovação.",
                        }),
                        e.jsxs("div", {
                          className: "space-y-4",
                          children: [
                            z &&
                              e.jsx("div", {
                                className:
                                  "bg-red-50 border border-red-200 rounded-lg p-3",
                                children: e.jsx("p", {
                                  className: "text-xs sm:text-sm text-red-700",
                                  children: z,
                                }),
                              }),
                            e.jsxs("div", {
                              className: "flex gap-3",
                              children: [
                                e.jsx("button", {
                                  id: "cancel-auth",
                                  name: "cancelAuth",
                                  onClick: () => {
                                    (I(!1), j(""), N(""), S(!1));
                                  },
                                  className:
                                    "flex-1 px-4 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors",
                                  children: "Cancelar",
                                }),
                                e.jsx("button", {
                                  id: "request-auth",
                                  name: "requestAuth",
                                  onClick: Ve,
                                  disabled: H,
                                  className:
                                    "flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
                                  children: H
                                    ? "Solicitando..."
                                    : "Solicitar Autorização",
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
              ],
            }),
          }),
        V &&
          e.jsx(Ua, {
            clientGroup: s,
            clientSales: fe,
            onClose: () => U(!1),
            onSuccess: oe,
          }),
        A &&
          e.jsx(Ha, {
            clientGroup: s,
            clientSales: fe,
            onClose: () => Q(!1),
            onSuccess: P,
          }),
        Z &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsx("div", {
              className: "bg-white rounded-xl max-w-md w-full p-6 shadow-2xl",
              children: e.jsxs("div", {
                className: "text-center",
                children: [
                  e.jsx("div", {
                    className:
                      "mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4",
                    children: e.jsx("svg", {
                      className: "h-6 w-6 text-red-600",
                      fill: "none",
                      viewBox: "0 0 24 24",
                      strokeWidth: "1.5",
                      stroke: "currentColor",
                      children: e.jsx("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 18L18 6M6 6l12 12",
                      }),
                    }),
                  }),
                  e.jsx("h3", {
                    className:
                      "text-sm sm:text-lg font-semibold text-gray-900 mb-2",
                    children: "Solicitação Rejeitada",
                  }),
                  e.jsx("p", {
                    className: "text-xs sm:text-sm text-gray-600 mb-6",
                    children:
                      "Sua solicitação de autorização foi rejeitada pelo gerente.",
                  }),
                  e.jsx("button", {
                    onClick: () => {
                      (he(!1), S(!1), j(""), N(""));
                    },
                    className:
                      "w-full px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium",
                    children: "Fechar",
                  }),
                ],
              }),
            }),
          }),
      ],
    });
  },
  Et = ({ collections: s, onClose: t }) => {
    const { scheduledVisits: x, users: h } = Je(),
      i = r.useMemo(() => {
        if (!s.length) return null;
        const C = s[0],
          V = s.reduce((ee, Y) => ee + Y.valor_original, 0),
          U = s.reduce((ee, Y) => ee + Y.valor_recebido, 0),
          A = V - U;
        let Q = "pendente";
        return (
          U > 0 && A > 0 ? (Q = "parcial") : A <= 0.01 && U > 0 && (Q = "pago"),
          {
            ...C,
            totalOriginal: V,
            totalReceived: U,
            totalPending: A,
            saleStatus: Q,
            installmentsCount: s.length,
            collections: s.sort(
              (ee, Y) => (ee.parcela || 0) - (Y.parcela || 0),
            ),
          }
        );
      }, [s]),
      D = r.useMemo(
        () =>
          !(i != null && i.documento) || !x
            ? []
            : x
                .filter((C) => C.clientDocument === i.documento)
                .filter((C) => C.status === "realizada" && C.notes)
                .sort((C, V) => {
                  const U = new Date(C.updatedAt || C.createdAt);
                  return (
                    new Date(V.updatedAt || V.createdAt).getTime() - U.getTime()
                  );
                }),
        [i, x],
      ),
      E = (C) => {
        const V = h == null ? void 0 : h.find((U) => U.id === C);
        return (V == null ? void 0 : V.name) || "Cobrador não identificado";
      },
      O = (C) => {
        try {
          const [V, U, A] = C.split("-");
          return new Date(
            parseInt(V),
            parseInt(U) - 1,
            parseInt(A),
          ).toLocaleDateString("pt-BR");
        } catch {
          return C;
        }
      },
      F = (C) => {
        const V = {
            realizada: {
              bg: "bg-green-100",
              text: "text-green-800",
              label: "Realizada",
            },
            cancelada: {
              bg: "bg-gray-100",
              text: "text-gray-800",
              label: "Cancelada",
            },
            nao_encontrado: {
              bg: "bg-yellow-100",
              text: "text-yellow-800",
              label: "Não Encontrado",
            },
          },
          U = V[C] || V.realizada;
        return e.jsx("span", {
          className: `px-2 py-1 rounded-full text-xs font-semibold ${U.bg} ${U.text}`,
          children: U.label,
        });
      };
    return i
      ? e.jsx("div", {
          className:
            "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
          children: e.jsxs("div", {
            className:
              "bg-white rounded-xl shadow-xl max-w-5xl w-full max-h-[95vh] overflow-hidden",
            children: [
              e.jsxs("div", {
                className:
                  "px-6 py-4 border-b border-gray-200 flex items-center justify-between bg-gradient-to-r from-blue-600 to-purple-600 text-white",
                children: [
                  e.jsxs("div", {
                    children: [
                      e.jsx("h2", {
                        className: "text-xl font-semibold",
                        children: i.cliente,
                      }),
                      e.jsxs("p", {
                        className: "text-blue-100 text-sm",
                        children: ["Venda #", i.venda_n, " • ", i.nome_da_loja],
                      }),
                    ],
                  }),
                  e.jsx("button", {
                    onClick: t,
                    className:
                      "p-2 text-blue-100 hover:text-white transition-colors",
                    children: e.jsx(ze, { className: "h-5 w-5" }),
                  }),
                ],
              }),
              e.jsxs("div", {
                className: "p-6 overflow-y-auto max-h-[75vh]",
                children: [
                  e.jsxs("div", {
                    className: "grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8",
                    children: [
                      e.jsx("div", {
                        className:
                          "bg-gradient-to-br from-green-50 to-emerald-50 p-4 rounded-xl border border-green-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("p", {
                                  className:
                                    "text-sm font-medium text-green-700",
                                  children: "Valor Total",
                                }),
                                e.jsx("p", {
                                  className:
                                    "text-2xl font-bold text-green-900",
                                  children: q(i.totalOriginal),
                                }),
                              ],
                            }),
                            e.jsx(Oe, { className: "h-8 w-8 text-green-600" }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className:
                          "bg-gradient-to-br from-blue-50 to-indigo-50 p-4 rounded-xl border border-blue-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("p", {
                                  className:
                                    "text-sm font-medium text-blue-700",
                                  children: "Já Recebido",
                                }),
                                e.jsx("p", {
                                  className: "text-2xl font-bold text-blue-900",
                                  children: q(i.totalReceived),
                                }),
                              ],
                            }),
                            e.jsx(wa, { className: "h-8 w-8 text-blue-600" }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className:
                          "bg-gradient-to-br from-orange-50 to-red-50 p-4 rounded-xl border border-orange-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("p", {
                                  className:
                                    "text-sm font-medium text-orange-700",
                                  children: "Pendente",
                                }),
                                e.jsx("p", {
                                  className:
                                    "text-2xl font-bold text-orange-900",
                                  children: q(i.totalPending),
                                }),
                              ],
                            }),
                            e.jsx(Me, { className: "h-8 w-8 text-orange-600" }),
                          ],
                        }),
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8",
                    children: [
                      e.jsxs("div", {
                        className: "space-y-6",
                        children: [
                          e.jsxs("h3", {
                            className:
                              "text-lg font-semibold text-gray-900 flex items-center",
                            children: [
                              e.jsx(Is, {
                                className: "h-5 w-5 mr-2 text-blue-600",
                              }),
                              "Informações da Venda",
                            ],
                          }),
                          e.jsxs("div", {
                            className: "bg-gray-50 p-4 rounded-xl space-y-3",
                            children: [
                              e.jsxs("div", {
                                className: "flex justify-between",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-600",
                                    children: "Loja:",
                                  }),
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-semibold text-gray-900",
                                    children: i.nome_da_loja,
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex justify-between",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-600",
                                    children: "Número da Venda:",
                                  }),
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-semibold text-gray-900",
                                    children: i.venda_n,
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex justify-between",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-600",
                                    children: "Número de Parcelas:",
                                  }),
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-semibold text-gray-900",
                                    children: i.installmentsCount,
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex justify-between",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-600",
                                    children: "Tipo de Cobrança:",
                                  }),
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-semibold text-gray-900",
                                    children: i.tipo_de_cobranca,
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex justify-between",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-600",
                                    children: "Status da Venda:",
                                  }),
                                  e.jsx("span", {
                                    className: `text-sm font-semibold px-2 py-1 rounded-full ${i.saleStatus === "pago" ? "bg-green-100 text-green-800" : i.saleStatus === "parcial" ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                                    children: ht(i.saleStatus),
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                      e.jsxs("div", {
                        className: "space-y-6",
                        children: [
                          e.jsxs("h3", {
                            className:
                              "text-lg font-semibold text-gray-900 flex items-center",
                            children: [
                              e.jsx(bs, {
                                className: "h-5 w-5 mr-2 text-blue-600",
                              }),
                              "Contato e Endereço",
                            ],
                          }),
                          e.jsxs("div", {
                            className: "bg-gray-50 p-4 rounded-xl space-y-4",
                            children: [
                              e.jsxs("div", {
                                children: [
                                  e.jsx("p", {
                                    className:
                                      "text-sm font-medium text-gray-600 mb-2",
                                    children: "Cliente:",
                                  }),
                                  e.jsx("p", {
                                    className: "font-semibold text-gray-900",
                                    children: i.cliente,
                                  }),
                                  e.jsx("p", {
                                    className: "text-sm text-gray-600",
                                    children: i.documento,
                                  }),
                                ],
                              }),
                              (i.telefone || i.celular) &&
                                e.jsxs("div", {
                                  children: [
                                    e.jsx("p", {
                                      className:
                                        "text-sm font-medium text-gray-600 mb-2",
                                      children: "Contatos:",
                                    }),
                                    e.jsxs("div", {
                                      className: "space-y-2",
                                      children: [
                                        i.telefone &&
                                          e.jsxs("div", {
                                            className: "flex items-center",
                                            children: [
                                              e.jsx(bs, {
                                                className:
                                                  "h-4 w-4 text-gray-400 mr-2",
                                              }),
                                              e.jsx("span", {
                                                className: "text-sm",
                                                children: i.telefone,
                                              }),
                                            ],
                                          }),
                                        i.celular &&
                                          e.jsxs("div", {
                                            className: "flex items-center",
                                            children: [
                                              e.jsx(Mt, {
                                                className:
                                                  "h-4 w-4 text-gray-400 mr-2",
                                              }),
                                              e.jsx("span", {
                                                className: "text-sm",
                                                children: i.celular,
                                              }),
                                            ],
                                          }),
                                      ],
                                    }),
                                  ],
                                }),
                              e.jsxs("div", {
                                children: [
                                  e.jsx("p", {
                                    className:
                                      "text-sm font-medium text-gray-600 mb-2",
                                    children: "Endereço:",
                                  }),
                                  e.jsxs("div", {
                                    className: "flex items-start",
                                    children: [
                                      e.jsx(Fe, {
                                        className:
                                          "h-4 w-4 text-gray-400 mr-2 mt-1 flex-shrink-0",
                                      }),
                                      e.jsxs("div", {
                                        className: "text-sm",
                                        children: [
                                          e.jsxs("p", {
                                            children: [
                                              i.endereco,
                                              ", ",
                                              i.numero,
                                            ],
                                          }),
                                          i.complemento &&
                                            e.jsx("p", {
                                              children: i.complemento,
                                            }),
                                          e.jsxs("p", {
                                            children: [
                                              i.bairro,
                                              " - ",
                                              i.cidade,
                                              "/",
                                              i.estado,
                                            ],
                                          }),
                                          e.jsx("p", { children: i.cep }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "space-y-4",
                    children: [
                      e.jsxs("h3", {
                        className:
                          "text-lg font-semibold text-gray-900 flex items-center",
                        children: [
                          e.jsx(rs, {
                            className: "h-5 w-5 mr-2 text-blue-600",
                          }),
                          "Detalhes das Parcelas",
                        ],
                      }),
                      e.jsx("div", {
                        className:
                          "bg-white border border-gray-200 rounded-xl overflow-hidden",
                        children: e.jsx("div", {
                          className: "overflow-x-auto",
                          children: e.jsxs("table", {
                            className: "w-full",
                            children: [
                              e.jsx("thead", {
                                className: "bg-gray-50",
                                children: e.jsxs("tr", {
                                  children: [
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Parcela",
                                    }),
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Vencimento",
                                    }),
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Valor Original",
                                    }),
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Valor Recebido",
                                    }),
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Pendente",
                                    }),
                                    e.jsx("th", {
                                      className:
                                        "px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                      children: "Status",
                                    }),
                                  ],
                                }),
                              }),
                              e.jsx("tbody", {
                                className: "bg-white divide-y divide-gray-200",
                                children: i.collections.map((C, V) => {
                                  const U = C.valor_original - C.valor_recebido;
                                  let A = "pendente";
                                  return (
                                    C.valor_recebido > 0 && U > 0
                                      ? (A = "parcial")
                                      : U <= 0.01 &&
                                        C.valor_recebido > 0 &&
                                        (A = "pago"),
                                    e.jsxs(
                                      "tr",
                                      {
                                        className:
                                          V % 2 === 0
                                            ? "bg-white"
                                            : "bg-gray-50",
                                        children: [
                                          e.jsxs("td", {
                                            className:
                                              "px-4 py-3 text-sm font-medium text-gray-900",
                                            children: [C.parcela, "° Parcela"],
                                          }),
                                          e.jsx("td", {
                                            className:
                                              "px-4 py-3 text-sm text-gray-600",
                                            children: ls(
                                              C.data_vencimento || "",
                                            ),
                                          }),
                                          e.jsx("td", {
                                            className:
                                              "px-4 py-3 text-sm font-semibold text-gray-900",
                                            children: q(C.valor_original),
                                          }),
                                          e.jsx("td", {
                                            className:
                                              "px-4 py-3 text-sm font-semibold text-green-600",
                                            children: q(C.valor_recebido),
                                          }),
                                          e.jsx("td", {
                                            className:
                                              "px-4 py-3 text-sm font-semibold text-orange-600",
                                            children: q(U),
                                          }),
                                          e.jsx("td", {
                                            className: "px-4 py-3",
                                            children: e.jsx("span", {
                                              className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${A === "pago" ? "bg-green-100 text-green-800" : A === "parcial" ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                                              children: ht(A),
                                            }),
                                          }),
                                        ],
                                      },
                                      C.id_parcela,
                                    )
                                  );
                                }),
                              }),
                            ],
                          }),
                        }),
                      }),
                    ],
                  }),
                  D.length > 0 &&
                    e.jsxs("div", {
                      className: "mt-8 space-y-4",
                      children: [
                        e.jsxs("h3", {
                          className:
                            "text-lg font-semibold text-gray-900 flex items-center",
                          children: [
                            e.jsx(Ie, {
                              className: "h-5 w-5 mr-2 text-blue-600",
                            }),
                            "Histórico de Acompanhamento",
                          ],
                        }),
                        e.jsx("div", {
                          className: "space-y-3",
                          children: D.map((C) =>
                            e.jsx(
                              "div",
                              {
                                className:
                                  "bg-gray-50 p-4 rounded-xl border border-gray-200",
                                children: e.jsxs("div", {
                                  className:
                                    "flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3",
                                  children: [
                                    e.jsxs("div", {
                                      className: "flex-1",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center gap-2 mb-2",
                                          children: [
                                            F(C.status),
                                            e.jsxs("span", {
                                              className:
                                                "text-xs text-gray-500",
                                              children: [
                                                O(C.scheduledDate),
                                                C.scheduledTime &&
                                                  ` às ${C.scheduledTime}`,
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center text-sm text-gray-600 mb-2",
                                          children: [
                                            e.jsx(Qe, {
                                              className: "h-4 w-4 mr-1",
                                            }),
                                            e.jsx("span", {
                                              className: "font-medium",
                                              children: E(C.collectorId),
                                            }),
                                          ],
                                        }),
                                        C.notes &&
                                          e.jsx("div", {
                                            className:
                                              "bg-white p-3 rounded-lg border border-gray-200",
                                            children: e.jsx("p", {
                                              className:
                                                "text-sm text-gray-700 leading-relaxed",
                                              children: C.notes,
                                            }),
                                          }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className:
                                        "flex items-center text-xs text-gray-400",
                                      children: [
                                        e.jsx(Ie, {
                                          className: "h-3 w-3 mr-1",
                                        }),
                                        C.updatedAt
                                          ? e.jsxs(e.Fragment, {
                                              children: [
                                                "Finalizada em",
                                                " ",
                                                O(C.updatedAt.split("T")[0]),
                                              ],
                                            })
                                          : e.jsxs(e.Fragment, {
                                              children: [
                                                "Registrada em",
                                                " ",
                                                O(C.createdAt.split("T")[0]),
                                              ],
                                            }),
                                      ],
                                    }),
                                  ],
                                }),
                              },
                              C.id,
                            ),
                          ),
                        }),
                      ],
                    }),
                  i.obs &&
                    e.jsxs("div", {
                      className: "mt-8 space-y-4",
                      children: [
                        e.jsxs("h3", {
                          className:
                            "text-lg font-semibold text-gray-900 flex items-center",
                          children: [
                            e.jsx(rs, {
                              className: "h-5 w-5 mr-2 text-blue-600",
                            }),
                            "Observações da Venda",
                          ],
                        }),
                        e.jsx("div", {
                          className:
                            "bg-blue-50 p-4 rounded-xl border border-blue-200",
                          children: e.jsx("p", {
                            className: "text-sm text-gray-700",
                            children: i.obs,
                          }),
                        }),
                      ],
                    }),
                ],
              }),
              e.jsx("div", {
                className: "px-6 py-4 border-t border-gray-200 bg-gray-50",
                children: e.jsx("div", {
                  className: "flex justify-end",
                  children: e.jsx("button", {
                    onClick: t,
                    className:
                      "px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors",
                    children: "Fechar",
                  }),
                }),
              }),
            ],
          }),
        })
      : null;
  },
  Jt = Xe.memo(
    ({ collections: s, userType: t, showGrouped: x = !0, collectorId: h }) => {
      const { getClientGroups: i, loading: D } = Je(),
        [E, O] = r.useState(null),
        [F, C] = r.useState(null),
        [V, U] = r.useState([]),
        [A, Q] = r.useState(!1),
        [ee, Y] = r.useState(!1),
        [G, L] = r.useState(!1),
        [W, T] = r.useState(1),
        [p, I] = r.useState(10),
        [v, j] = r.useState("vencimento"),
        [z, N] = r.useState("asc"),
        [H, w] = r.useState(""),
        [y, S] = r.useState(!1),
        [_, J] = r.useState(new Set()),
        Z = (B) => {
          v === B ? N(z === "asc" ? "desc" : "asc") : (j(B), N("asc"));
        },
        he = (B) =>
          v !== B
            ? e.jsx(Ca, { className: "h-4 w-4 text-gray-400" })
            : z === "asc"
              ? e.jsx(Sa, { className: "h-4 w-4 text-white" })
              : e.jsx(_a, { className: "h-4 w-4 text-white" }),
        xe = (B) => {
          const X = new Set(_);
          (X.has(B) ? X.delete(B) : X.add(B), J(X));
        },
        R = () => {
          const B = new Set(Ae.map((X) => X.document));
          J(B);
        },
        ge = () => {
          J(new Set());
        },
        pe = () => {
          (O(null), Q(!1));
        },
        fe = (B) => {
          (C(B), Y(!0));
        },
        we = () => {
          (C(null), Y(!1));
        },
        re = (B) => {
          if (!B) return e.jsx(Ie, { className: "h-4 w-4 text-gray-600" });
          switch (B.toLowerCase()) {
            case "recebido":
              return e.jsx(Le, { className: "h-4 w-4 text-green-600" });
            case "pendente":
              return e.jsx(Ie, { className: "h-4 w-4 text-yellow-600" });
            default:
              return e.jsx(Be, { className: "h-4 w-4 text-red-600" });
          }
        },
        de = r.useMemo(() => {
          if (t === "manager") {
            const B = new Map();
            return (
              s.forEach((X) => {
                const je = (X.documento || X.cliente || "").trim();
                if (!je) return;
                B.has(je) ||
                  B.set(je, {
                    clientId: je,
                    client: X.cliente || "Cliente não informado",
                    document: X.documento || "",
                    phone: X.telefone || "",
                    mobile: X.celular || "",
                    address: `${X.endereco || ""}, ${X.numero || ""}`.trim(),
                    number: X.numero || "",
                    neighborhood: X.bairro || "",
                    city: X.cidade || "",
                    state: X.estado || "",
                    totalValue: 0,
                    totalReceived: 0,
                    pendingValue: 0,
                    sales: new Map(),
                  });
                const Se = B.get(je);
                ((Se.totalValue += X.valor_original || 0),
                  (Se.totalReceived += X.valor_recebido || 0),
                  (Se.pendingValue = parseFloat(
                    Math.max(0, Se.totalValue - Se.totalReceived).toFixed(2),
                  )));
                const ae = `${X.venda_n}-${X.documento}`;
                Se.sales.has(ae) ||
                  Se.sales.set(ae, {
                    saleNumber: X.venda_n || 0,
                    titleNumber: X.numero_titulo || 0,
                    description: X.descricao || "",
                    totalValue: 0,
                    totalReceived: 0,
                    pendingValue: 0,
                    saleStatus: "pending",
                    payments: [],
                    clientDocument: X.documento || "",
                    installments: [],
                  });
                const ke = Se.sales.get(ae);
                ((ke.totalValue += X.valor_original || 0),
                  (ke.totalReceived += X.valor_recebido || 0),
                  (ke.pendingValue = Math.max(
                    0,
                    ke.totalValue - ke.totalReceived,
                  )),
                  ke.installments.push(X),
                  ke.totalReceived === 0
                    ? (ke.saleStatus = "pending")
                    : ke.totalReceived >= ke.totalValue
                      ? (ke.saleStatus = "fully_paid")
                      : (ke.saleStatus = "partially_paid"));
              }),
              Array.from(B.values()).map((X) => ({
                ...X,
                sales: Array.from(X.sales.values()),
              }))
            );
          } else return i(h);
        }, [t, s, i, h]),
        oe = r.useMemo(() => {
          if (!x) return [];
          const B = new Set(s.map((X) => X.id_parcela));
          return de.filter((X) =>
            X.sales.some((je) =>
              je.installments.some((Se) => B.has(Se.id_parcela)),
            ),
          );
        }, [x, de, s]),
        P = r.useMemo(() => {
          if (!x) return [];
          let B = [...oe];
          t === "collector" &&
            B.sort((Se, ae) => {
              switch (v) {
                case "cliente":
                  return z === "asc"
                    ? Se.client.localeCompare(ae.client)
                    : ae.client.localeCompare(Se.client);
                case "valor":
                  return z === "asc"
                    ? Se.totalValue - ae.totalValue
                    : ae.totalValue - Se.totalValue;
                case "cidade":
                  return z === "asc"
                    ? Se.city.localeCompare(ae.city)
                    : ae.city.localeCompare(Se.city);
                default:
                  return 0;
              }
            });
          const X = (W - 1) * p,
            je = X + p;
          return B.slice(X, je);
        }, [oe, W, p, x, t, v, z]),
        se = r.useMemo(() => {
          if (x) return [];
          let B = de;
          t === "collector" &&
            H &&
            (B = de.filter((je) =>
              je.sales.some((Se) => {
                let ae;
                return (
                  Se.totalReceived > 0 && Se.pendingValue > 0
                    ? (ae = "parcial")
                    : Se.pendingValue <= 0.01 && Se.totalReceived > 0
                      ? (ae = "pago")
                      : (ae = "pendente"),
                  ae === H.toLowerCase()
                );
              }),
            ));
          const X = B.map((je) => ({
            client: je.client,
            document: je.document,
            cidade: je.city,
            bairro: je.neighborhood,
            sales: je.sales,
            totalValue: je.totalValue,
            totalReceived: je.totalReceived,
            pendingValue: je.pendingValue,
          }));
          return (
            X.sort((je, Se) => {
              let ae, ke;
              switch (v) {
                case "cliente":
                  ((ae = je.client), (ke = Se.client));
                  break;
                case "valor":
                  ((ae = je.totalValue), (ke = Se.totalValue));
                  break;
                case "cidade":
                  ((ae = je.cidade), (ke = Se.cidade));
                  break;
                default:
                  ((ae = je.client), (ke = Se.client));
                  break;
              }
              if (typeof ae == "string" && typeof ke == "string") {
                const Te = ae.localeCompare(ke);
                return z === "asc" ? Te : -Te;
              }
              return ae < ke
                ? z === "asc"
                  ? -1
                  : 1
                : ae > ke
                  ? z === "asc"
                    ? 1
                    : -1
                  : 0;
            }),
            X
          );
        }, [x, de, t, H, v, z]),
        Ae = r.useMemo(() => {
          if (x) return [];
          const B = (W - 1) * p,
            X = B + p;
          return se.slice(B, X);
        }, [se, W, p, x]),
        Ve = x ? oe.length : se.length,
        ne = Math.ceil(Ve / p),
        Re = Ve > 0 ? (W - 1) * p + 1 : 0,
        K = Math.min(W * p, Ve);
      return D
        ? e.jsx("div", {
            className: "bg-white rounded-xl shadow-sm p-8",
            children: e.jsxs("div", {
              className: "flex items-center justify-center",
              children: [
                e.jsx(Cs, {
                  className: "h-8 w-8 animate-spin text-blue-600 mr-3",
                }),
                e.jsx("span", {
                  className: "text-gray-600",
                  children: "Carregando dados...",
                }),
              ],
            }),
          })
        : x && oe.length > 0
          ? e.jsxs(e.Fragment, {
              children: [
                e.jsxs("div", {
                  className: "bg-white rounded-xl shadow-sm overflow-hidden",
                  children: [
                    e.jsxs("div", {
                      className: "px-4 py-4 border-b border-gray-200",
                      children: [
                        e.jsx("h2", {
                          className: "text-lg font-semibold text-gray-900",
                          children:
                            t === "manager"
                              ? "Clientes e Cobranças"
                              : "Meus Clientes",
                        }),
                        e.jsx("div", {
                          className: "flex justify-between items-center mt-1",
                          children: e.jsxs("div", {
                            className:
                              "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2",
                            children: [
                              e.jsxs("p", {
                                className: "text-sm text-gray-600",
                                children: [
                                  oe.length,
                                  " cliente",
                                  oe.length !== 1 ? "s" : "",
                                  " com cobranças",
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center gap-2",
                                children: [
                                  e.jsx("label", {
                                    className: "text-sm text-gray-600",
                                    children: "Por página:",
                                  }),
                                  e.jsxs("select", {
                                    id: "items-per-page",
                                    name: "itemsPerPage",
                                    value: p,
                                    onChange: (B) => {
                                      (I(Number(B.target.value)), T(1));
                                    },
                                    className:
                                      "text-sm border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                                    children: [
                                      e.jsx("option", {
                                        value: 10,
                                        children: "10",
                                      }),
                                      e.jsx("option", {
                                        value: 20,
                                        children: "20",
                                      }),
                                      e.jsx("option", {
                                        value: 50,
                                        children: "50",
                                      }),
                                      e.jsx("option", {
                                        value: 100,
                                        children: "100",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        }),
                      ],
                    }),
                    t === "collector" &&
                      e.jsx("div", {
                        className:
                          "px-4 py-3 bg-gradient-to-r from-gray-50 to-blue-50 border-b border-gray-200",
                        children: e.jsxs("div", {
                          className:
                            "flex flex-col sm:flex-row sm:items-center gap-3",
                          children: [
                            e.jsx("span", {
                              className: "text-sm font-semibold text-gray-700",
                              children: "Ordenar por:",
                            }),
                            e.jsxs("div", {
                              className: "flex flex-wrap gap-2",
                              children: [
                                e.jsxs("button", {
                                  id: "sort-by-cliente",
                                  name: "sortByCliente",
                                  onClick: () => Z("cliente"),
                                  className: `flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${v === "cliente" ? "bg-blue-600 text-white shadow-md" : "bg-white text-gray-600 hover:text-gray-900 border border-gray-300 hover:border-gray-400"}`,
                                  children: [
                                    e.jsx("span", { children: "Nome" }),
                                    he("cliente"),
                                  ],
                                }),
                                e.jsxs("button", {
                                  id: "sort-by-valor",
                                  name: "sortByValor",
                                  onClick: () => Z("valor"),
                                  className: `flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${v === "valor" ? "bg-blue-600 text-white shadow-md" : "bg-white text-gray-600 hover:text-gray-900 border border-gray-300 hover:border-gray-400"}`,
                                  children: [
                                    e.jsx("span", { children: "Valor" }),
                                    he("valor"),
                                  ],
                                }),
                                e.jsxs("button", {
                                  id: "sort-by-cidade",
                                  name: "sortByCidade",
                                  onClick: () => Z("cidade"),
                                  className: `flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${v === "cidade" ? "bg-blue-600 text-white shadow-md" : "bg-white text-gray-600 hover:text-gray-900 border border-gray-300 hover:border-gray-400"}`,
                                  children: [
                                    e.jsx("span", { children: "Cidade" }),
                                    he("cidade"),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                      }),
                    e.jsx("div", {
                      className: "divide-y divide-gray-200",
                      children: P.map((B) =>
                        e.jsx(
                          "div",
                          {
                            className: "bg-white",
                            children: e.jsxs("div", {
                              className:
                                "px-4 py-4 hover:bg-gray-50 cursor-pointer",
                              onClick: () => fe(B),
                              children: [
                                e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between",
                                  children: [
                                    e.jsxs("div", {
                                      className:
                                        "flex items-center flex-1 min-w-0",
                                      children: [
                                        e.jsx("div", {
                                          className: "flex-shrink-0 mr-3",
                                          children: e.jsx(Qe, {
                                            className: "h-5 w-5 text-blue-600",
                                          }),
                                        }),
                                        e.jsxs("div", {
                                          className: "flex-1 min-w-0",
                                          children: [
                                            e.jsx("h3", {
                                              className:
                                                "text-base font-medium text-gray-900 truncate",
                                              children: B.client,
                                            }),
                                            e.jsx("p", {
                                              className:
                                                "text-sm text-gray-500 truncate",
                                              children: B.document,
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs text-gray-500 mt-1",
                                              children: [
                                                e.jsx(Fe, {
                                                  className: "h-3 w-3 mr-1",
                                                }),
                                                e.jsxs("span", {
                                                  className: "truncate",
                                                  children: [
                                                    B.neighborhood,
                                                    ", ",
                                                    B.city,
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "flex-shrink-0 text-right",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-sm font-medium text-gray-900",
                                          children: q(B.totalValue),
                                        }),
                                        e.jsxs("div", {
                                          className: "text-xs text-gray-500",
                                          children: [
                                            B.sales.length,
                                            " venda",
                                            B.sales.length !== 1 ? "s" : "",
                                          ],
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  className: "mt-3 flex flex-wrap gap-2",
                                  children: [
                                    B.totalReceived > 0 &&
                                      e.jsxs("span", {
                                        className:
                                          "inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800",
                                        children: [
                                          e.jsx(ks, {
                                            className: "h-3 w-3 mr-1",
                                          }),
                                          q(B.totalReceived),
                                          " recebido",
                                        ],
                                      }),
                                    B.pendingValue > 0.01 &&
                                      e.jsxs("span", {
                                        className:
                                          "inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800",
                                        children: [
                                          q(B.pendingValue),
                                          " pendente",
                                        ],
                                      }),
                                  ],
                                }),
                              ],
                            }),
                          },
                          B.clientId,
                        ),
                      ),
                    }),
                    oe.length === 0 &&
                      e.jsx("div", {
                        className: "py-12 text-center",
                        children: e.jsxs("div", {
                          className: "text-gray-500",
                          children: [
                            e.jsx(Ie, {
                              className: "h-12 w-12 mx-auto mb-4 opacity-50",
                            }),
                            e.jsx("p", {
                              children: "Nenhuma cobrança encontrada",
                            }),
                          ],
                        }),
                      }),
                  ],
                }),
                ne > 1 &&
                  e.jsx("div", {
                    className: "bg-gray-800 px-4 sm:px-6 py-4 rounded-b-lg",
                    children: e.jsxs("div", {
                      className:
                        "flex flex-col sm:flex-row items-center justify-between gap-4",
                      children: [
                        e.jsxs("div", {
                          className:
                            "text-sm text-white text-center sm:text-left",
                          children: [
                            e.jsxs("span", {
                              className: "font-semibold",
                              children: ["Página ", W, " de ", ne],
                            }),
                            e.jsxs("span", {
                              className: "text-gray-300 ml-2",
                              children: [
                                "• Mostrando ",
                                Re,
                                " a ",
                                K,
                                " de ",
                                Ve,
                                " clientes",
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "flex items-center space-x-1 sm:space-x-2",
                          children: [
                            e.jsx("button", {
                              id: "pagination-start",
                              name: "paginationStart",
                              onClick: () => T(1),
                              disabled: W === 1,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: e.jsx("span", {
                                className: "text-xs",
                                children: "Início",
                              }),
                            }),
                            e.jsxs("button", {
                              id: "pagination-previous",
                              name: "paginationPrevious",
                              onClick: () => T(Math.max(1, W - 1)),
                              disabled: W === 1,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: [
                                e.jsx(ws, { className: "h-4 w-4 sm:mr-1" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Anterior",
                                }),
                              ],
                            }),
                            e.jsx("div", {
                              className: "flex space-x-1",
                              children: Array.from(
                                { length: Math.min(5, ne) },
                                (B, X) => {
                                  let je;
                                  return (
                                    ne <= 5 || W <= 3
                                      ? (je = X + 1)
                                      : W >= ne - 2
                                        ? (je = ne - 4 + X)
                                        : (je = W - 2 + X),
                                    e.jsx(
                                      "button",
                                      {
                                        id: `pagination-page-${je}`,
                                        name: `paginationPage${je}`,
                                        onClick: () => T(je),
                                        className: `px-2 sm:px-3 py-2 text-sm font-semibold rounded-lg transition-all duration-200 ${je === W ? "bg-white text-purple-600 shadow-lg transform scale-105" : "text-white bg-white bg-opacity-10 border border-white border-opacity-30 hover:bg-opacity-20"}`,
                                        children: je,
                                      },
                                      je,
                                    )
                                  );
                                },
                              ),
                            }),
                            e.jsxs("button", {
                              id: "pagination-next",
                              name: "paginationNext",
                              onClick: () => T(Math.min(ne, W + 1)),
                              disabled: W === ne,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: [
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Próxima",
                                }),
                                e.jsx(js, { className: "h-4 w-4 sm:ml-1" }),
                              ],
                            }),
                            e.jsx("button", {
                              id: "pagination-end",
                              name: "paginationEnd",
                              onClick: () => T(ne),
                              disabled: W === ne,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: e.jsx("span", {
                                className: "text-xs",
                                children: "Fim",
                              }),
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                A &&
                  E &&
                  e.jsx(Tt, { collection: E, userType: t, onClose: pe }),
                ee &&
                  F &&
                  e.jsx(Gt, { clientGroup: F, userType: t, onClose: we }),
                G &&
                  V.length > 0 &&
                  e.jsx(Et, {
                    collections: V,
                    onClose: () => {
                      (U([]), L(!1));
                    },
                  }),
              ],
            })
          : e.jsxs(e.Fragment, {
              children: [
                e.jsxs("div", {
                  className: "bg-white rounded-lg border border-gray-200",
                  children: [
                    e.jsx("div", {
                      className:
                        "px-4 sm:px-6 py-4 border-b border-gray-200 bg-gray-50",
                      children: e.jsxs("div", {
                        className: "space-y-4",
                        children: [
                          e.jsxs("div", {
                            className: "flex items-center justify-between",
                            children: [
                              e.jsxs("div", {
                                className: "flex items-center space-x-3",
                                children: [
                                  e.jsx(Oe, {
                                    className: "h-5 w-5 text-blue-600",
                                  }),
                                  e.jsx("h2", {
                                    className:
                                      "text-lg font-semibold text-gray-900",
                                    children:
                                      t === "manager"
                                        ? "Todas as Cobranças"
                                        : "Minha Carteira",
                                  }),
                                  e.jsxs("span", {
                                    className: "text-sm text-gray-500",
                                    children: [
                                      se.length,
                                      " cliente",
                                      se.length !== 1 ? "s" : "",
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center space-x-2",
                                children: [
                                  e.jsx("span", {
                                    className: "text-sm text-gray-600",
                                    children: "Por página:",
                                  }),
                                  e.jsxs("select", {
                                    id: "items-per-page",
                                    name: "itemsPerPage",
                                    value: p,
                                    onChange: (B) => {
                                      (I(Number(B.target.value)), T(1));
                                    },
                                    className:
                                      "text-sm border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white",
                                    children: [
                                      e.jsx("option", {
                                        value: 10,
                                        children: "10",
                                      }),
                                      e.jsx("option", {
                                        value: 20,
                                        children: "20",
                                      }),
                                      e.jsx("option", {
                                        value: 50,
                                        children: "50",
                                      }),
                                      e.jsx("option", {
                                        value: 100,
                                        children: "100",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 sm:gap-0",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center justify-between sm:justify-start sm:space-x-3",
                                children: [
                                  e.jsx("span", {
                                    className: "text-sm text-gray-600",
                                    children: "Ordenar:",
                                  }),
                                  e.jsxs("div", {
                                    className: "flex space-x-1",
                                    children: [
                                      e.jsx("button", {
                                        onClick: () => Z("cliente"),
                                        className: `p-2 rounded-lg transition-colors ${v === "cliente" ? "bg-blue-600 text-white" : "bg-white text-gray-600 hover:bg-gray-100"}`,
                                        title: "Ordenar por Cliente",
                                        children: e.jsx(Qe, {
                                          className: "h-4 w-4",
                                        }),
                                      }),
                                      e.jsx("button", {
                                        onClick: () => Z("valor"),
                                        className: `p-2 rounded-lg transition-colors ${v === "valor" ? "bg-blue-600 text-white" : "bg-white text-gray-600 hover:bg-gray-100"}`,
                                        title: "Ordenar por Valor",
                                        children: e.jsx(Oe, {
                                          className: "h-4 w-4",
                                        }),
                                      }),
                                      e.jsx("button", {
                                        onClick: () => Z("cidade"),
                                        className: `p-2 rounded-lg transition-colors ${v === "cidade" ? "bg-blue-600 text-white" : "bg-white text-gray-600 hover:bg-gray-100"}`,
                                        title: "Ordenar por Cidade",
                                        children: e.jsx(Fe, {
                                          className: "h-4 w-4",
                                        }),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "flex flex-col sm:flex-row sm:items-center gap-3 sm:space-x-3",
                                children: [
                                  ne > 1 &&
                                    e.jsxs("div", {
                                      className:
                                        "flex items-center justify-between sm:justify-start sm:space-x-2",
                                      children: [
                                        e.jsx("span", {
                                          className: "text-sm text-gray-600",
                                          children: "Ir para:",
                                        }),
                                        e.jsxs("div", {
                                          className: "flex space-x-1",
                                          children: [
                                            e.jsx("button", {
                                              onClick: () => T(1),
                                              disabled: W === 1,
                                              className:
                                                "px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                                              children: "Início",
                                            }),
                                            e.jsx("button", {
                                              onClick: () => T(ne),
                                              disabled: W === ne,
                                              className:
                                                "px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                                              children: "Fim",
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                  t === "collector" &&
                                    e.jsxs("button", {
                                      id: "toggle-filters",
                                      name: "toggleFilters",
                                      onClick: () => S(!y),
                                      className: `flex items-center justify-center sm:justify-start px-3 py-2 rounded-lg text-sm transition-colors ${y ? "bg-blue-600 text-white" : "bg-white text-gray-700 hover:bg-gray-100 border border-gray-200"}`,
                                      children: [
                                        e.jsx(fs, {
                                          className: "h-4 w-4 mr-2",
                                        }),
                                        "Filtros",
                                      ],
                                    }),
                                  e.jsxs("div", {
                                    className:
                                      "hidden sm:flex items-center justify-between sm:justify-start sm:space-x-2",
                                    children: [
                                      e.jsx("span", {
                                        className:
                                          "text-sm text-gray-600 hidden sm:inline",
                                        children: "Vendas:",
                                      }),
                                      e.jsxs("div", {
                                        className: "flex space-x-1",
                                        children: [
                                          e.jsx("button", {
                                            onClick: R,
                                            className:
                                              "p-2 bg-green-100 text-green-700 rounded-lg hover:bg-green-200 transition-colors",
                                            title: "Expandir todas as vendas",
                                            children: e.jsx(Ns, {
                                              className: "h-4 w-4",
                                            }),
                                          }),
                                          e.jsx("button", {
                                            onClick: ge,
                                            className:
                                              "p-2 bg-orange-100 text-orange-700 rounded-lg hover:bg-orange-200 transition-colors",
                                            title: "Retrair todas as vendas",
                                            children: e.jsx(Ds, {
                                              className: "h-4 w-4",
                                            }),
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                          t === "collector" &&
                            y &&
                            e.jsxs("div", {
                              className:
                                "flex items-center space-x-3 pt-2 border-t border-gray-200",
                              children: [
                                e.jsxs("div", {
                                  className: "flex items-center space-x-2",
                                  children: [
                                    e.jsx("label", {
                                      className: "text-sm text-gray-600",
                                      children: "Status:",
                                    }),
                                    e.jsxs("select", {
                                      id: "status-filter",
                                      name: "statusFilter",
                                      value: H,
                                      onChange: (B) => w(B.target.value),
                                      className:
                                        "text-sm border border-gray-300 rounded px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white",
                                      children: [
                                        e.jsx("option", {
                                          value: "",
                                          children: "Todos",
                                        }),
                                        e.jsx("option", {
                                          value: "pendente",
                                          children: "Pendente",
                                        }),
                                        e.jsx("option", {
                                          value: "pago",
                                          children: "Pago",
                                        }),
                                        e.jsx("option", {
                                          value: "parcial",
                                          children: "Parcial",
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                H &&
                                  e.jsx("button", {
                                    id: "clear-filter",
                                    name: "clearFilter",
                                    onClick: () => w(""),
                                    className:
                                      "px-3 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors text-sm",
                                    children: "Limpar",
                                  }),
                              ],
                            }),
                        ],
                      }),
                    }),
                    e.jsx("div", {
                      className: "divide-y divide-gray-100",
                      children: Ae.map((B) =>
                        e.jsxs(
                          "div",
                          {
                            className:
                              "bg-white hover:shadow-sm transition-all duration-200",
                            children: [
                              e.jsx("div", {
                                className:
                                  "px-4 sm:px-6 py-4 sm:py-5 bg-gradient-to-r from-gray-50 to-blue-50 cursor-pointer hover:from-gray-100 hover:to-blue-100 transition-all duration-200 border-l-4 border-transparent hover:border-blue-400",
                                onClick: () => xe(B.document),
                                children: e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between",
                                  children: [
                                    e.jsxs("div", {
                                      className:
                                        "flex items-center flex-1 min-w-0",
                                      children: [
                                        e.jsx("div", {
                                          className: "flex-shrink-0 mr-3",
                                          children: e.jsx("button", {
                                            id: `client-toggle-${B.document}`,
                                            name: `clientToggle${B.document}`,
                                            className:
                                              "p-1 rounded-full bg-white shadow-sm hover:shadow-md transition-all duration-200 border border-gray-200",
                                            children: _.has(B.document)
                                              ? e.jsx(Ds, {
                                                  className:
                                                    "h-4 w-4 text-blue-600",
                                                })
                                              : e.jsx(Ns, {
                                                  className:
                                                    "h-4 w-4 text-blue-600",
                                                }),
                                          }),
                                        }),
                                        e.jsx("div", {
                                          className: "flex-shrink-0 mr-3",
                                          children: e.jsx("div", {
                                            className:
                                              "p-2 bg-blue-100 rounded-full",
                                            children: e.jsx(Qe, {
                                              className:
                                                "h-5 w-5 text-blue-600",
                                            }),
                                          }),
                                        }),
                                        e.jsxs("div", {
                                          className: "flex-1 min-w-0",
                                          children: [
                                            e.jsx("h3", {
                                              className:
                                                "text-lg font-bold text-gray-900 truncate",
                                              children: B.client,
                                            }),
                                            e.jsx("p", {
                                              className:
                                                "text-sm text-gray-600 truncate font-mono bg-gray-100 px-2 py-1 rounded mt-1 inline-block",
                                              children: B.document,
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs text-gray-500 mt-2",
                                              children: [
                                                e.jsx(Fe, {
                                                  className:
                                                    "h-3 w-3 mr-1 text-gray-400",
                                                }),
                                                e.jsxs("span", {
                                                  className: "truncate",
                                                  children: [
                                                    B.bairro,
                                                    ", ",
                                                    B.cidade,
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "flex-shrink-0 text-right",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-xl font-bold text-gray-900",
                                          children: q(B.totalValue),
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "text-sm text-gray-600 mt-1",
                                          children: [
                                            B.sales.length,
                                            " venda",
                                            B.sales.length !== 1 ? "s" : "",
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex flex-col sm:flex-row justify-end gap-1 sm:gap-2 mt-3",
                                          children: [
                                            B.totalReceived > 0 &&
                                              e.jsxs("span", {
                                                className:
                                                  "inline-flex items-center px-2.5 py-1 rounded-full text-xs font-semibold bg-green-100 text-green-800 shadow-sm",
                                                children: [
                                                  e.jsx(ks, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  q(B.totalReceived),
                                                ],
                                              }),
                                            B.pendingValue > 0 &&
                                              e.jsxs("span", {
                                                className:
                                                  "inline-flex items-center px-2.5 py-1 rounded-full text-xs font-semibold bg-red-100 text-red-800 shadow-sm",
                                                children: [
                                                  e.jsx(Be, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  q(B.pendingValue),
                                                ],
                                              }),
                                          ],
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                              }),
                              _.has(B.document) &&
                                e.jsx("div", {
                                  className:
                                    "px-4 sm:px-6 py-4 border-t border-gray-200 bg-gray-50 animate-in slide-in-from-top-2 duration-200",
                                  children: e.jsx("div", {
                                    className: "space-y-3",
                                    children: B.sales.map((X) => {
                                      let je, Se;
                                      return (
                                        X.totalReceived > 0 &&
                                        X.pendingValue > 0
                                          ? ((je = "Parcial"),
                                            (Se =
                                              "bg-yellow-100 text-yellow-800"))
                                          : X.pendingValue <= 0.01
                                            ? ((je = "Quitado"),
                                              (Se =
                                                "bg-green-100 text-green-800"))
                                            : ((je = "Pendente"),
                                              (Se = "bg-red-100 text-red-800")),
                                        e.jsx(
                                          "div",
                                          {
                                            className:
                                              "bg-white border border-gray-200 rounded-lg hover:border-gray-300 transition-colors",
                                            children: e.jsxs("div", {
                                              className: "p-4",
                                              children: [
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center justify-between mb-3",
                                                  children: [
                                                    e.jsxs("div", {
                                                      className:
                                                        "font-medium text-gray-900",
                                                      children: [
                                                        "Venda #",
                                                        X.saleNumber,
                                                      ],
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center space-x-2",
                                                      children: [
                                                        re(
                                                          je === "Quitado"
                                                            ? "recebido"
                                                            : "pendente",
                                                        ),
                                                        e.jsx("span", {
                                                          className: `inline-flex px-2 py-1 text-xs font-medium rounded ${Se}`,
                                                          children: je,
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "grid grid-cols-2 gap-4 mb-3",
                                                  children: [
                                                    e.jsxs("div", {
                                                      children: [
                                                        e.jsx("div", {
                                                          className:
                                                            "text-sm text-gray-500",
                                                          children: "Total",
                                                        }),
                                                        e.jsx("div", {
                                                          className:
                                                            "font-semibold text-gray-900",
                                                          children: q(
                                                            X.totalValue,
                                                          ),
                                                        }),
                                                      ],
                                                    }),
                                                    X.totalReceived > 0 &&
                                                      e.jsxs("div", {
                                                        children: [
                                                          e.jsx("div", {
                                                            className:
                                                              "text-sm text-gray-500",
                                                            children:
                                                              "Recebido",
                                                          }),
                                                          e.jsx("div", {
                                                            className:
                                                              "font-semibold text-green-600",
                                                            children: q(
                                                              X.totalReceived,
                                                            ),
                                                          }),
                                                        ],
                                                      }),
                                                    e.jsxs("div", {
                                                      className: "col-span-2",
                                                      children: [
                                                        e.jsx("div", {
                                                          className:
                                                            "text-sm text-gray-500",
                                                          children:
                                                            X.pendingValue > 0
                                                              ? "Pendente"
                                                              : "Status",
                                                        }),
                                                        e.jsx("div", {
                                                          className: `font-semibold ${X.pendingValue > 0 ? "text-red-600" : "text-green-600"}`,
                                                          children:
                                                            X.pendingValue > 0
                                                              ? q(
                                                                  X.pendingValue,
                                                                )
                                                              : "Quitado",
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-sm text-gray-500 mb-3",
                                                  children: [
                                                    X.installments.length,
                                                    " parcela",
                                                    X.installments.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className: "flex space-x-2",
                                                  children: [
                                                    e.jsxs("button", {
                                                      id: `view-sale-${X.saleNumber}`,
                                                      name: `viewSale${X.saleNumber}`,
                                                      onClick: (ae) => {
                                                        ae.stopPropagation();
                                                        const ke =
                                                          X.installments
                                                            .map((Te) =>
                                                              s.find(
                                                                (le) =>
                                                                  le.id_parcela ===
                                                                  Te.id_parcela,
                                                              ),
                                                            )
                                                            .filter(
                                                              (Te) =>
                                                                Te !== void 0,
                                                            );
                                                        ke.length > 0 &&
                                                          (U(ke), L(!0));
                                                      },
                                                      className:
                                                        "flex items-center justify-center px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm flex-1",
                                                      title:
                                                        "Ver detalhes da venda",
                                                      children: [
                                                        e.jsx(pt, {
                                                          className:
                                                            "h-4 w-4 mr-2",
                                                        }),
                                                        e.jsx("span", {
                                                          children:
                                                            "Ver Detalhes",
                                                        }),
                                                      ],
                                                    }),
                                                    t === "collector" &&
                                                      e.jsxs("button", {
                                                        id: `manage-payments-${X.saleNumber}`,
                                                        name: `managePayments${X.saleNumber}`,
                                                        onClick: (ae) => {
                                                          ae.stopPropagation();
                                                          const ke = de.find(
                                                            (Te) =>
                                                              Te.document ===
                                                              B.document,
                                                          );
                                                          ke && fe(ke);
                                                        },
                                                        className:
                                                          "flex items-center justify-center px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm flex-1",
                                                        title:
                                                          "Gerenciar pagamentos",
                                                        children: [
                                                          e.jsx(Oe, {
                                                            className:
                                                              "h-4 w-4 mr-2",
                                                          }),
                                                          e.jsx("span", {
                                                            children: "Pagar",
                                                          }),
                                                        ],
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                          },
                                          X.saleNumber,
                                        )
                                      );
                                    }),
                                  }),
                                }),
                            ],
                          },
                          B.document,
                        ),
                      ),
                    }),
                    se.length === 0 &&
                      e.jsx("div", {
                        className: "py-16 text-center",
                        children: e.jsxs("div", {
                          className: "text-gray-500",
                          children: [
                            e.jsx("div", {
                              className:
                                "mx-auto w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mb-6",
                              children: e.jsx(Ie, {
                                className: "h-8 w-8 text-gray-400",
                              }),
                            }),
                            e.jsx("h3", {
                              className:
                                "text-lg font-semibold text-gray-900 mb-2",
                              children: "Nenhum cliente com vendas encontrado",
                            }),
                            e.jsx("p", {
                              className: "text-gray-600 max-w-md mx-auto",
                              children:
                                t === "collector" && H
                                  ? "Tente ajustar os filtros para ver mais resultados."
                                  : "Não há clientes com vendas disponíveis no momento.",
                            }),
                            t === "collector" &&
                              H &&
                              e.jsx("button", {
                                id: "clear-all-filters",
                                name: "clearAllFilters",
                                onClick: () => w(""),
                                className:
                                  "mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium",
                                children: "Limpar filtros",
                              }),
                          ],
                        }),
                      }),
                  ],
                }),
                ne > 1 &&
                  e.jsx("div", {
                    className:
                      "bg-gray-800 border-t border-gray-200 px-4 sm:px-6 py-4 rounded-b-lg",
                    children: e.jsxs("div", {
                      className:
                        "flex flex-col sm:flex-row items-center justify-between gap-4",
                      children: [
                        e.jsxs("div", {
                          className:
                            "text-sm text-white text-center sm:text-left",
                          children: [
                            e.jsxs("span", {
                              className: "font-semibold",
                              children: ["Página ", W, " de ", ne],
                            }),
                            e.jsxs("span", {
                              className: "text-gray-300 ml-2",
                              children: [
                                "• Mostrando ",
                                Re,
                                " a ",
                                K,
                                " de ",
                                Ve,
                                " clientes",
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "flex items-center space-x-1 sm:space-x-2",
                          children: [
                            e.jsx("button", {
                              id: "pagination-start-2",
                              name: "paginationStart2",
                              onClick: () => T(1),
                              disabled: W === 1,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: e.jsx("span", {
                                className: "text-xs",
                                children: "Início",
                              }),
                            }),
                            e.jsxs("button", {
                              id: "pagination-previous-2",
                              name: "paginationPrevious2",
                              onClick: () => T(Math.max(1, W - 1)),
                              disabled: W === 1,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: [
                                e.jsx(ws, { className: "h-4 w-4 sm:mr-1" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Anterior",
                                }),
                              ],
                            }),
                            e.jsx("div", {
                              className: "flex space-x-1",
                              children: Array.from(
                                { length: Math.min(3, ne) },
                                (B, X) => {
                                  let je;
                                  return (
                                    ne <= 5 || W <= 3
                                      ? (je = X + 1)
                                      : W >= ne - 2
                                        ? (je = ne - 4 + X)
                                        : (je = W - 2 + X),
                                    e.jsx(
                                      "button",
                                      {
                                        id: `pagination-page-${je}-2`,
                                        name: `paginationPage${je}2`,
                                        onClick: () => T(je),
                                        className: `px-2 sm:px-3 py-2 text-sm font-semibold rounded-lg transition-all duration-200 ${je === W ? "bg-white text-purple-600 shadow-lg transform scale-105" : "text-white bg-white bg-opacity-10 border border-white border-opacity-30 hover:bg-opacity-20"}`,
                                        children: je,
                                      },
                                      je,
                                    )
                                  );
                                },
                              ),
                            }),
                            e.jsxs("button", {
                              id: "pagination-next-2",
                              name: "paginationNext2",
                              onClick: () => T(Math.min(ne, W + 1)),
                              disabled: W === ne,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: [
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Próxima",
                                }),
                                e.jsx(js, { className: "h-4 w-4 sm:ml-1" }),
                              ],
                            }),
                            e.jsx("button", {
                              id: "pagination-end-2",
                              name: "paginationEnd2",
                              onClick: () => T(ne),
                              disabled: W === ne,
                              className:
                                "flex items-center px-2 sm:px-3 py-2 border border-white border-opacity-30 rounded-lg text-sm font-medium text-white bg-white bg-opacity-10 hover:bg-opacity-20 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200",
                              children: e.jsx("span", {
                                className: "text-xs",
                                children: "Fim",
                              }),
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                A &&
                  E &&
                  e.jsx(Tt, { collection: E, userType: t, onClose: pe }),
                G &&
                  V.length > 0 &&
                  e.jsx(Et, {
                    collections: V,
                    onClose: () => {
                      (U([]), L(!1));
                    },
                  }),
              ],
            });
    },
  ),
  Wa = () => {
    const { collections: s, users: t } = Je(),
      [x, h] = r.useState("month"),
      [i, D] = r.useState("conversionRate"),
      [E, O] = r.useState("desc");
    r.useState(new Set());
    const [F, C] = r.useState(""),
      V = (T) => {
        const p = [
            "",
            "um",
            "dois",
            "três",
            "quatro",
            "cinco",
            "seis",
            "sete",
            "oito",
            "nove",
          ],
          I = [
            "",
            "",
            "vinte",
            "trinta",
            "quarenta",
            "cinquenta",
            "sessenta",
            "setenta",
            "oitenta",
            "noventa",
          ],
          v = [
            "dez",
            "onze",
            "doze",
            "treze",
            "quatorze",
            "quinze",
            "dezesseis",
            "dezessete",
            "dezoito",
            "dezenove",
          ],
          j = [
            "",
            "cento",
            "duzentos",
            "trezentos",
            "quatrocentos",
            "quinhentos",
            "seiscentos",
            "setecentos",
            "oitocentos",
            "novecentos",
          ];
        if (T === 0) return "zero";
        if (T === 100) return "cem";
        if (T === 1e3) return "mil";
        const z = [],
          N = Math.floor(T / 100);
        N > 0 && z.push(j[N]);
        const H = T % 100;
        if (H >= 10 && H <= 19) z.push(v[H - 10]);
        else {
          const w = Math.floor(H / 10),
            y = H % 10;
          (w > 0 && z.push(I[w]), y > 0 && z.push(p[y]));
        }
        return z.join(" e ");
      },
      U = (T) => {
        if (!(window.innerWidth < 640)) return q(T, !1);
        const I = Math.floor(T);
        if (I === 0) return "R$ 0";
        let v = "",
          j = [];
        if (I >= 1e6) {
          const N = Math.floor(I / 1e6),
            H = I % 1e6;
          if (((v = `R$ ${N}M`), H > 0)) {
            const w = Math.floor(H / 1e3),
              y = H % 1e3;
            if (w > 0) {
              const S = V(w);
              j.push(`${S} mil`);
            }
            if (y > 0) {
              const S = V(y);
              j.push(`${S} reais`);
            } else j.length > 0 && j.push("reais");
          }
        } else if (I >= 1e4) {
          const N = Math.floor(I / 1e3),
            H = I % 1e3;
          if (((v = `R$ ${N} mil`), H > 0)) {
            const w = V(H);
            j.push(`${w} reais`);
          }
        } else if (I >= 1e3) {
          const N = Math.floor(I / 1e3),
            H = I % 1e3;
          if (((v = `R$ ${N} mil`), H > 0)) {
            const w = V(H);
            j.push(`${w} reais`);
          }
        } else return `R$ ${I}`;
        const z = j.join(" e ");
        return e.jsxs("div", {
          className: "flex flex-col items-start",
          children: [
            e.jsx("span", { className: "text-2xl font-semibold", children: v }),
            z &&
              e.jsx("span", {
                className: "text-xs text-blue-200 opacity-90",
                children: z,
              }),
          ],
        });
      },
      A = r.useMemo(
        () =>
          t
            .filter((p) => p.type === "collector")
            .map((p) => {
              const I = s.filter((xe) => xe.user_id === p.id),
                v = new Map();
              (I.forEach((xe) => {
                const R = `${xe.venda_n}-${xe.documento}`;
                v.has(R) ||
                  v.set(R, {
                    totalValue: 0,
                    receivedValue: 0,
                    isPending: !1,
                    clientDocument: xe.documento || "",
                  });
                const ge = v.get(R);
                ((ge.totalValue += xe.valor_original),
                  (ge.receivedValue += xe.valor_recebido));
              }),
                v.forEach((xe) => {
                  const R = Math.max(0, xe.totalValue - xe.receivedValue);
                  xe.isPending = R > 0.01;
                }));
              const j = Array.from(v.values()),
                z = j.length,
                N = j.filter((xe) => !xe.isPending).length,
                H = j.filter((xe) => xe.isPending).length,
                w = new Set(
                  j
                    .filter((xe) => xe.isPending)
                    .map((xe) => xe.clientDocument)
                    .filter(Boolean),
                ).size,
                y = j.reduce((xe, R) => xe + R.totalValue, 0),
                S = j.reduce((xe, R) => xe + R.receivedValue, 0),
                _ = z > 0 ? (N / z) * 100 : 0,
                J = z > 0 ? y / z : 0,
                Z = y > 0 ? (S / y) * 100 : 0,
                he = new Set(j.map((xe) => xe.clientDocument)).size;
              return {
                collectorId: p.id,
                collectorName: p.name,
                totalSales: z,
                completedSales: N,
                pendingSales: H,
                clientsWithPending: w,
                totalAmount: y,
                receivedAmount: S,
                conversionRate: _,
                averageTicket: J,
                efficiency: Z,
                clientsCount: he,
              };
            }),
        [s, t],
      ),
      Q = r.useMemo(() => {
        let T = A;
        if (F) {
          const p = parseFloat(F);
          T = T.filter((I) => I.conversionRate >= p);
        }
        return (
          T.sort((p, I) => {
            const v = p[i],
              j = I[i];
            return E === "desc" ? j - v : v - j;
          }),
          T
        );
      }, [A, i, E, F]),
      ee = r.useMemo(() => {
        const T = A.reduce((z, N) => z + N.totalSales, 0),
          p = A.reduce((z, N) => z + N.receivedAmount, 0),
          I = A.reduce((z, N) => z + N.totalAmount, 0),
          v =
            A.length > 0
              ? A.reduce((z, N) => z + N.conversionRate, 0) / A.length
              : 0,
          j =
            A.length > 0
              ? A.reduce((z, N) =>
                  N.conversionRate > z.conversionRate ? N : z,
                )
              : null;
        return {
          totalSales: T,
          totalReceived: p,
          totalAmount: I,
          avgConversionRate: v,
          topPerformer: j,
          teamEfficiency: I > 0 ? (p / I) * 100 : 0,
        };
      }, [A]),
      Y = () => {
        const T = [
            "Cobrador",
            "Total de Vendas",
            "Vendas Finalizadas",
            "Vendas Pendentes",
            "Clientes com Pendências",
            "Taxa de Conversão (%)",
            "Valor Total (R$)",
            "Valor Recebido (R$)",
            "Valor Pendente (R$)",
            "Eficiência (%)",
            "Ticket Médio (R$)",
            "Total de Clientes",
            "Ranking Taxa",
            "Ranking Valor",
          ],
          p = Q.map((N) => {
            const H = N.totalAmount - N.receivedAmount,
              w =
                A.sort((S, _) => _.conversionRate - S.conversionRate).findIndex(
                  (S) => S.collectorId === N.collectorId,
                ) + 1,
              y =
                A.sort((S, _) => _.receivedAmount - S.receivedAmount).findIndex(
                  (S) => S.collectorId === N.collectorId,
                ) + 1;
            return [
              N.collectorName,
              N.totalSales.toString(),
              N.completedSales.toString(),
              N.pendingSales.toString(),
              N.clientsWithPending.toString(),
              N.conversionRate.toFixed(1),
              N.totalAmount.toFixed(2),
              N.receivedAmount.toFixed(2),
              H.toFixed(2),
              N.efficiency.toFixed(1),
              N.averageTicket.toFixed(2),
              N.clientsCount.toString(),
              w.toString(),
              y.toString(),
            ];
          }),
          I = [
            T.join(","),
            ...p.map((N) =>
              N.map((H) => {
                const w = H.toString().replace(/"/g, '""');
                return /[",\n\r]/.test(w) ? `"${w}"` : w;
              }).join(","),
            ),
          ].join(`
`),
          v = "\uFEFF",
          j = new Blob([v + I], { type: "text/csv;charset=utf-8;" }),
          z = document.createElement("a");
        ((z.href = URL.createObjectURL(j)),
          (z.download = `desempenho-cobradores-${new Date().toISOString().split("T")[0]}.csv`),
          z.click(),
          URL.revokeObjectURL(z.href));
      },
      [G, L] = r.useState(!1),
      W = r.useMemo(() => {
        let T = 0;
        return (x !== "month" && T++, F && T++, T);
      }, [x, F]);
    return e.jsxs("div", {
      className: "space-y-4",
      children: [
        e.jsx("div", {
          className: "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
          children: e.jsxs("div", {
            className: "flex items-center justify-between",
            children: [
              e.jsxs("div", {
                children: [
                  e.jsxs("h2", {
                    className:
                      "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                    children: [
                      e.jsx(rs, {
                        className:
                          "h-5 w-5 lg:h-6 lg:w-6 mr-2 text-blue-600 flex-shrink-0",
                      }),
                      "Análise de Desempenho",
                    ],
                  }),
                  e.jsx("p", {
                    className: "text-sm text-gray-600 mt-1",
                    children: "Ranking de vendas por cobrador",
                  }),
                ],
              }),
              e.jsxs("div", {
                className: "flex items-center gap-2",
                children: [
                  e.jsxs("button", {
                    onClick: () => L(!G),
                    className:
                      "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors relative",
                    children: [
                      e.jsx(fs, { className: "h-5 w-5" }),
                      W > 0 &&
                        e.jsx("span", {
                          className:
                            "absolute -top-1 -right-1 h-5 w-5 bg-blue-600 text-white text-xs rounded-full flex items-center justify-center font-medium",
                          children: W,
                        }),
                    ],
                  }),
                  e.jsx("button", {
                    onClick: Y,
                    className:
                      "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                    title: "Exportar",
                    children: e.jsx($s, { className: "h-5 w-5" }),
                  }),
                ],
              }),
            ],
          }),
        }),
        e.jsxs("div", {
          className:
            "bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl shadow-lg p-6",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-sm font-medium",
                      children: "Taxa de Conversão Média",
                    }),
                    e.jsxs("p", {
                      className: "text-4xl font-bold mt-1",
                      children: [ee.avgConversionRate.toFixed(1), "%"],
                    }),
                    e.jsxs("p", {
                      className: "text-blue-100 text-sm mt-2",
                      children: [A.length, " cobradores ativos"],
                    }),
                  ],
                }),
                e.jsx(Os, { className: "h-16 w-16 text-blue-200 opacity-50" }),
              ],
            }),
            e.jsxs("div", {
              className:
                "grid grid-cols-[1fr_1.5fr_1fr] gap-4 mt-6 pt-6 border-t border-blue-400",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Vendas",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: ee.totalSales,
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Recebido",
                    }),
                    e.jsx("div", {
                      className: "text-2xl font-semibold",
                      children: U(ee.totalReceived),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Eficiência",
                    }),
                    e.jsxs("p", {
                      className: "text-2xl font-semibold",
                      children: [ee.teamEfficiency.toFixed(0), "%"],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
        G &&
          e.jsx("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-4 animate-in slide-in-from-top-2",
            children: e.jsxs("div", {
              className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("label", {
                      className: "block text-sm font-medium text-gray-700 mb-2",
                      children: "Período",
                    }),
                    e.jsxs("select", {
                      value: x,
                      onChange: (T) => h(T.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "week",
                          children: "Última Semana",
                        }),
                        e.jsx("option", {
                          value: "month",
                          children: "Último Mês",
                        }),
                        e.jsx("option", {
                          value: "quarter",
                          children: "Último Trimestre",
                        }),
                        e.jsx("option", {
                          value: "year",
                          children: "Último Ano",
                        }),
                        e.jsx("option", {
                          value: "all",
                          children: "Todo Período",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("label", {
                      className: "block text-sm font-medium text-gray-700 mb-2",
                      children: "Taxa Mínima (%)",
                    }),
                    e.jsx("input", {
                      type: "number",
                      value: F,
                      onChange: (T) => C(T.target.value),
                      placeholder: "Ex: 50",
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      min: "0",
                      max: "100",
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("label", {
                      className: "block text-sm font-medium text-gray-700 mb-2",
                      children: "Ordenar Por",
                    }),
                    e.jsxs("select", {
                      value: i,
                      onChange: (T) => D(T.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "conversionRate",
                          children: "Taxa de Conversão",
                        }),
                        e.jsx("option", {
                          value: "receivedAmount",
                          children: "Valor Recebido",
                        }),
                        e.jsx("option", {
                          value: "totalSales",
                          children: "Total de Vendas",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsx("div", {
                  className: "flex items-end",
                  children: e.jsx("button", {
                    onClick: () => {
                      (h("month"), C(""), D("conversionRate"), O("desc"));
                    },
                    className:
                      "w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm font-medium",
                    children: "Limpar Filtros",
                  }),
                }),
              ],
            }),
          }),
        e.jsxs("div", {
          className: "space-y-4",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                e.jsx("h3", {
                  className: "text-lg font-semibold text-gray-900",
                  children: "Ranking de Cobradores",
                }),
                e.jsx("div", {
                  className: "flex items-center gap-2",
                  children: e.jsx("button", {
                    onClick: () => O(E === "desc" ? "asc" : "desc"),
                    className:
                      "text-sm text-blue-600 hover:text-blue-700 font-medium",
                    children:
                      E === "desc" ? "↓ Maior primeiro" : "↑ Menor primeiro",
                  }),
                }),
              ],
            }),
            e.jsx("div", {
              className: "grid gap-4 md:grid-cols-2 lg:grid-cols-3",
              children: Q.map((T, p) => {
                const I = p === 0 && E === "desc",
                  v = p + 1;
                return e.jsxs(
                  "div",
                  {
                    className: `bg-white rounded-lg border p-4 hover:shadow-md transition-shadow ${I ? "border-blue-300 bg-blue-50" : "border-gray-200"}`,
                    children: [
                      e.jsxs("div", {
                        className: "flex items-start justify-between mb-3",
                        children: [
                          e.jsxs("div", {
                            className: "flex items-center gap-3",
                            children: [
                              e.jsx("div", {
                                className: `w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${v <= 3 ? "bg-blue-100 text-blue-700" : "bg-gray-100 text-gray-600"}`,
                                children: v,
                              }),
                              e.jsxs("div", {
                                children: [
                                  e.jsx("h4", {
                                    className: "font-medium text-gray-900",
                                    children: T.collectorName,
                                  }),
                                  e.jsxs("p", {
                                    className: "text-sm text-gray-500",
                                    children: [T.totalSales, " vendas"],
                                  }),
                                ],
                              }),
                            ],
                          }),
                          I &&
                            e.jsx(Os, { className: "h-5 w-5 text-blue-600" }),
                        ],
                      }),
                      e.jsxs("div", {
                        className: "space-y-3",
                        children: [
                          e.jsxs("div", {
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex justify-between items-center mb-1",
                                children: [
                                  e.jsx("span", {
                                    className: "text-sm text-gray-600",
                                    children: "Taxa de Conversão",
                                  }),
                                  e.jsxs("span", {
                                    className:
                                      "text-lg font-bold text-gray-900",
                                    children: [
                                      T.conversionRate.toFixed(1),
                                      "%",
                                    ],
                                  }),
                                ],
                              }),
                              e.jsx("div", {
                                className:
                                  "w-full bg-gray-200 rounded-full h-2",
                                children: e.jsx("div", {
                                  className: `h-2 rounded-full transition-all duration-500 ${T.conversionRate >= 70 ? "bg-green-500" : T.conversionRate >= 40 ? "bg-yellow-500" : "bg-red-500"}`,
                                  style: {
                                    width: `${Math.min(T.conversionRate, 100)}%`,
                                  },
                                }),
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className: "flex justify-between items-center",
                            children: [
                              e.jsx("span", {
                                className: "text-sm text-gray-600",
                                children: "Valor Recebido",
                              }),
                              e.jsx("span", {
                                className:
                                  "text-lg font-bold text-green-600 sm:block hidden",
                                children: q(T.receivedAmount),
                              }),
                              e.jsx("div", {
                                className:
                                  "text-lg font-bold text-green-600 sm:hidden",
                                children:
                                  T.receivedAmount < 1e4
                                    ? q(T.receivedAmount, !1).replace(
                                        /,\d{2}$/,
                                        "",
                                      )
                                    : `R$ ${Math.floor(T.receivedAmount / 1e3)}k`,
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className:
                              "grid grid-cols-2 gap-2 pt-2 border-t border-gray-100",
                            children: [
                              e.jsxs("div", {
                                className: "text-center",
                                children: [
                                  e.jsx("p", {
                                    className: "text-xs text-gray-500",
                                    children: "Finalizadas",
                                  }),
                                  e.jsxs("p", {
                                    className:
                                      "text-sm font-semibold text-gray-700",
                                    children: [
                                      T.completedSales,
                                      "/",
                                      T.totalSales,
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "text-center",
                                children: [
                                  e.jsx("p", {
                                    className: "text-xs text-gray-500",
                                    children: "Ticket Médio",
                                  }),
                                  e.jsx("p", {
                                    className:
                                      "text-sm font-semibold text-gray-700",
                                    children: q(T.averageTicket),
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  },
                  T.collectorId,
                );
              }),
            }),
          ],
        }),
        Q.length === 0 &&
          e.jsxs("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
            children: [
              e.jsx(is, { className: "h-12 w-12 text-gray-400 mx-auto mb-4" }),
              e.jsx("h3", {
                className: "text-lg font-medium text-gray-900 mb-2",
                children: "Nenhum cobrador encontrado",
              }),
              e.jsx("p", {
                className: "text-gray-600",
                children:
                  "Não há cobradores que atendam aos filtros selecionados.",
              }),
            ],
          }),
      ],
    });
  },
  Ka = () => {
    const { users: s, addUser: t, updateUser: x, deleteUser: h } = Je(),
      [i, D] = r.useState(!1),
      [E, O] = r.useState(!1),
      [F, C] = r.useState(null),
      [V, U] = r.useState(null),
      [A, Q] = r.useState({
        name: "",
        login: "",
        password: "",
        type: "collector",
      }),
      ee = (p) => {
        (p
          ? (C(p),
            Q({ name: p.name, login: p.login, password: "", type: p.type }))
          : (C(null),
            Q({ name: "", login: "", password: "", type: "collector" })),
          D(!0));
      },
      Y = () => {
        (D(!1),
          C(null),
          Q({ name: "", login: "", password: "", type: "collector" }));
      },
      G = (p) => {
        if ((p.preventDefault(), F)) {
          const I = { name: A.name, login: A.login, type: A.type };
          (A.password.trim() && (I.password = A.password), x(F.id, I));
        } else t(A);
        Y();
      },
      L = (p) => {
        (U(p), O(!0));
      },
      W = () => {
        (O(!1), U(null));
      },
      T = () => {
        V && (h(V.id), W());
      };
    return e.jsxs(e.Fragment, {
      children: [
        e.jsxs("div", {
          className: "space-y-4",
          children: [
            e.jsxs("div", {
              className: "page-header",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("h2", {
                      className:
                        "text-xl lg:text-2xl font-bold text-gray-900 flex items-center-title",
                      children: "Gerenciamento de Usuários",
                    }),
                    e.jsxs("p", {
                      className: "page-subtitle",
                      children: [
                        s.length,
                        " usuário",
                        s.length !== 1 ? "s" : "",
                        " cadastrado",
                        s.length !== 1 ? "s" : "",
                      ],
                    }),
                  ],
                }),
                e.jsxs("button", {
                  onClick: () => ee(),
                  className: "btn-primary",
                  children: [
                    e.jsx(Js, { className: "h-4 w-4 sm:mr-2" }),
                    e.jsx("span", {
                      className: "hidden sm:inline",
                      children: "Novo Usuário",
                    }),
                  ],
                }),
              ],
            }),
            e.jsxs("div", {
              className: "container-main",
              children: [
                e.jsx("div", {
                  className: "hidden md:block",
                  children: e.jsx("div", {
                    className: "table-container",
                    children: e.jsxs("table", {
                      className: "table-base",
                      children: [
                        e.jsx("thead", {
                          className: "table-header",
                          children: e.jsxs("tr", {
                            children: [
                              e.jsx("th", {
                                className: "table-header-cell",
                                children: "Usuário",
                              }),
                              e.jsx("th", {
                                className: "table-header-cell",
                                children: "Login",
                              }),
                              e.jsx("th", {
                                className: "table-header-cell",
                                children: "Tipo",
                              }),
                              e.jsx("th", {
                                className: "table-header-cell",
                                children: "Criado em",
                              }),
                              e.jsx("th", {
                                className: "table-header-cell",
                                children: "Ações",
                              }),
                            ],
                          }),
                        }),
                        e.jsx("tbody", {
                          className: "table-body",
                          children: s.map((p) =>
                            e.jsxs(
                              "tr",
                              {
                                className: "table-row",
                                children: [
                                  e.jsx("td", {
                                    className: "table-cell",
                                    children: e.jsxs("div", {
                                      className: "flex items-center",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "h-10 w-10 bg-gray-100 rounded-full flex items-center justify-center mr-3",
                                          children: e.jsx(Qe, {
                                            className: "h-5 w-5 text-gray-600",
                                          }),
                                        }),
                                        e.jsx("div", {
                                          children: e.jsx("div", {
                                            className:
                                              "font-medium text-gray-900",
                                            children: p.name,
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                  e.jsx("td", {
                                    className: "py-4 px-6",
                                    children: e.jsx("div", {
                                      className: "text-gray-900",
                                      children: p.login,
                                    }),
                                  }),
                                  e.jsx("td", {
                                    className: "py-4 px-6",
                                    children: e.jsxs("div", {
                                      className: "flex items-center",
                                      children: [
                                        p.type === "manager"
                                          ? e.jsx(kt, {
                                              className:
                                                "h-4 w-4 text-purple-600 mr-2",
                                            })
                                          : e.jsx(Qe, {
                                              className:
                                                "h-4 w-4 text-blue-600 mr-2",
                                            }),
                                        e.jsx("span", {
                                          className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${p.type === "manager" ? "bg-purple-100 text-purple-800" : "bg-blue-100 text-blue-800"}`,
                                          children:
                                            p.type === "manager"
                                              ? "Gerente"
                                              : "Cobrador",
                                        }),
                                      ],
                                    }),
                                  }),
                                  e.jsx("td", {
                                    className: "table-cell",
                                    children: e.jsx("div", {
                                      className: "text-muted",
                                      children: new Date(
                                        p.createdAt,
                                      ).toLocaleDateString("pt-BR"),
                                    }),
                                  }),
                                  e.jsx("td", {
                                    className: "table-cell",
                                    children: e.jsxs("div", {
                                      className: "flex items-center space-x-2",
                                      children: [
                                        e.jsx("button", {
                                          onClick: () => ee(p),
                                          className:
                                            "btn-action btn-action-blue",
                                          title: "Editar",
                                          children: e.jsx(_s, {
                                            className: "h-4 w-4",
                                          }),
                                        }),
                                        e.jsx("button", {
                                          onClick: () => L(p),
                                          className:
                                            "btn-action btn-action-red",
                                          title: "Excluir",
                                          children: e.jsx(Ks, {
                                            className: "h-4 w-4",
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                ],
                              },
                              p.id,
                            ),
                          ),
                        }),
                      ],
                    }),
                  }),
                }),
                e.jsx("div", {
                  className: "md:hidden space-y-4",
                  children: s.map((p) =>
                    e.jsxs(
                      "div",
                      {
                        className:
                          "bg-white rounded-lg shadow-sm border border-gray-200 p-4",
                        children: [
                          e.jsxs("div", {
                            className: "flex items-start justify-between mb-3",
                            children: [
                              e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "h-12 w-12 bg-gray-100 rounded-full flex items-center justify-center mr-3",
                                    children: e.jsx(Qe, {
                                      className: "h-6 w-6 text-gray-600",
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("h3", {
                                        className:
                                          "font-semibold text-gray-900 text-lg",
                                        children: p.name,
                                      }),
                                      e.jsxs("p", {
                                        className: "text-gray-600 text-sm",
                                        children: ["@", p.login],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center space-x-2",
                                children: [
                                  e.jsx("button", {
                                    onClick: () => ee(p),
                                    className:
                                      "p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors",
                                    title: "Editar",
                                    children: e.jsx(_s, {
                                      className: "h-5 w-5",
                                    }),
                                  }),
                                  e.jsx("button", {
                                    onClick: () => L(p),
                                    className:
                                      "p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors",
                                    title: "Excluir",
                                    children: e.jsx(Ks, {
                                      className: "h-5 w-5",
                                    }),
                                  }),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className: "flex items-center justify-between",
                            children: [
                              e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  p.type === "manager"
                                    ? e.jsx(kt, {
                                        className:
                                          "h-4 w-4 text-purple-600 mr-2",
                                      })
                                    : e.jsx(Qe, {
                                        className: "h-4 w-4 text-blue-600 mr-2",
                                      }),
                                  e.jsx("span", {
                                    className: `inline-flex px-3 py-1 text-sm font-medium rounded-full ${p.type === "manager" ? "bg-purple-100 text-purple-800" : "bg-blue-100 text-blue-800"}`,
                                    children:
                                      p.type === "manager"
                                        ? "Gerente"
                                        : "Cobrador",
                                  }),
                                ],
                              }),
                              e.jsx("div", {
                                className: "text-sm text-gray-500",
                                children: new Date(
                                  p.createdAt,
                                ).toLocaleDateString("pt-BR"),
                              }),
                            ],
                          }),
                        ],
                      },
                      p.id,
                    ),
                  ),
                }),
                s.length === 0 &&
                  e.jsx("div", {
                    className: "empty-state",
                    children: e.jsxs("div", {
                      className: "text-gray-500",
                      children: [
                        e.jsx("div", {
                          className: "empty-state-icon-container",
                          children: e.jsx("div", {
                            className: "empty-state-icon-bg",
                            children: e.jsx(Qe, {
                              className: "empty-state-icon",
                            }),
                          }),
                        }),
                        e.jsx("h3", {
                          className: "empty-state-title",
                          children: "Nenhum usuário encontrado",
                        }),
                        e.jsx("p", {
                          className: "empty-state-description",
                          children:
                            "Comece adicionando um novo usuário ao sistema.",
                        }),
                      ],
                    }),
                  }),
              ],
            }),
          ],
        }),
        i &&
          e.jsx("div", {
            className: "modal-overlay",
            children: e.jsxs("div", {
              className: "modal-container max-w-md mx-4",
              children: [
                e.jsx("div", {
                  className: "modal-header",
                  children: e.jsx("h3", {
                    className: "text-lg font-semibold text-gray-900",
                    children: F ? "Editar Usuário" : "Novo Usuário",
                  }),
                }),
                e.jsxs("form", {
                  onSubmit: G,
                  className: "p-4 sm:p-6 space-y-4",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Nome",
                        }),
                        e.jsx("input", {
                          type: "text",
                          value: A.name,
                          onChange: (p) => Q({ ...A, name: p.target.value }),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          required: !0,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Login",
                        }),
                        e.jsx("input", {
                          type: "text",
                          value: A.login,
                          onChange: (p) => Q({ ...A, login: p.target.value }),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          required: !0,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: F
                            ? "Nova Senha (deixe em branco para manter a atual)"
                            : "Senha",
                        }),
                        e.jsx("input", {
                          type: "password",
                          value: A.password,
                          onChange: (p) =>
                            Q({ ...A, password: p.target.value }),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          required: !F,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Tipo de Usuário",
                        }),
                        e.jsxs("select", {
                          value: A.type,
                          onChange: (p) => Q({ ...A, type: p.target.value }),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          children: [
                            e.jsx("option", {
                              value: "collector",
                              children: "Cobrador",
                            }),
                            e.jsx("option", {
                              value: "manager",
                              children: "Gerente",
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className:
                        "flex flex-col sm:flex-row sm:justify-end space-y-2 sm:space-y-0 sm:space-x-3 pt-4",
                      children: [
                        e.jsx("button", {
                          type: "button",
                          onClick: Y,
                          className:
                            "w-full sm:w-auto px-4 py-3 sm:py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-center",
                          children: "Cancelar",
                        }),
                        e.jsx("button", {
                          type: "submit",
                          className:
                            "w-full sm:w-auto px-4 py-3 sm:py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-center",
                          children: F ? "Atualizar" : "Criar",
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        E &&
          V &&
          e.jsx("div", {
            className: "modal-overlay",
            children: e.jsx("div", {
              className: "modal-container max-w-sm mx-4",
              children: e.jsxs("div", {
                className: "p-6",
                children: [
                  e.jsx("div", {
                    className:
                      "flex items-center justify-center w-12 h-12 mx-auto mb-4 bg-red-100 rounded-full",
                    children: e.jsx(Ks, { className: "w-6 h-6 text-red-600" }),
                  }),
                  e.jsx("h3", {
                    className:
                      "text-lg font-semibold text-gray-900 text-center mb-2",
                    children: "Excluir Usuário",
                  }),
                  e.jsxs("p", {
                    className: "text-gray-600 text-center mb-6",
                    children: [
                      "Tem certeza que deseja excluir o usuário",
                      " ",
                      e.jsx("strong", { children: V.name }),
                      "? Esta ação não pode ser desfeita.",
                    ],
                  }),
                  e.jsxs("div", {
                    className:
                      "flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3",
                    children: [
                      e.jsx("button", {
                        type: "button",
                        onClick: W,
                        className:
                          "w-full px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors",
                        children: "Cancelar",
                      }),
                      e.jsx("button", {
                        type: "button",
                        onClick: T,
                        className:
                          "w-full px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors",
                        children: "Excluir",
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
      ],
    });
  },
  Ws = (s) => {
    const t = [
        "",
        "um",
        "dois",
        "três",
        "quatro",
        "cinco",
        "seis",
        "sete",
        "oito",
        "nove",
      ],
      x = [
        "",
        "",
        "vinte",
        "trinta",
        "quarenta",
        "cinquenta",
        "sessenta",
        "setenta",
        "oitenta",
        "noventa",
      ],
      h = [
        "dez",
        "onze",
        "doze",
        "treze",
        "quatorze",
        "quinze",
        "dezesseis",
        "dezessete",
        "dezoito",
        "dezenove",
      ],
      i = [
        "",
        "cento",
        "duzentos",
        "trezentos",
        "quatrocentos",
        "quinhentos",
        "seiscentos",
        "setecentos",
        "oitocentos",
        "novecentos",
      ];
    if (s === 0) return "zero";
    if (s === 100) return "cem";
    if (s === 1e3) return "mil";
    const D = [],
      E = Math.floor(s / 100);
    E > 0 && D.push(i[E]);
    const O = s % 100;
    if (O >= 10 && O <= 19) D.push(h[O - 10]);
    else {
      const F = Math.floor(O / 10),
        C = O % 10;
      (F > 0 && D.push(x[F]), C > 0 && D.push(t[C]));
    }
    return D.join(" e ");
  },
  Ga = (s) => {
    if (!(window.innerWidth < 640)) return q(s, !1);
    const x = Math.floor(s);
    if (x === 0) return "R$ 0";
    let h = "",
      i = [];
    if (x >= 1e6) {
      const E = Math.floor(x / 1e6),
        O = x % 1e6;
      if (((h = `R$ ${E}M`), O > 0)) {
        const F = Math.floor(O / 1e3),
          C = O % 1e3;
        if (F > 0) {
          const V = Ws(F);
          i.push(`${V} mil`);
        }
        if (C > 0) {
          const V = Ws(C);
          i.push(`${V} reais`);
        } else i.length > 0 && i.push("reais");
      }
    } else if (x >= 1e4) {
      const E = Math.floor(x / 1e3),
        O = x % 1e3;
      if (((h = `R$ ${E} mil`), O > 0)) {
        const F = Ws(O);
        i.push(`${F} reais`);
      }
    } else if (x >= 1e3) {
      const E = Math.floor(x / 1e3),
        O = x % 1e3;
      if (((h = `R$ ${E} mil`), O > 0)) {
        const F = Ws(O);
        i.push(`${F} reais`);
      }
    } else return `R$ ${x}`;
    const D = i.join(" e ");
    return e.jsxs("div", {
      className: "flex flex-col items-start",
      children: [
        e.jsx("span", { className: "text-2xl font-semibold", children: h }),
        D &&
          e.jsx("span", {
            className: "text-xs text-blue-200 opacity-90",
            children: D,
          }),
      ],
    });
  },
  Ja = () => {
    const {
        users: s,
        collections: t,
        collectorStores: x,
        getAvailableStores: h,
        loading: i,
      } = Je(),
      [D, E] = r.useState(""),
      [O, F] = r.useState(new Set()),
      [C, V] = r.useState("storeName"),
      [U, A] = r.useState("asc"),
      Q = s.filter((p) => p.type === "collector"),
      ee = h(),
      Y = r.useMemo(() => {
        const p = [];
        return (
          ee.forEach((I) => {
            var de;
            const v = t.filter((oe) => oe.nome_da_loja === I),
              j = new Set(v.map((oe) => oe.user_id).filter(Boolean)),
              z = x.find((oe) => oe.storeName === I);
            let N = (z == null ? void 0 : z.collectorId) || "";
            if (!N && j.size === 1) N = Array.from(j)[0] || "";
            else if (!N && j.size > 1) {
              const oe = new Map();
              v.forEach((se) => {
                se.user_id && oe.set(se.user_id, (oe.get(se.user_id) || 0) + 1);
              });
              const P = Array.from(oe.entries()).sort(
                (se, Ae) => Ae[1] - se[1],
              )[0];
              P && (N = P[0]);
            }
            const H =
                ((de = Q.find((oe) => oe.id === N)) == null
                  ? void 0
                  : de.name) || "Não atribuído",
              w = !!z,
              y = new Map();
            (v.forEach((oe) => {
              const P = `${oe.venda_n}-${oe.documento}`;
              y.has(P) ||
                y.set(P, {
                  totalValue: 0,
                  receivedValue: 0,
                  clientDocument: oe.documento || "",
                  clientName: oe.cliente || "",
                  isPending: !1,
                });
              const se = y.get(P);
              ((se.totalValue += oe.valor_original),
                (se.receivedValue += oe.valor_recebido));
            }),
              y.forEach((oe) => {
                const P = oe.totalValue - oe.receivedValue;
                oe.isPending = P > 0.01;
              }));
            const S = Array.from(y.values()),
              _ = S.filter((oe) => !oe.isPending).length,
              J = S.filter((oe) => oe.isPending).length,
              Z = new Set(
                S.filter((oe) => oe.isPending)
                  .map((oe) => oe.clientDocument || oe.clientName)
                  .filter(Boolean),
              ).size,
              he = S.length,
              xe = S.reduce((oe, P) => oe + P.totalValue, 0),
              R = S.reduce((oe, P) => oe + P.receivedValue, 0),
              ge = xe - R,
              pe = S.length > 0 ? (_ / S.length) * 100 : 0,
              fe = xe > 0 ? (R / xe) * 100 : 0,
              we = S.length > 0 ? xe / S.length : 0,
              re = new Set(
                S.map((oe) => oe.clientDocument || oe.clientName).filter(
                  Boolean,
                ),
              ).size;
            p.push({
              storeName: I,
              assignedCollector: N,
              collectorName: H,
              isFormalAssignment: w,
              totalCollections: he,
              totalSales: S.length,
              completedSales: _,
              pendingSales: J,
              clientsWithPending: Z,
              totalAmount: xe,
              receivedAmount: R,
              pendingAmount: ge,
              conversionRate: pe,
              efficiency: fe,
              averageTicket: we,
              clientsCount: re,
            });
          }),
          p
        );
      }, [ee, x, Q, t]),
      G = r.useMemo(() => {
        let p = [...Y];
        return (
          D &&
            (p = p.filter(
              (I) =>
                I.storeName.toLowerCase().includes(D.toLowerCase()) ||
                I.collectorName.toLowerCase().includes(D.toLowerCase()),
            )),
          p.sort((I, v) => {
            const j = I[C],
              z = v[C];
            return typeof j == "string" && typeof z == "string"
              ? U === "asc"
                ? j.localeCompare(z)
                : z.localeCompare(j)
              : U === "asc"
                ? j - z
                : z - j;
          }),
          p
        );
      }, [Y, D, C, U]),
      L = r.useMemo(() => {
        const p = Y.length,
          I = Y.filter((H) => H.assignedCollector).length,
          v = p - I,
          j = Y.reduce((H, w) => H + w.totalCollections, 0),
          z = Y.reduce((H, w) => H + w.receivedAmount, 0),
          N =
            Y.length > 0
              ? Y.reduce((H, w) => H + w.conversionRate, 0) / Y.length
              : 0;
        return {
          totalStores: p,
          assignedStores: I,
          unassignedStores: v,
          totalSales: j,
          totalRevenue: z,
          avgConversionRate: N,
        };
      }, [Y]),
      W = (p) => {
        const I = new Set(O);
        (I.has(p) ? I.delete(p) : I.add(p), F(I));
      },
      T = () => {
        const p = [
            "Loja",
            "Cobrador",
            "Status Atribuição",
            "Total de Vendas",
            "Vendas Finalizadas",
            "Vendas Pendentes",
            "Clientes com Pendências",
            "Taxa de Conversão (%)",
            "Valor Total (R$)",
            "Valor Recebido (R$)",
            "Valor Pendente (R$)",
            "Total de Clientes",
            "Eficiência (%)",
            "Ticket Médio (R$)",
          ],
          I = Y.map((H) => [
            H.storeName,
            H.collectorName,
            H.isFormalAssignment
              ? "Formal"
              : H.assignedCollector
                ? "Informal"
                : "Não Atribuído",
            H.totalSales.toString(),
            H.completedSales.toString(),
            H.pendingSales.toString(),
            H.clientsWithPending.toString(),
            H.conversionRate.toFixed(1),
            H.totalAmount.toFixed(2),
            H.receivedAmount.toFixed(2),
            H.pendingAmount.toFixed(2),
            H.clientsCount.toString(),
            H.totalAmount > 0
              ? ((H.receivedAmount / H.totalAmount) * 100).toFixed(1)
              : "0",
            H.totalSales > 0 ? (H.totalAmount / H.totalSales).toFixed(2) : "0",
          ]),
          v = [
            p.join(","),
            ...I.map((H) =>
              H.map((w) => {
                const y = w.toString().replace(/"/g, '""');
                return /[",\n\r]/.test(y) ? `"${y}"` : y;
              }).join(","),
            ),
          ].join(`
`),
          j = "\uFEFF",
          z = new Blob([j + v], { type: "text/csv;charset=utf-8;" }),
          N = document.createElement("a");
        ((N.href = URL.createObjectURL(z)),
          (N.download = `relatorio-lojas-${new Date().toISOString().split("T")[0]}.csv`),
          N.click(),
          URL.revokeObjectURL(N.href));
      };
    return i
      ? e.jsx("div", {
          className: "flex items-center justify-center py-12",
          children: e.jsx("div", {
            className: "text-gray-600",
            children: "Carregando...",
          }),
        })
      : e.jsxs("div", {
          className: "space-y-4",
          children: [
            e.jsx("div", {
              className:
                "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
              children: e.jsxs("div", {
                className: "flex items-center justify-between",
                children: [
                  e.jsxs("div", {
                    children: [
                      e.jsxs("h2", {
                        className:
                          "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                        children: [
                          e.jsx(It, {
                            className:
                              "h-5 w-5 lg:h-6 lg:w-6 mr-2 text-blue-600 flex-shrink-0",
                          }),
                          "Acompanhamento de Lojas",
                        ],
                      }),
                      e.jsxs("p", {
                        className: "text-sm text-gray-600 mt-1",
                        children: [
                          "Performance e status das ",
                          L.totalStores,
                          " lojas",
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "flex items-center gap-2",
                    children: [
                      L.unassignedStores > 0 &&
                        e.jsxs("span", {
                          className:
                            "flex items-center text-xs text-amber-600 bg-amber-50 px-2 py-1 rounded-full font-medium",
                          children: [
                            e.jsx(Be, { className: "h-3 w-3 mr-1" }),
                            L.unassignedStores,
                            " sem atribuição",
                          ],
                        }),
                      e.jsx("button", {
                        onClick: T,
                        className:
                          "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                        title: "Exportar",
                        children: e.jsx($s, { className: "h-5 w-5" }),
                      }),
                    ],
                  }),
                ],
              }),
            }),
            e.jsxs("div", {
              className:
                "bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl shadow-lg p-6",
              children: [
                e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-sm font-medium",
                          children: "Taxa de Conversão Média",
                        }),
                        e.jsxs("p", {
                          className: "text-4xl font-bold mt-1",
                          children: [L.avgConversionRate.toFixed(1), "%"],
                        }),
                        e.jsxs("p", {
                          className: "text-blue-100 text-sm mt-2",
                          children: [L.totalStores, " lojas cadastradas"],
                        }),
                      ],
                    }),
                    e.jsx(Os, {
                      className: "h-16 w-16 text-blue-200 opacity-50",
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "grid grid-cols-[1.5fr_1fr_1fr] gap-4 mt-6 pt-6 border-t border-blue-400",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Receita",
                        }),
                        e.jsx("div", {
                          className: "text-2xl font-semibold",
                          children: Ga(L.totalRevenue),
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Atribuídas",
                        }),
                        e.jsx("p", {
                          className: "text-2xl font-semibold",
                          children: L.assignedStores,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Vendas",
                        }),
                        e.jsx("p", {
                          className: "text-2xl font-semibold",
                          children: L.totalSales,
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
            e.jsx("div", {
              className:
                "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
              children: e.jsxs("div", {
                className: "flex items-center gap-2",
                children: [
                  e.jsxs("div", {
                    className: "flex-1 relative",
                    children: [
                      e.jsx(Vs, {
                        className:
                          "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                      }),
                      e.jsx("input", {
                        type: "text",
                        value: D,
                        onChange: (p) => E(p.target.value),
                        placeholder: "Buscar loja ou cobrador...",
                        className:
                          "w-full pl-10 pr-3 py-2.5 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 focus:bg-white transition-colors text-sm",
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "flex items-center gap-2",
                    children: [
                      e.jsxs("select", {
                        value: C,
                        onChange: (p) => V(p.target.value),
                        className:
                          "pl-3 pr-8 py-2.5 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 focus:bg-white transition-colors text-sm min-w-[120px]",
                        children: [
                          e.jsx("option", {
                            value: "storeName",
                            children: "Nome",
                          }),
                          e.jsx("option", {
                            value: "conversionRate",
                            children: "Taxa",
                          }),
                          e.jsx("option", {
                            value: "totalAmount",
                            children: "Valor",
                          }),
                        ],
                      }),
                      e.jsx("button", {
                        onClick: () => A(U === "asc" ? "desc" : "asc"),
                        className: `flex items-center justify-center w-10 h-10 rounded-lg transition-all duration-200 ${U === "desc" ? "bg-blue-100 text-blue-600 hover:bg-blue-200" : "bg-gray-100 text-gray-600 hover:bg-gray-200"}`,
                        title: U === "desc" ? "Decrescente" : "Crescente",
                        children:
                          U === "desc"
                            ? e.jsx(Ns, { className: "h-4 w-4" })
                            : e.jsx(Ds, { className: "h-4 w-4" }),
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "flex items-center gap-2 text-sm text-gray-600",
                    children: [
                      e.jsx(As, { className: "h-4 w-4" }),
                      e.jsx("span", {
                        className: "font-medium",
                        children: G.length,
                      }),
                      e.jsx("span", {
                        className: "hidden sm:inline",
                        children: "lojas",
                      }),
                    ],
                  }),
                ],
              }),
            }),
            e.jsx("div", {
              className: "grid grid-cols-1 xl:grid-cols-2 gap-4",
              children: G.map((p) => {
                const I = O.has(p.storeName),
                  v = !p.assignedCollector;
                return e.jsx(
                  "div",
                  {
                    className: `bg-white rounded-xl shadow-sm border-2 transition-all duration-200 hover:shadow-lg ${v ? "border-amber-200 hover:border-amber-300" : p.conversionRate >= 70 ? "border-green-200 hover:border-green-300" : p.conversionRate >= 40 ? "border-blue-200 hover:border-blue-300" : "border-red-200 hover:border-red-300"}`,
                    children: e.jsxs("div", {
                      className: "p-5",
                      children: [
                        e.jsxs("div", {
                          className: "flex items-start justify-between mb-4",
                          children: [
                            e.jsxs("div", {
                              className: "flex-1",
                              children: [
                                e.jsxs("h4", {
                                  className:
                                    "text-lg font-semibold text-gray-900 flex items-center gap-2",
                                  children: [
                                    e.jsx(Is, {
                                      className: `h-5 w-5 ${v ? "text-amber-600" : p.conversionRate >= 70 ? "text-green-600" : p.conversionRate >= 40 ? "text-blue-600" : "text-red-600"}`,
                                    }),
                                    p.storeName,
                                    v &&
                                      e.jsx("span", {
                                        className:
                                          "text-xs text-amber-600 bg-amber-50 px-2 py-1 rounded-full font-medium",
                                        children: "Sem atribuição",
                                      }),
                                  ],
                                }),
                                e.jsxs("p", {
                                  className: "text-sm text-gray-600 mt-1",
                                  children: [
                                    p.collectorName,
                                    p.isFormalAssignment &&
                                      !v &&
                                      e.jsx("span", {
                                        className:
                                          "text-xs text-green-600 ml-1",
                                        children: "(Formal)",
                                      }),
                                  ],
                                }),
                              ],
                            }),
                            e.jsxs("div", {
                              className: "text-right",
                              children: [
                                e.jsxs("div", {
                                  className: `text-3xl font-bold ${p.conversionRate >= 70 ? "text-green-600" : p.conversionRate >= 40 ? "text-blue-600" : "text-red-600"}`,
                                  children: [p.conversionRate.toFixed(1), "%"],
                                }),
                                e.jsx("div", {
                                  className: "text-xs text-gray-500",
                                  children: "conversão",
                                }),
                              ],
                            }),
                          ],
                        }),
                        !v &&
                          e.jsxs("div", {
                            className:
                              "grid grid-cols-2 lg:grid-cols-4 gap-3 mb-4",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center p-3 bg-gray-50 rounded-lg",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "bg-gray-100 rounded-full p-2 mr-3",
                                    children: e.jsx(rs, {
                                      className: "h-4 w-4 text-gray-600",
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "text-lg font-bold text-gray-900",
                                        children: p.totalSales,
                                      }),
                                      e.jsx("div", {
                                        className: "text-xs text-gray-600",
                                        children: "vendas",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "flex items-center p-3 bg-green-50 rounded-lg",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "bg-green-100 rounded-full p-2 mr-3",
                                    children: e.jsx(Le, {
                                      className: "h-4 w-4 text-green-600",
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "text-lg font-bold text-green-700",
                                        children: p.completedSales,
                                      }),
                                      e.jsx("div", {
                                        className: "text-xs text-green-600",
                                        children: "finalizadas",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "flex items-center p-3 bg-orange-50 rounded-lg",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "bg-orange-100 rounded-full p-2 mr-3",
                                    children: e.jsx(Be, {
                                      className: "h-4 w-4 text-orange-600",
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "text-lg font-bold text-orange-700",
                                        children: p.pendingSales,
                                      }),
                                      e.jsx("div", {
                                        className: "text-xs text-orange-600",
                                        children: "pendentes",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "flex items-center p-3 bg-purple-50 rounded-lg",
                                children: [
                                  e.jsx("div", {
                                    className:
                                      "bg-purple-100 rounded-full p-2 mr-3",
                                    children: e.jsx(is, {
                                      className: "h-4 w-4 text-purple-600",
                                    }),
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "text-lg font-bold text-purple-700",
                                        children: p.clientsCount,
                                      }),
                                      e.jsx("div", {
                                        className: "text-xs text-purple-600",
                                        children: "clientes",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        !v &&
                          e.jsx("div", {
                            className: "mb-4",
                            children: e.jsx("div", {
                              className: "w-full bg-gray-200 rounded-full h-2",
                              children: e.jsx("div", {
                                className: `h-2 rounded-full transition-all duration-500 ${p.conversionRate >= 70 ? "bg-gradient-to-r from-green-500 to-green-600" : p.conversionRate >= 40 ? "bg-gradient-to-r from-blue-500 to-blue-600" : "bg-gradient-to-r from-red-500 to-red-600"}`,
                                style: {
                                  width: `${Math.min(p.conversionRate, 100)}%`,
                                },
                              }),
                            }),
                          }),
                        !v &&
                          e.jsxs("div", {
                            className:
                              "flex items-center justify-between p-3 bg-gray-50 rounded-lg",
                            children: [
                              e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  e.jsx(As, {
                                    className:
                                      "h-4 w-4 text-gray-500 mr-2 sm:block hidden",
                                  }),
                                  e.jsxs("div", {
                                    className: "text-center",
                                    children: [
                                      e.jsx("div", {
                                        className: "text-xs text-gray-600",
                                        children: "Total",
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-gray-900 sm:block hidden",
                                        children: q(p.totalAmount),
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-gray-900 sm:hidden",
                                        children: q(p.totalAmount, !1).replace(
                                          /,\d{2}$/,
                                          "",
                                        ),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  e.jsx(Le, {
                                    className:
                                      "h-4 w-4 text-green-500 mr-2 sm:block hidden",
                                  }),
                                  e.jsxs("div", {
                                    className: "text-center",
                                    children: [
                                      e.jsx("div", {
                                        className: "text-xs text-green-600",
                                        children: "Recebido",
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-green-700 sm:block hidden",
                                        children: q(p.receivedAmount),
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-green-700 sm:hidden",
                                        children: q(
                                          p.receivedAmount,
                                          !1,
                                        ).replace(/,\d{2}$/, ""),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center",
                                children: [
                                  e.jsx(Be, {
                                    className:
                                      "h-4 w-4 text-red-500 mr-2 sm:block hidden",
                                  }),
                                  e.jsxs("div", {
                                    className: "text-center",
                                    children: [
                                      e.jsx("div", {
                                        className: "text-xs text-red-600",
                                        children: "Pendente",
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-red-700 sm:block hidden",
                                        children: q(p.pendingAmount),
                                      }),
                                      e.jsx("div", {
                                        className:
                                          "text-sm font-bold text-red-700 sm:hidden",
                                        children: q(
                                          p.pendingAmount,
                                          !1,
                                        ).replace(/,\d{2}$/, ""),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsx("button", {
                                onClick: () => W(p.storeName),
                                className: `p-2 rounded-lg transition-colors ${I ? "bg-blue-100 text-blue-600" : "bg-gray-100 text-gray-600 hover:bg-gray-200"}`,
                                title: I
                                  ? "Ocultar detalhes"
                                  : "Ver mais detalhes",
                                children: I
                                  ? e.jsx(Ds, { className: "h-4 w-4" })
                                  : e.jsx(Ns, { className: "h-4 w-4" }),
                              }),
                            ],
                          }),
                        I &&
                          !v &&
                          e.jsxs("div", {
                            className:
                              "mt-4 pt-4 border-t border-gray-200 space-y-3",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "grid grid-cols-1 lg:grid-cols-2 gap-3",
                                children: [
                                  e.jsxs("div", {
                                    className:
                                      "flex items-center p-3 bg-amber-50 rounded-lg",
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "bg-amber-100 rounded-full p-2 mr-3",
                                        children: e.jsx(Be, {
                                          className: "h-4 w-4 text-amber-600",
                                        }),
                                      }),
                                      e.jsxs("div", {
                                        children: [
                                          e.jsx("div", {
                                            className:
                                              "text-lg font-bold text-amber-700",
                                            children: p.clientsWithPending,
                                          }),
                                          e.jsx("div", {
                                            className: "text-xs text-amber-600",
                                            children: "clientes inadimplentes",
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    className:
                                      "flex items-center p-3 bg-green-50 rounded-lg",
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "bg-green-100 rounded-full p-2 mr-3",
                                        children: e.jsx(Oe, {
                                          className: "h-4 w-4 text-green-600",
                                        }),
                                      }),
                                      e.jsxs("div", {
                                        children: [
                                          e.jsx("div", {
                                            className:
                                              "text-lg font-bold text-green-700",
                                            children: q(p.averageTicket),
                                          }),
                                          e.jsx("div", {
                                            className: "text-xs text-green-600",
                                            children: "ticket médio",
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "bg-blue-50 rounded-lg p-3 border border-blue-200",
                                children: [
                                  e.jsxs("div", {
                                    className:
                                      "flex items-center justify-between text-sm mb-2",
                                    children: [
                                      e.jsxs("div", {
                                        className: "flex items-center",
                                        children: [
                                          e.jsx(Os, {
                                            className:
                                              "h-4 w-4 text-blue-600 mr-2",
                                          }),
                                          e.jsx("span", {
                                            className:
                                              "text-blue-700 font-medium",
                                            children:
                                              "Eficiência de Recebimento",
                                          }),
                                        ],
                                      }),
                                      e.jsxs("span", {
                                        className: "font-bold text-blue-900",
                                        children: [
                                          p.efficiency.toFixed(1),
                                          "%",
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsx("div", {
                                    className:
                                      "w-full bg-blue-200 rounded-full h-2",
                                    children: e.jsx("div", {
                                      className:
                                        "h-2 rounded-full bg-gradient-to-r from-blue-500 to-blue-600 transition-all duration-500",
                                      style: {
                                        width: `${Math.min(p.efficiency, 100)}%`,
                                      },
                                    }),
                                  }),
                                ],
                              }),
                            ],
                          }),
                        v &&
                          e.jsx("div", {
                            className:
                              "bg-amber-50 rounded-lg p-4 border border-amber-200",
                            children: e.jsx("div", {
                              className: "flex items-center justify-between",
                              children: e.jsxs("div", {
                                className: "flex items-center text-amber-700",
                                children: [
                                  e.jsx(Be, {
                                    className: "h-5 w-5 mr-2 flex-shrink-0",
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("div", {
                                        className: "font-medium",
                                        children: "Loja sem atribuição",
                                      }),
                                      e.jsx("div", {
                                        className: "text-sm",
                                        children:
                                          "Necessário atribuir um cobrador responsável",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            }),
                          }),
                      ],
                    }),
                  },
                  p.storeName,
                );
              }),
            }),
            G.length === 0 &&
              e.jsxs("div", {
                className:
                  "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
                children: [
                  e.jsx(Is, {
                    className: "h-12 w-12 text-gray-400 mx-auto mb-4",
                  }),
                  e.jsx("h3", {
                    className: "text-lg font-medium text-gray-900 mb-2",
                    children: "Nenhuma loja encontrada",
                  }),
                  e.jsx("p", {
                    className: "text-gray-600",
                    children: D
                      ? "Tente ajustar os filtros de busca."
                      : "Não há lojas cadastradas no sistema.",
                  }),
                ],
              }),
          ],
        });
  };
function gt({ isOpen: s, onClose: t, title: x, children: h, size: i = "md" }) {
  if (!s) return null;
  const D = { sm: "max-w-sm", md: "max-w-md", lg: "max-w-lg" };
  return e.jsxs("div", {
    className: "fixed inset-0 z-50 overflow-y-auto",
    children: [
      e.jsx("div", {
        className: "fixed inset-0 bg-black bg-opacity-50 transition-opacity",
        onClick: t,
      }),
      e.jsx("div", {
        className: "flex min-h-full items-center justify-center p-4",
        children: e.jsxs("div", {
          className: `relative bg-white rounded-lg shadow-xl w-full ${D[i]} transform transition-all`,
          children: [
            x &&
              e.jsxs("div", {
                className:
                  "flex items-center justify-between p-6 border-b border-gray-200",
                children: [
                  e.jsx("h3", {
                    className: "text-lg font-semibold text-gray-900",
                    children: x,
                  }),
                  e.jsx("button", {
                    onClick: t,
                    className:
                      "text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-lg p-1",
                    children: e.jsx(ze, { className: "h-5 w-5" }),
                  }),
                ],
              }),
            e.jsx("div", { className: "p-6", children: h }),
          ],
        }),
      }),
    ],
  });
}
const Qa = () => {
    const [s, t] = r.useState(null),
      [x, h] = r.useState(null),
      [i, D] = r.useState(!1),
      [E, O] = r.useState(""),
      [F, C] = r.useState(""),
      [V, U] = r.useState(!1),
      [A, Q] = r.useState(0),
      [ee, Y] = r.useState(""),
      G = (w) => {
        w.target.files && (t(w.target.files[0]), O(""), C(""));
      },
      L = (w) => {
        w.target.files && (h(w.target.files[0]), O(""), C(""));
      },
      W = () => {
        (t(null), O(""), C(""));
        const w = document.getElementById("statusFileInput");
        w && (w.value = "");
      },
      T = () => {
        (h(null), O(""), C(""));
        const w = document.getElementById("newParcelaFileInput");
        w && (w.value = "");
      },
      p = async () => {
        try {
          const { error: w, count: y } = await De.from("BANCO_DADOS").select(
            "*",
            { count: "exact", head: !0 },
          );
          return w
            ? (console.error("Erro de conectividade com o banco de dados"),
              C(`❌ Erro de conexão: ${w.message}`),
              !1)
            : (C(`✅ Conexão OK. ${y} registros na tabela BANCO_DADOS`), !0);
        } catch (w) {
          return (
            console.error("❌ Erro de conexão:", w),
            C(`❌ Erro: ${w.message}`),
            !1
          );
        }
      },
      I = async (w) =>
        new Promise((y, S) => {
          const _ = new FileReader();
          ((_.onload = async (J) => {
            var Z;
            try {
              const he = (Z = J.target) == null ? void 0 : Z.result;
              if (!he || he.trim() === "")
                return S(new Error("Arquivo CSV está vazio"));
              if (!w.name.toLowerCase().endsWith(".csv"))
                return S(new Error("Formato Excel não implementado. Use CSV."));
              console.log("📄 Processando CSV com parser robusto...");
              const R = he.substring(
                0,
                he.indexOf(`
`),
              );
              let ge = ",";
              (R.includes(";") && !R.includes(",")
                ? (ge = ";")
                : R.includes("	") && (ge = "	"),
                console.log(`🔍 Separador detectado: "${ge}"`));
              const pe = [];
              let fe = "",
                we = [],
                re = !1;
              for (let P = 0; P < he.length; P++) {
                const se = he[P];
                re
                  ? se === '"'
                    ? P + 1 < he.length && he[P + 1] === '"'
                      ? ((fe += '"'), P++)
                      : (re = !1)
                    : (fe += se)
                  : se === '"'
                    ? (re = !0)
                    : se === ge
                      ? (we.push(fe), (fe = ""))
                      : se ===
                            `
` || se === "\r"
                        ? ((he[P - 1] !== "\r" ||
                            se !==
                              `
`) &&
                            (we.push(fe), pe.push(we), (we = []), (fe = "")),
                          se === "\r" &&
                            he[P + 1] ===
                              `
` &&
                            P++)
                        : (fe += se);
              }
              if ((we.push(fe), pe.push(we), pe.length < 2))
                return S(
                  new Error(
                    "CSV não contém dados suficientes (cabeçalho + pelo menos uma linha).",
                  ),
                );
              const de = pe[0].map((P) => P.trim());
              console.log("📋 Headers encontrados:", de);
              const oe = [];
              for (let P = 1; P < pe.length; P++) {
                const se = pe[P];
                if (!(se.length === 1 && se[0] === ""))
                  if (se.length >= de.length) {
                    const Ae = {};
                    (de.forEach((Ve, ne) => {
                      Ae[Ve] = se[ne] || "";
                    }),
                      oe.push(Ae));
                  } else
                    console.log(
                      `⚠️ Linha ${P + 1} ignorada (número de colunas incompatível com o cabeçalho):`,
                      se,
                    );
              }
              (console.log(`✅ ${oe.length} registros processados`), y(oe));
            } catch (he) {
              (console.error("❌ Erro ao processar arquivo:", he), S(he));
            }
          }),
            (_.onerror = () => S(new Error("Erro ao ler arquivo"))),
            _.readAsText(w));
        }),
      v = async (w) => {
        try {
          const { data: y, error: S } = await De.from("BANCO_DADOS")
            .select("id_parcela")
            .eq("id_parcela", w)
            .single();
          if (S && S.code !== "PGRST116")
            return (
              console.error(`❌ Erro ao verificar registro ${w}:`, S),
              !1
            );
          const _ = !!y;
          return (
            console.log(`🔍 Registro ${w} ${_ ? "existe" : "não existe"}`),
            _
          );
        } catch (y) {
          return (console.error(`❌ Erro ao verificar registro ${w}:`, y), !1);
        }
      },
      j = async (w, y) => {
        const S = [];
        console.log(`🔄 Iniciando atualização de ${w.length} registros...`);
        for (let _ = 0; _ < w.length; _++) {
          const J = w[_],
            Z = J.id_parcela || J.id_parcela,
            he = J.status || J.status;
          if ((console.log(`📝 Processando: ID=${Z}, Status=${he}`), !Z)) {
            S.push({
              id_parcela: "N/A",
              status: "error",
              error: "id_parcela não fornecido",
            });
            continue;
          }
          if (!he) {
            S.push({
              id_parcela: Z,
              status: "error",
              error: "status não fornecido",
            });
            continue;
          }
          try {
            if (!(await v(Z))) {
              S.push({
                id_parcela: Z,
                status: "error",
                error: `Registro com id_parcela ${Z} não encontrado`,
              });
              continue;
            }
            console.log(`🔄 Atualizando ${Z} com status: ${he}`);
            const { data: R, error: ge } = await De.from("BANCO_DADOS")
              .update({ status: he })
              .eq("id_parcela", Z)
              .select();
            ge
              ? (console.error(`❌ Erro ao atualizar ${Z}:`, ge),
                S.push({
                  id_parcela: Z,
                  status: "error",
                  error: ge.message,
                  details: ge,
                }))
              : (console.log(`✅ Sucesso ao atualizar ${Z}:`, R),
                S.push({ id_parcela: Z, status: "success", details: R }));
          } catch (xe) {
            (console.error(`❌ Exceção ao atualizar ${Z}:`, xe),
              S.push({ id_parcela: Z, status: "error", error: xe.message }));
          }
          if (y) {
            const xe = Math.round(((_ + 1) / w.length) * 100);
            y(xe, `Atualizando registro ${_ + 1} de ${w.length}...`);
          }
        }
        return S;
      },
      z = async (w, y) => {
        try {
          const S = w.filter((R) => R.id_parcela && R.id_parcela.trim() !== ""),
            _ = w.filter((R) => !R.id_parcela || R.id_parcela.trim() === ""),
            J = _.length;
          (J > 0 &&
            console.warn(
              `[DataUpload] Ignorando ${J} linhas por não terem um id_parcela válido.`,
            ),
            console.log(`🔄 Inserindo ${S.length} novos registros...`),
            console.log("📄 Dados a serem inseridos:", S));
          const Z = 1e3;
          let he = 0;
          for (let R = 0; R < S.length; R += Z) {
            const ge = S.slice(R, R + Z),
              pe = ge.map((we) => {
                const re = { ...we };
                return (
                  (re.dias_em_atraso = re.dias_em_atraso
                    ? Number(re.dias_em_atraso)
                    : null),
                  (re.numero_titulo = re.numero_titulo
                    ? Number(re.numero_titulo)
                    : null),
                  (re.parcela = re.parcela ? Number(re.parcela) : null),
                  (re.id_parcela = Number(we.id_parcela)),
                  (re.venda_n = re.venda_n ? Number(re.venda_n) : null),
                  (re.valor_original = re.valor_original
                    ? Number(re.valor_original.replace(",", "."))
                    : null),
                  (re.valor_reajustado = re.valor_reajustado
                    ? Number(re.valor_reajustado.replace(",", "."))
                    : null),
                  (re.multa = re.multa
                    ? Number(re.multa.replace(",", "."))
                    : null),
                  (re.juros_por_dia = re.juros_por_dia
                    ? Number(re.juros_por_dia.replace(",", "."))
                    : null),
                  (re.multa_aplicada = re.multa_aplicada
                    ? Number(re.multa_aplicada.replace(",", "."))
                    : null),
                  (re.juros_aplicado = re.juros_aplicado
                    ? Number(re.juros_aplicado.replace(",", "."))
                    : null),
                  (re.valor_recebido = re.valor_recebido
                    ? Number(re.valor_recebido.replace(",", "."))
                    : null),
                  (re.desconto = re.desconto
                    ? Number(re.desconto.replace(",", "."))
                    : null),
                  (re.acrescimo = re.acrescimo
                    ? Number(re.acrescimo.replace(",", "."))
                    : null),
                  (re.multa_paga = re.multa_paga
                    ? Number(re.multa_paga.replace(",", "."))
                    : null),
                  (re.juros_pago = re.juros_pago
                    ? Number(re.juros_pago.replace(",", "."))
                    : null),
                  re.user_id === "" && (re.user_id = null),
                  re
                );
              }),
              { error: fe } = await De.from("BANCO_DADOS").insert(pe).select();
            if (fe)
              return (
                console.error("❌ Erro ao inserir dados:", fe),
                { success: !1, error: fe.message, details: fe }
              );
            if (((he += ge.length), y)) {
              const we = Math.round((he / S.length) * 100);
              y(we, `Inserindo ${he} de ${S.length} novos registros...`);
            }
          }
          let xe = `${he} parcelas inseridas com sucesso`;
          return (
            J > 0 &&
              (xe += `. ${J} linhas foram ignoradas. Veja os detalhes no debug.`),
            console.log("✅ Dados inseridos com sucesso:", he),
            { success: !0, message: xe, details: null, invalidRows: _ }
          );
        } catch (S) {
          return (
            console.error("❌ Exceção ao inserir dados:", S),
            { success: !1, error: S.message }
          );
        }
      },
      N = async () => {
        if (!s) {
          alert("Por favor, selecione um arquivo para atualizar o status.");
          return;
        }
        (D(!0), U(!0), Q(0), Y("Iniciando atualização..."), O(""), C(""));
        try {
          if ((Y("🔍 Testando conexão com Supabase..."), !(await p()))) {
            (Y("❌ Falha na conexão com Supabase"),
              O("❌ Falha na conexão com Supabase"));
            return;
          }
          (Y("📤 Processando arquivo..."), Q(20));
          const y = await I(s);
          (Y(
            `📋 ${y.length} registros encontrados. Atualizando no Supabase...`,
          ),
            Q(40));
          const S = await j(y, (Z, he) => {
              (Q(40 + Z * 0.6), Y(he));
            }),
            _ = S.filter((Z) => Z.status === "success").length,
            J = S.filter((Z) => Z.status === "error").length;
          if (
            (O(`✅ Atualização concluída: ${_} sucessos, ${J} falhas`),
            Y(`✅ Atualização concluída: ${_} sucessos, ${J} falhas`),
            Q(100),
            J > 0)
          ) {
            console.log(
              "❌ Erros encontrados:",
              S.filter((he) => he.status === "error"),
            );
            const Z = S.filter((he) => he.status === "error").map(
              (he) => `${he.id_parcela}: ${he.error}`,
            ).join(`
`);
            C(`❌ Erros:
${Z}`);
          } else C("✅ Todas as atualizações foram realizadas com sucesso!");
        } catch (w) {
          const y = w.message;
          (O(`❌ Erro: ${y}`),
            C(`❌ Erro detalhado: ${y}`),
            Y(`❌ Erro: ${y}`),
            Q(0),
            console.error("❌ Erro detalhado:", w));
        } finally {
          (D(!1), setTimeout(() => U(!1), 3e3));
        }
      },
      H = async () => {
        if (!x) {
          alert(
            "Por favor, selecione um arquivo para adicionar novas parcelas.",
          );
          return;
        }
        (D(!0),
          U(!0),
          Q(0),
          Y("Iniciando inserção de novas parcelas..."),
          O(""),
          C(""));
        try {
          if ((Y("🔍 Testando conexão com Supabase..."), !(await p()))) {
            (Y("❌ Falha na conexão com Supabase"),
              O("❌ Falha na conexão com Supabase"));
            return;
          }
          (Y("📤 Processando arquivo..."), Q(20));
          const y = await I(x);
          (Y(`📋 ${y.length} registros encontrados. Inserindo no Supabase...`),
            Q(40));
          const S = await z(y, (_, J) => {
            (Q(40 + _ * 0.6), Y(J));
          });
          if (S.success)
            if (
              (O(`✅ ${S.message}`),
              Y(`✅ ${S.message}`),
              Q(100),
              S.invalidRows && S.invalidRows.length > 0)
            ) {
              const _ = S.invalidRows.map((J) => JSON.stringify(J)).join(`
`);
              C(`✅ Inserção concluída, mas ${S.invalidRows.length} linhas foram ignoradas por falta de id_parcela:
${_}`);
            } else C("✅ Todas as novas parcelas foram inseridas com sucesso!");
          else
            (O(`❌ Erro: ${S.error}`),
              C(`❌ Erro detalhado: ${S.error}`),
              Y(`❌ Erro: ${S.error}`),
              Q(0));
        } catch (w) {
          const y = w.message;
          (O(`❌ Erro: ${y}`),
            C(`❌ Erro detalhado: ${y}`),
            Y(`❌ Erro: ${y}`),
            Q(0),
            console.error("❌ Erro detalhado:", w));
        } finally {
          (D(!1), setTimeout(() => U(!1), 3e3));
        }
      };
    return e.jsxs("div", {
      className:
        "bg-white rounded-lg sm:rounded-xl shadow-sm p-4 sm:p-6 border border-gray-200 space-y-6",
      children: [
        e.jsx("h2", {
          className: "text-xl sm:text-2xl font-semibold text-gray-900",
          children: "Upload de Dados do Banco",
        }),
        e.jsx("p", {
          className: "text-gray-600",
          children:
            "Utilize esta seção para atualizar informações existentes ou adicionar novos registros à tabela BANCO_DADOS.",
        }),
        e.jsxs("div", {
          className:
            "bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex items-center justify-between",
          children: [
            e.jsxs("h3", {
              className:
                "text-sm font-medium text-yellow-800 flex items-center",
              children: [
                e.jsx(zs, { className: "h-4 w-4 mr-2" }),
                "🔧 Debug e Teste",
              ],
            }),
            e.jsxs("button", {
              onClick: p,
              disabled: i,
              className:
                "inline-flex items-center px-3 py-2 border border-yellow-300 text-sm font-medium rounded-md text-yellow-700 bg-yellow-50 hover:bg-yellow-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 disabled:opacity-50",
              children: [
                e.jsx(Us, { className: "h-4 w-4 mr-2" }),
                " Testar Conexão com Supabase",
              ],
            }),
          ],
        }),
        E &&
          e.jsxs("div", {
            className: `p-4 rounded-lg flex items-center ${E.includes("❌") ? "bg-red-50 text-red-700" : E.includes("✅") ? "bg-green-50 text-green-700" : "bg-blue-50 text-blue-700"}`,
            children: [
              E.includes("❌") && e.jsx(Be, { className: "h-5 w-5 mr-3" }),
              E.includes("✅") && e.jsx(Le, { className: "h-5 w-5 mr-3" }),
              E.includes("🔄") &&
                e.jsx(Us, { className: "h-5 w-5 mr-3 animate-spin" }),
              !E.includes("❌") &&
                !E.includes("✅") &&
                !E.includes("🔄") &&
                e.jsx(zs, { className: "h-5 w-5 mr-3" }),
              e.jsx("span", { children: E }),
            ],
          }),
        F &&
          e.jsxs("div", {
            className: "bg-gray-50 border border-gray-200 rounded-lg p-4",
            children: [
              e.jsxs("h4", {
                className:
                  "text-sm font-medium text-gray-800 mb-2 flex items-center",
                children: [
                  e.jsx(rs, { className: "h-4 w-4 mr-2" }),
                  "🐛 Informações de Debug:",
                ],
              }),
              e.jsx("pre", {
                className:
                  "text-xs text-gray-600 whitespace-pre-wrap bg-gray-100 p-3 rounded-md overflow-auto max-h-40",
                children: F,
              }),
            ],
          }),
        e.jsxs("div", {
          className: "grid grid-cols-1 md:grid-cols-2 gap-6",
          children: [
            e.jsxs("div", {
              className: "border border-gray-200 rounded-lg p-4 space-y-3",
              children: [
                e.jsxs("h3", {
                  className:
                    "text-lg font-medium text-gray-800 flex items-center",
                  children: [
                    e.jsx(Hs, { className: "h-5 w-5 mr-2" }),
                    "Atualizar Status de Parcelas",
                  ],
                }),
                e.jsxs("p", {
                  className: "text-sm text-gray-600",
                  children: [
                    "Faça upload de um arquivo CSV com as colunas:",
                    " ",
                    e.jsx("code", {
                      className: "bg-gray-100 px-1 rounded",
                      children: "id_parcela,status",
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "bg-blue-50 border-l-4 border-blue-400 p-3 text-sm flex items-start",
                  children: [
                    e.jsx(zs, {
                      className: "h-5 w-5 mr-3 text-blue-700 flex-shrink-0",
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("strong", { children: "Importante:" }),
                        " O ",
                        e.jsx("code", { children: "id_parcela" }),
                        " deve corresponder a um registro existente na tabela. Apenas o campo",
                        " ",
                        e.jsx("code", { children: "status" }),
                        " será atualizado.",
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "flex items-center space-x-2",
                  children: [
                    e.jsx("input", {
                      type: "file",
                      accept: ".csv",
                      onChange: G,
                      disabled: i,
                      id: "statusFileInput",
                      className: `block w-full text-sm text-gray-500
                file:mr-4 file:py-2 file:px-4
                file:rounded-md file:border-0
                file:text-sm file:font-semibold
                file:bg-blue-50 file:text-blue-700
                hover:file:bg-blue-100
                disabled:opacity-50`,
                    }),
                    s &&
                      e.jsx("button", {
                        onClick: W,
                        className:
                          "p-2 rounded-full text-gray-400 hover:text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",
                        title: "Limpar arquivo selecionado",
                        children: e.jsx(ze, { className: "h-5 w-5" }),
                      }),
                  ],
                }),
                e.jsxs("button", {
                  onClick: N,
                  disabled: i || !s,
                  className:
                    "mt-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed",
                  children: [
                    i
                      ? e.jsx(Us, { className: "h-4 w-4 mr-2 animate-spin" })
                      : e.jsx(Hs, { className: "h-4 w-4 mr-2" }),
                    i ? "Processando..." : "Upload para Atualizar Status",
                  ],
                }),
                s &&
                  e.jsxs("p", {
                    className: "text-sm text-gray-500 mt-2",
                    children: [
                      "Arquivo selecionado:",
                      " ",
                      e.jsx("span", {
                        className: "font-medium",
                        children: s.name,
                      }),
                    ],
                  }),
              ],
            }),
            e.jsxs("div", {
              className: "border border-gray-200 rounded-lg p-4 space-y-3",
              children: [
                e.jsxs("h3", {
                  className:
                    "text-lg font-medium text-gray-800 flex items-center",
                  children: [
                    e.jsx(Hs, { className: "h-5 w-5 mr-2" }),
                    "Adicionar Novas Parcelas",
                  ],
                }),
                e.jsx("p", {
                  className: "text-sm text-gray-600",
                  children:
                    "Faça upload de um arquivo CSV contendo os dados das novas parcelas a serem adicionadas.",
                }),
                e.jsxs("div", {
                  className: "flex items-center space-x-2",
                  children: [
                    e.jsx("input", {
                      type: "file",
                      accept: ".csv",
                      onChange: L,
                      disabled: i,
                      id: "newParcelaFileInput",
                      className: `block w-full text-sm text-gray-500
                file:mr-4 file:py-2 file:px-4
                file:rounded-md file:border-0
                file:text-sm file:font-semibold
                file:bg-green-50 file:text-green-700
                hover:file:bg-green-100
                disabled:opacity-50`,
                    }),
                    x &&
                      e.jsx("button", {
                        onClick: T,
                        className:
                          "p-2 rounded-full text-gray-400 hover:text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500",
                        title: "Limpar arquivo selecionado",
                        children: e.jsx(ze, { className: "h-5 w-5" }),
                      }),
                  ],
                }),
                e.jsxs("button", {
                  onClick: H,
                  disabled: i || !x,
                  className:
                    "mt-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed",
                  children: [
                    i
                      ? e.jsx(Us, { className: "h-4 w-4 mr-2 animate-spin" })
                      : e.jsx(Hs, { className: "h-4 w-4 mr-2" }),
                    i
                      ? "Processando..."
                      : "Upload para Adicionar Novas Parcelas",
                  ],
                }),
                x &&
                  e.jsxs("p", {
                    className: "text-sm text-gray-500 mt-2",
                    children: [
                      "Arquivo selecionado:",
                      " ",
                      e.jsx("span", {
                        className: "font-medium",
                        children: x.name,
                      }),
                    ],
                  }),
              ],
            }),
          ],
        }),
        e.jsxs("div", {
          className:
            "bg-blue-50 border border-blue-200 rounded-lg p-4 flex items-start",
          children: [
            e.jsx(zs, {
              className: "h-5 w-5 mr-3 text-blue-700 flex-shrink-0",
            }),
            e.jsxs("div", {
              children: [
                e.jsx("h3", {
                  className: "text-sm font-medium text-blue-800 mb-2",
                  children: "Como usar:",
                }),
                e.jsxs("ol", {
                  className:
                    "text-sm text-blue-700 space-y-1 list-decimal list-inside",
                  children: [
                    e.jsx("li", {
                      children:
                        "Primeiro, teste a conexão com o Supabase usando o botão de teste",
                    }),
                    e.jsx("li", {
                      children:
                        "Certifique-se de que as variáveis de ambiente do Supabase estão configuradas",
                    }),
                    e.jsx("li", {
                      children: "Prepare seu arquivo CSV com o formato correto",
                    }),
                    e.jsx("li", {
                      children: "Selecione o arquivo e clique em upload",
                    }),
                    e.jsx("li", {
                      children:
                        "Acompanhe o status da operação e as informações de debug",
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
        e.jsx(gt, {
          isOpen: V,
          onClose: () => U(!1),
          title: "Progresso da Atualização",
          children: e.jsxs("div", {
            className: "text-center p-4",
            children: [
              e.jsx("p", {
                className: "text-lg font-medium mb-4 text-gray-800",
                children: ee,
              }),
              e.jsx("div", {
                className:
                  "w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700",
                children: e.jsx("div", {
                  className:
                    "bg-blue-600 h-4 rounded-full transition-all duration-500 ease-out",
                  style: { width: `${A}%` },
                }),
              }),
              e.jsxs("p", {
                className: "text-sm text-gray-600 mt-2",
                children: [A, "% Concluído"],
              }),
            ],
          }),
        }),
      ],
    });
  },
  Ya = Xe.memo(() => {
    var te;
    const {
        collections: s,
        users: t,
        collectorStores: x,
        assignCollectorToClients: h,
        removeCollectorFromClients: i,
      } = Je(),
      [D, E] = r.useState(""),
      [O, F] = r.useState(""),
      [C, V] = r.useState(new Set()),
      [U, A] = r.useState(!1),
      [Q, ee] = r.useState(""),
      [Y, G] = r.useState(""),
      [L, W] = r.useState(""),
      [T, p] = r.useState(""),
      [I, v] = r.useState(""),
      [j, z] = r.useState(""),
      [N, H] = r.useState(""),
      [w, y] = r.useState(!1),
      [S, _] = r.useState(!1),
      [J, Z] = r.useState(!1),
      [he, xe] = r.useState(!1),
      [R, ge] = r.useState({}),
      [pe, fe] = r.useState(1),
      [we, re] = r.useState(10),
      de = 100,
      oe = t.filter((g) => g.type === "collector"),
      P = (g) => {
        if (!g || g === "null" || g === "") return null;
        try {
          let u;
          if (g.includes("-")) u = new Date(g);
          else if (g.includes("/")) {
            const [o, b, k] = g.split("/");
            u = new Date(`${k}-${b.padStart(2, "0")}-${o.padStart(2, "0")}`);
          } else u = new Date(g);
          return isNaN(u.getTime()) ? null : (u.setHours(0, 0, 0, 0), u);
        } catch (u) {
          return (console.error("Erro ao parsear data:", g, u), null);
        }
      },
      se = r.useMemo(() => {
        const g = (o) => {
            if (o.user_id) {
              const b = t.find((k) => k.id === o.user_id);
              return {
                collectorId: o.user_id,
                collectorName: b == null ? void 0 : b.name,
              };
            }
            if (o.nome_da_loja) {
              const b = x.find((k) => k.storeName === o.nome_da_loja);
              if (b) {
                const k = t.find((ue) => ue.id === b.collectorId);
                return {
                  collectorId: b.collectorId,
                  collectorName: k == null ? void 0 : k.name,
                };
              }
            }
            return { collectorId: void 0, collectorName: void 0 };
          },
          u = new Map();
        return (
          s.forEach((o) => {
            const b = (o.documento || o.cliente || "").trim();
            if (!b) {
              console.warn("Collection sem documento ou nome válido:", o);
              return;
            }
            if (u.has(b)) {
              const k = u.get(b);
              if (!k.collectorId) {
                const { collectorId: ue, collectorName: me } = g(o);
                ue && ((k.collectorId = ue), (k.collectorName = me));
              }
            } else {
              const { collectorId: k, collectorName: ue } = g(o);
              u.set(b, {
                cliente: o.cliente || "Cliente sem nome",
                documento: o.documento || "",
                uniqueKey: b,
                collections: [],
                collectorId: k,
                collectorName: ue,
                cidade: o.cidade || void 0,
                bairro: o.bairro || void 0,
              });
            }
            u.get(b).collections.push(o);
          }),
          Array.from(u.values())
        );
      }, [s, t, x]),
      Ae = r.useMemo(() => {
        const g = new Set();
        return (
          se.forEach((u) => {
            u.cidade && g.add(u.cidade);
          }),
          Array.from(g).sort()
        );
      }, [se]),
      Ve = r.useMemo(() => {
        const g = new Set();
        return (
          se.forEach((u) => {
            u.bairro && (!L || u.cidade === L) && g.add(u.bairro);
          }),
          Array.from(g).sort()
        );
      }, [se, L]),
      ne = r.useMemo(() => {
        const g = new Set();
        return (
          se.forEach((u) => {
            u.collections.forEach((o) => {
              o.nome_da_loja && g.add(o.nome_da_loja);
            });
          }),
          Array.from(g).sort()
        );
      }, [se]),
      Re = r.useMemo(() => {
        const g = [];
        if (
          (D && g.push({ label: `Busca: "${D}"`, onClear: () => E("") }), Q)
        ) {
          const u = oe.find((o) => o.id === Q);
          g.push({
            label: `Cobrador: ${(u == null ? void 0 : u.name) || "Desconhecido"}`,
            onClear: () => ee(""),
          });
        }
        if (Y) {
          const u = Y === "with_collector" ? "Com Cobrador" : "Sem Cobrador";
          g.push({ label: `Status: ${u}`, onClear: () => G("") });
        }
        return (
          L && g.push({ label: `Cidade: ${L}`, onClear: () => W("") }),
          T && g.push({ label: `Bairro: ${T}`, onClear: () => p("") }),
          I && g.push({ label: `Loja: ${I}`, onClear: () => v("") }),
          j && g.push({ label: `De: ${j}`, onClear: () => z("") }),
          N && g.push({ label: `Até: ${N}`, onClear: () => H("") }),
          w &&
            (j || N) &&
            g.push({ label: "Incluir sem data", onClear: () => y(!1) }),
          g
        );
      }, [D, Q, Y, L, T, I, j, N, w, oe]),
      K = r.useMemo(
        () =>
          se.filter((u) => {
            var $e, Ue;
            const o =
                (($e = u.cliente) == null
                  ? void 0
                  : $e.toLowerCase().includes(D.toLowerCase())) ||
                ((Ue = u.documento) == null ? void 0 : Ue.includes(D)),
              b = !Q || u.collectorId === Q,
              k =
                !Y ||
                (Y === "with_collector" && u.collectorId) ||
                (Y === "without_collector" && !u.collectorId),
              ue = !L || u.cidade === L,
              me = !T || u.bairro === T,
              ie = !I || u.collections.some((He) => He.nome_da_loja === I),
              ve = (() => {
                if (!j && !N) return !0;
                const He = j ? P(j) : null,
                  ns = N ? P(N) : null;
                if ((j && !He) || (N && !ns))
                  return (
                    console.warn("Datas de filtro inválidas:", {
                      filterDateFrom: j,
                      filterDateTo: N,
                    }),
                    !0
                  );
                let gs = !1,
                  Ye = !1;
                for (const xs of u.collections) {
                  const os = P(xs.data_vencimento);
                  if (os) {
                    gs = !0;
                    let cs = !0;
                    if (
                      (He && (cs = cs && os >= He),
                      ns && (cs = cs && os <= ns),
                      cs)
                    ) {
                      Ye = !0;
                      break;
                    }
                  }
                }
                return !!(Ye || (!gs && w));
              })();
            return o && b && k && ue && me && ie && ve;
          }),
        [se, D, Q, Y, L, T, j, N, w],
      );
    r.useEffect(() => {
      fe(1);
    }, [K]);
    const B = r.useMemo(() => {
        const g = (pe - 1) * we,
          u = g + we;
        return K.slice(g, u);
      }, [K, pe, we]),
      X = Math.ceil(K.length / we),
      je = K.length > 0 ? (pe - 1) * we + 1 : 0,
      Se = Math.min(pe * we, K.length),
      ae = (g) => {
        (re(g), fe(1));
      },
      ke = () => {
        const g = B.map((o) => o.uniqueKey);
        if (g.every((o) => C.has(o))) {
          const o = new Set(C);
          (g.forEach((b) => o.delete(b)), V(o));
        } else {
          const o = new Set(C);
          (g.forEach((b) => o.add(b)), V(o));
        }
      },
      Te = () => {
        C.size === K.length
          ? V(new Set())
          : V(new Set(K.map((g) => g.uniqueKey)));
      },
      le = (g) => {
        const u = new Set(C);
        (u.has(g) ? u.delete(g) : u.add(g), V(u));
      },
      c = () => {
        if (!O || C.size === 0) {
          const g = document.createElement("div");
          ((g.className =
            "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50"),
            (g.textContent = "Selecione um cobrador e pelo menos um cliente"),
            document.body.appendChild(g),
            setTimeout(() => document.body.removeChild(g), 3e3));
          return;
        }
        Z(!0);
      },
      M = async () => {
        (Z(!1), A(!0));
        const g = Array.from(C).map((me) => {
            const ie = se.find((ve) => ve.uniqueKey === me);
            return {
              document: ie == null ? void 0 : ie.documento,
              clientName: ie == null ? void 0 : ie.cliente,
            };
          }),
          u = g.length;
        let o = 0,
          b = 0;
        const k = (me, ie) => {
            const ve = document.createElement("div");
            ((ve.className = `fixed top-4 right-4 ${ie === "success" ? "bg-green-500" : ie === "error" ? "bg-red-500" : "bg-blue-500"} text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center`),
              (ve.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        ${ie === "success" ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>' : ie === "error" ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>' : '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>'}
      </svg>
      ${me}
    `),
              document.body.appendChild(ve),
              setTimeout(() => document.body.removeChild(ve), 5e3));
          },
          ue = async (me) => {
            try {
              (await h(O, me), (o += me.length));
            } catch (ie) {
              (console.error("Erro ao atribuir cobrador em lote:", ie),
                (b += me.length));
            }
          };
        try {
          if (u > de) {
            for (let me = 0; me < u; me += de) {
              const ie = g.slice(me, me + de);
              (await ue(ie),
                me + de < u &&
                  (await new Promise((ve) => setTimeout(ve, 1e3))));
            }
            b === 0
              ? k(
                  `${o} cliente(s) atribuído(s) com sucesso em lotes!`,
                  "success",
                )
              : k(
                  o === 0
                    ? `Erro ao atribuir cobrador a todos os ${b} clientes.`
                    : `${o} clientes atribuídos, ${b} com erro.`,
                  "error",
                );
          } else
            (await h(O, g),
              k(`${u} cliente(s) atribuído(s) com sucesso!`, "success"));
          V(new Set());
        } catch (me) {
          (console.error("Erro geral ao atribuir cobrador:", me),
            k("Erro ao atribuir cobrador. Tente novamente.", "error"));
        } finally {
          A(!1);
        }
      },
      l = () => {
        if (C.size === 0) {
          const o = document.createElement("div");
          ((o.className =
            "fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50"),
            (o.textContent = "Selecione pelo menos um cliente"),
            document.body.appendChild(o),
            setTimeout(() => document.body.removeChild(o), 3e3));
          return;
        }
        const u = Array.from(C)
          .map((o) => se.find((b) => b.uniqueKey === o))
          .filter(Boolean)
          .filter((o) => (o == null ? void 0 : o.collectorId));
        if (u.length === 0) {
          const o = document.createElement("div");
          ((o.className =
            "fixed top-4 right-4 bg-amber-500 text-white px-4 py-2 rounded-lg shadow-lg z-50"),
            (o.textContent =
              "Nenhum dos clientes selecionados possui cobrador atribuído"),
            document.body.appendChild(o),
            setTimeout(() => document.body.removeChild(o), 4e3));
          return;
        }
        (ge({ clientsWithCollectors: u.length, totalClients: C.size }), xe(!0));
      },
      n = async () => {
        (xe(!1), A(!0));
        const g = Array.from(C).map((me) => {
            const ie = se.find((ve) => ve.uniqueKey === me);
            return {
              document: ie == null ? void 0 : ie.documento,
              clientName: ie == null ? void 0 : ie.cliente,
            };
          }),
          u = g.length;
        let o = 0,
          b = 0;
        const k = (me, ie) => {
            const ve = document.createElement("div");
            ((ve.className = `fixed top-4 right-4 ${ie === "success" ? "bg-green-500" : ie === "error" ? "bg-red-500" : "bg-blue-500"} text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center`),
              (ve.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        ${ie === "success" ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>' : ie === "error" ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>' : '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>'}
      </svg>
      ${me}
    `),
              document.body.appendChild(ve),
              setTimeout(() => document.body.removeChild(ve), 5e3));
          },
          ue = async (me) => {
            try {
              (await i(me), (o += me.length));
            } catch (ie) {
              (console.error("Erro ao remover cobrador em lote:", ie),
                (b += me.length));
            }
          };
        try {
          if (u > de) {
            for (let me = 0; me < u; me += de) {
              const ie = g.slice(me, me + de);
              (await ue(ie),
                me + de < u &&
                  (await new Promise((ve) => setTimeout(ve, 1e3))));
            }
            b === 0
              ? k(
                  `Cobrador removido de ${o} cliente(s) com sucesso em lotes!`,
                  "success",
                )
              : k(
                  o === 0
                    ? `Erro ao remover cobrador de todos os ${b} clientes.`
                    : `${o} clientes processados, ${b} com erro na remoção.`,
                  "error",
                );
          } else
            (await i(g), k(`Cobrador removido de ${u} cliente(s)!`, "success"));
          V(new Set());
        } catch (me) {
          (console.error("Erro geral ao remover cobrador:", me),
            k("Erro ao remover cobrador. Tente novamente.", "error"));
        } finally {
          A(!1);
        }
      },
      d = Re.length > 0,
      a = r.useMemo(() => {
        const g = se.length,
          u = se.filter((me) => me.collectorId).length,
          o = g - u,
          b = se.reduce((me, ie) => me + ie.collections.length, 0),
          k = g > 0 ? b / g : 0,
          ue = g > 0 ? (u / g) * 100 : 0;
        return {
          totalClients: g,
          assignedClients: u,
          unassignedClients: o,
          totalCollections: b,
          avgCollectionsPerClient: k,
          assignmentRate: ue,
        };
      }, [se]),
      f = r.useMemo(() => {
        const g = K.length,
          u = K.filter((k) => k.collectorId).length,
          o = g - u,
          b = K.reduce((k, ue) => k + ue.collections.length, 0);
        return {
          totalFiltered: g,
          assignedFiltered: u,
          unassignedFiltered: o,
          totalCollectionsFiltered: b,
        };
      }, [K]);
    r.useEffect(() => {
      if (j || N) {
        (console.log("=== DEBUG FILTRO DE DATA ==="),
          console.log("Filtros ativos:", {
            filterDateFrom: j,
            filterDateTo: N,
            includeWithoutDate: w,
          }),
          console.log("Total de clientes filtrados:", K.length));
        const g = new Set();
        let u = 0,
          o = 0;
        (se.slice(0, 100).forEach((b) => {
          b.collections.forEach((k) => {
            k.data_vencimento &&
              (g.add(k.data_vencimento), P(k.data_vencimento) ? u++ : o++);
          });
        }),
          console.log(
            "Amostra de datas (primeiras 10):",
            Array.from(g).slice(0, 10),
          ),
          console.log("Datas válidas/inválidas na amostra:", {
            validCount: u,
            invalidCount: o,
          }));
      }
    }, [j, N, w, K, se]);
    const $ = r.useMemo(() => {
      const g = d ? f.totalFiltered : a.totalClients,
        u = d ? f.assignedFiltered : a.assignedClients,
        o = g > 0 ? (u / g) * 100 : 0;
      return { total: g, assigned: u, assignmentRate: o };
    }, [d, f, a]);
    return e.jsxs("div", {
      className: "space-y-4",
      children: [
        e.jsx("div", {
          className: "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
          children: e.jsxs("div", {
            className: "flex items-center justify-between",
            children: [
              e.jsxs("div", {
                children: [
                  e.jsxs("h2", {
                    className:
                      "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                    children: [
                      e.jsx(is, {
                        className:
                          "h-5 w-5 lg:h-6 lg:w-6 mr-2 text-blue-600 flex-shrink-0",
                      }),
                      "Atribuição de Cobradores",
                    ],
                  }),
                  e.jsxs("p", {
                    className: "text-sm text-gray-600 mt-1",
                    children: [
                      "Gerencie a atribuição de ",
                      $.total,
                      " clientes",
                    ],
                  }),
                ],
              }),
              e.jsx("div", {
                className: "flex items-center gap-2",
                children: e.jsx("button", {
                  onClick: () => _(!S),
                  className:
                    "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                  title: "Filtros",
                  children: e.jsx(fs, { className: "h-5 w-5" }),
                }),
              }),
            ],
          }),
        }),
        e.jsxs("div", {
          className:
            "bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl shadow-lg p-6",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-sm font-medium",
                      children: "Taxa de Atribuição",
                    }),
                    e.jsxs("p", {
                      className: "text-4xl font-bold mt-1",
                      children: [$.assignmentRate.toFixed(1), "%"],
                    }),
                    e.jsxs("p", {
                      className: "text-blue-100 text-sm mt-2",
                      children: [$.total, " clientes cadastrados"],
                    }),
                  ],
                }),
                e.jsx(Os, { className: "h-16 w-16 text-blue-200 opacity-50" }),
              ],
            }),
            e.jsxs("div", {
              className:
                "grid grid-cols-3 gap-4 mt-6 pt-6 border-t border-blue-400",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Atribuídos",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: $.assigned,
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Pendentes",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: $.total - $.assigned,
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-blue-100 text-xs",
                      children: "Cobradores",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: oe.length,
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
        S &&
          e.jsx("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-4 animate-in slide-in-from-top-2",
            children: e.jsxs("div", {
              className:
                "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(Vs, { className: "h-4 w-4 mr-1" }),
                        "Buscar Cliente",
                      ],
                    }),
                    e.jsx("input", {
                      type: "text",
                      value: D,
                      onChange: (g) => E(g.target.value),
                      placeholder: "Nome ou documento...",
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(is, { className: "h-4 w-4 mr-1" }),
                        "Cobrador",
                      ],
                    }),
                    e.jsxs("select", {
                      value: Q,
                      onChange: (g) => ee(g.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "",
                          children: "Todos os cobradores",
                        }),
                        oe.map((g) =>
                          e.jsx(
                            "option",
                            { value: g.id, children: g.name },
                            g.id,
                          ),
                        ),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(Be, { className: "h-4 w-4 mr-1" }),
                        "Status",
                      ],
                    }),
                    e.jsxs("select", {
                      value: Y,
                      onChange: (g) => G(g.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "",
                          children: "Todos os status",
                        }),
                        e.jsx("option", {
                          value: "with_collector",
                          children: "Com cobrador",
                        }),
                        e.jsx("option", {
                          value: "without_collector",
                          children: "Sem cobrador",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(Fe, { className: "h-4 w-4 mr-1" }),
                        "Cidade",
                      ],
                    }),
                    e.jsxs("select", {
                      value: L,
                      onChange: (g) => {
                        (W(g.target.value), p(""));
                      },
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "",
                          children: "Todas as cidades",
                        }),
                        Ae.map((g) =>
                          e.jsx("option", { value: g, children: g }, g),
                        ),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(Fe, { className: "h-4 w-4 mr-1" }),
                        "Bairro",
                      ],
                    }),
                    e.jsxs("select", {
                      value: T,
                      onChange: (g) => p(g.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      disabled: !L,
                      children: [
                        e.jsx("option", {
                          value: "",
                          children: "Todos os bairros",
                        }),
                        Ve.map((g) =>
                          e.jsx("option", { value: g, children: g }, g),
                        ),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsxs("label", {
                      className:
                        "flex items-center text-sm font-medium text-gray-700 mb-2",
                      children: [
                        e.jsx(It, { className: "h-4 w-4 mr-1" }),
                        "Loja",
                      ],
                    }),
                    e.jsxs("select", {
                      value: I,
                      onChange: (g) => v(g.target.value),
                      className:
                        "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                      children: [
                        e.jsx("option", {
                          value: "",
                          children: "Todas as lojas",
                        }),
                        ne.map((g) =>
                          e.jsx("option", { value: g, children: g }, g),
                        ),
                      ],
                    }),
                  ],
                }),
                e.jsx("div", {
                  className: "col-span-full",
                  children: e.jsx("button", {
                    onClick: () => {
                      (E(""),
                        ee(""),
                        G(""),
                        W(""),
                        p(""),
                        v(""),
                        z(""),
                        H(""),
                        y(!1),
                        fe(1));
                    },
                    className:
                      "w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm font-medium",
                    children: "Limpar Filtros",
                  }),
                }),
              ],
            }),
          }),
        e.jsxs("div", {
          className: "space-y-4",
          children: [
            e.jsxs("div", {
              className:
                "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3",
              children: [
                e.jsxs("h3", {
                  className: "text-lg font-semibold text-gray-900",
                  children: ["Lista de Clientes (", K.length, ")"],
                }),
                e.jsxs("div", {
                  className: "flex flex-col sm:flex-row gap-2",
                  children: [
                    e.jsxs("button", {
                      onClick: ke,
                      className:
                        "px-4 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                      children: [
                        e.jsxs("span", {
                          className: "hidden sm:inline",
                          children: [
                            B.every((g) => C.has(g.documento))
                              ? "Desmarcar"
                              : "Selecionar",
                            " ",
                            "página",
                          ],
                        }),
                        e.jsxs("span", {
                          className: "sm:hidden",
                          children: [
                            B.every((g) => C.has(g.documento))
                              ? "Desmarcar"
                              : "Selecionar",
                            " ",
                            "página",
                          ],
                        }),
                      ],
                    }),
                    K.length > we &&
                      e.jsxs("button", {
                        onClick: Te,
                        className:
                          "px-4 py-2 text-sm border border-blue-300 text-blue-700 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors font-medium",
                        children: [
                          e.jsxs("span", {
                            className: "hidden sm:inline",
                            children: ["Selecionar todos (", K.length, ")"],
                          }),
                          e.jsxs("span", {
                            className: "sm:hidden",
                            children: ["Todos (", K.length, ")"],
                          }),
                        ],
                      }),
                  ],
                }),
              ],
            }),
            C.size > 0 &&
              e.jsx("div", {
                className:
                  "bg-white rounded-xl shadow-sm border border-gray-200",
                children: e.jsxs("div", {
                  className: "p-4 lg:p-6",
                  children: [
                    e.jsx("div", {
                      className: "flex flex-col gap-4",
                      children: e.jsxs("div", {
                        children: [
                          e.jsx("h3", {
                            className: "text-lg font-semibold text-gray-900",
                            children: "Ações em Massa",
                          }),
                          e.jsxs("p", {
                            className: "text-sm text-gray-600 mt-1",
                            children: [
                              C.size,
                              " cliente",
                              C.size !== 1 ? "s" : "",
                              " selecionado",
                              C.size !== 1 ? "s" : "",
                            ],
                          }),
                        ],
                      }),
                    }),
                    e.jsxs("div", {
                      className: "space-y-3",
                      children: [
                        e.jsxs("select", {
                          id: "selectedCollector",
                          name: "selectedCollector",
                          value: O,
                          onChange: (g) => F(g.target.value),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          children: [
                            e.jsx("option", {
                              value: "",
                              children: "Selecione um cobrador",
                            }),
                            oe.map((g) =>
                              e.jsx(
                                "option",
                                { value: g.id, children: g.name },
                                g.id,
                              ),
                            ),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "flex flex-col sm:flex-row gap-3",
                          children: [
                            e.jsxs("button", {
                              onClick: c,
                              disabled: U || !O,
                              className:
                                "flex-1 flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed",
                              children: [
                                U
                                  ? e.jsx("div", {
                                      className:
                                        "animate-spin h-4 w-4 mr-2 border-2 border-white border-t-transparent rounded-full",
                                    })
                                  : e.jsx(dt, { className: "h-4 w-4 mr-2" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Atribuir Cobrador",
                                }),
                                e.jsx("span", {
                                  className: "sm:hidden",
                                  children: "Atribuir",
                                }),
                              ],
                            }),
                            e.jsxs("button", {
                              onClick: l,
                              disabled: U,
                              className:
                                "flex-1 flex items-center justify-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed",
                              children: [
                                U
                                  ? e.jsx("div", {
                                      className:
                                        "animate-spin h-4 w-4 mr-2 border-2 border-white border-t-transparent rounded-full",
                                    })
                                  : e.jsx(mt, { className: "h-4 w-4 mr-2" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Remover Cobrador",
                                }),
                                e.jsx("span", {
                                  className: "sm:hidden",
                                  children: "Remover",
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    C.size > de &&
                      e.jsx("div", {
                        className:
                          "mt-4 p-3 bg-amber-50 border border-amber-200 rounded-lg",
                        children: e.jsxs("div", {
                          className: "flex items-center text-amber-700",
                          children: [
                            e.jsx(Be, { className: "h-4 w-4 mr-2" }),
                            e.jsxs("span", {
                              className: "text-sm",
                              children: [
                                "Operação será processada em",
                                " ",
                                Math.ceil(C.size / de),
                                " lotes de ",
                                de,
                                " clientes",
                              ],
                            }),
                          ],
                        }),
                      }),
                  ],
                }),
              }),
            B.map((g) => {
              const u = !g.collectorId,
                o = g.collections.reduce((k, ue) => k + ue.valor_original, 0),
                b =
                  o - g.collections.reduce((k, ue) => k + ue.valor_recebido, 0);
              return e.jsx(
                "div",
                {
                  className: `bg-white rounded-lg shadow-sm border transition-all duration-200 hover:shadow-md cursor-pointer ${u ? "border-amber-300 bg-amber-50" : "border-gray-200"} ${C.has(g.uniqueKey) ? "ring-2 ring-blue-500" : ""}`,
                  onClick: (k) => {
                    k.target.tagName !== "INPUT" && le(g.uniqueKey);
                  },
                  children: e.jsx("div", {
                    className: "p-4",
                    children: e.jsxs("div", {
                      className: "flex items-start gap-3",
                      children: [
                        e.jsx("input", {
                          id: `select-client-${g.uniqueKey}`,
                          name: `select-client-${g.uniqueKey}`,
                          type: "checkbox",
                          checked: C.has(g.uniqueKey),
                          onChange: () => le(g.uniqueKey),
                          onClick: (k) => k.stopPropagation(),
                          className:
                            "h-5 w-5 text-blue-600 focus:ring-2 focus:ring-blue-500 border-gray-300 rounded mt-1 flex-shrink-0",
                        }),
                        e.jsxs("div", {
                          className: "flex-1 min-w-0",
                          children: [
                            e.jsxs("div", {
                              className:
                                "flex items-start justify-between mb-2",
                              children: [
                                e.jsxs("div", {
                                  className: "min-w-0 flex-1",
                                  children: [
                                    e.jsxs("h4", {
                                      className:
                                        "text-base font-semibold text-gray-900 truncate flex items-center gap-2",
                                      children: [
                                        g.cliente,
                                        u &&
                                          e.jsx(Be, {
                                            className:
                                              "h-4 w-4 text-amber-600 flex-shrink-0",
                                          }),
                                      ],
                                    }),
                                    e.jsxs("p", {
                                      className: "text-sm text-gray-600",
                                      children: [
                                        g.documento,
                                        " • ",
                                        g.collections.length,
                                        " ",
                                        "parcela",
                                        g.collections.length !== 1 ? "s" : "",
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsx("div", {
                                  className: "flex-shrink-0 ml-2",
                                  children: g.collectorName
                                    ? e.jsx("span", {
                                        className:
                                          "inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800",
                                        children: g.collectorName,
                                      })
                                    : e.jsx("span", {
                                        className:
                                          "inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700",
                                        children: "Sem cobrador",
                                      }),
                                }),
                              ],
                            }),
                            (g.cidade || g.bairro) &&
                              e.jsxs("div", {
                                className:
                                  "flex items-center text-sm text-gray-600 mb-3",
                                children: [
                                  e.jsx(Fe, {
                                    className: "h-4 w-4 mr-1 flex-shrink-0",
                                  }),
                                  e.jsx("span", {
                                    className: "truncate",
                                    children:
                                      g.bairro && g.cidade
                                        ? `${g.bairro}, ${g.cidade}`
                                        : g.cidade ||
                                          g.bairro ||
                                          "Localização não informada",
                                  }),
                                ],
                              }),
                            e.jsx("div", {
                              className:
                                "flex items-center justify-between text-sm",
                              children: e.jsxs("div", {
                                className: "flex items-center gap-4",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("span", {
                                        className: "text-gray-600",
                                        children: "Total: ",
                                      }),
                                      e.jsx("span", {
                                        className:
                                          "font-semibold text-blue-600",
                                        children: q(o),
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("span", {
                                        className: "text-gray-600",
                                        children: "Pendente: ",
                                      }),
                                      e.jsx("span", {
                                        className: "font-semibold text-red-600",
                                        children: q(b),
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            }),
                            u &&
                              e.jsx("div", {
                                className:
                                  "mt-3 p-2 bg-amber-50 border border-amber-200 rounded-md",
                                children: e.jsxs("div", {
                                  className: "flex items-center text-amber-700",
                                  children: [
                                    e.jsx(Be, {
                                      className: "h-4 w-4 mr-2 flex-shrink-0",
                                    }),
                                    e.jsx("span", {
                                      className: "text-xs font-medium",
                                      children:
                                        "Cliente sem cobrador atribuído",
                                    }),
                                  ],
                                }),
                              }),
                          ],
                        }),
                      ],
                    }),
                  }),
                },
                g.uniqueKey,
              );
            }),
          ],
        }),
        K.length === 0 &&
          e.jsxs("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
            children: [
              e.jsx(is, { className: "h-12 w-12 text-gray-400 mx-auto mb-4" }),
              e.jsx("h3", {
                className: "text-lg font-medium text-gray-900 mb-2",
                children: "Nenhum cliente encontrado",
              }),
              e.jsx("p", {
                className: "text-gray-600",
                children: d
                  ? "Tente ajustar os filtros de busca."
                  : "Não há clientes cadastrados no sistema.",
              }),
            ],
          }),
        X > 1 &&
          e.jsx("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
            children: e.jsxs("div", {
              className: "flex flex-col gap-4",
              children: [
                e.jsxs("div", {
                  className:
                    "flex flex-col sm:flex-row items-center justify-between gap-3",
                  children: [
                    e.jsxs("div", {
                      className:
                        "text-sm text-gray-600 text-center sm:text-left",
                      children: [
                        "Mostrando ",
                        je,
                        " a ",
                        Se,
                        " de ",
                        K.length,
                        " ",
                        "clientes",
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex items-center gap-2",
                      children: [
                        e.jsx("label", {
                          htmlFor: "itemsPerPage",
                          className: "text-sm text-gray-600 whitespace-nowrap",
                          children: "Mostrar:",
                        }),
                        e.jsxs("select", {
                          id: "itemsPerPage",
                          name: "itemsPerPage",
                          value: we,
                          onChange: (g) => ae(Number(g.target.value)),
                          className:
                            "px-3 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 min-w-0",
                          children: [
                            e.jsx("option", { value: 10, children: "10" }),
                            e.jsx("option", { value: 25, children: "25" }),
                            e.jsx("option", { value: 50, children: "50" }),
                            e.jsx("option", { value: 100, children: "100" }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "flex items-center justify-center gap-1 overflow-x-auto",
                  children: [
                    e.jsxs("button", {
                      onClick: () => fe(1),
                      disabled: pe === 1,
                      className:
                        "px-2 sm:px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed whitespace-nowrap",
                      children: [
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Primeira",
                        }),
                        e.jsx("span", {
                          className: "sm:hidden",
                          children: "1",
                        }),
                      ],
                    }),
                    e.jsx("button", {
                      onClick: () => fe(Math.max(1, pe - 1)),
                      disabled: pe === 1,
                      className:
                        "px-2 sm:px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",
                      children: e.jsx(ws, { className: "h-4 w-4" }),
                    }),
                    e.jsx("div", {
                      className: "flex items-center gap-1",
                      children: Array.from(
                        {
                          length: Math.min(X, window.innerWidth < 640 ? 3 : 5),
                        },
                        (g, u) => {
                          let o;
                          const b = window.innerWidth < 640 ? 3 : 5;
                          return (
                            X <= b || pe <= Math.ceil(b / 2)
                              ? (o = u + 1)
                              : pe >= X - Math.floor(b / 2)
                                ? (o = X - b + 1 + u)
                                : (o = pe - Math.floor(b / 2) + u),
                            e.jsx(
                              "button",
                              {
                                onClick: () => fe(o),
                                className: `px-2 sm:px-3 py-2 text-sm font-medium rounded-lg min-w-[40px] ${pe === o ? "bg-blue-600 text-white" : "text-gray-700 bg-white border border-gray-300 hover:bg-gray-50"}`,
                                children: o,
                              },
                              o,
                            )
                          );
                        },
                      ),
                    }),
                    e.jsx("button", {
                      onClick: () => fe(Math.min(X, pe + 1)),
                      disabled: pe === X,
                      className:
                        "px-2 sm:px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",
                      children: e.jsx(js, { className: "h-4 w-4" }),
                    }),
                    e.jsxs("button", {
                      onClick: () => fe(X),
                      disabled: pe === X,
                      className:
                        "px-2 sm:px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed whitespace-nowrap",
                      children: [
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Última",
                        }),
                        e.jsx("span", { className: "sm:hidden", children: X }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        e.jsx(gt, {
          isOpen: J,
          onClose: () => Z(!1),
          title: "Confirmar Atribuição",
          size: "md",
          children: e.jsxs("div", {
            className: "space-y-4",
            children: [
              e.jsx("div", {
                className: "flex items-center justify-center",
                children: e.jsx("div", {
                  className:
                    "w-12 h-12 bg-green-100 rounded-full flex items-center justify-center",
                  children: e.jsx(dt, { className: "h-6 w-6 text-green-600" }),
                }),
              }),
              e.jsxs("div", {
                className: "text-center",
                children: [
                  e.jsxs("p", {
                    className: "text-gray-700",
                    children: [
                      "Você está prestes a atribuir",
                      " ",
                      e.jsxs("span", {
                        className: "font-semibold",
                        children: [C.size, " cliente", C.size !== 1 ? "s" : ""],
                      }),
                      " ",
                      "ao cobrador:",
                    ],
                  }),
                  e.jsx("p", {
                    className: "text-lg font-semibold text-gray-900 mt-2",
                    children:
                      (te = oe.find((g) => g.id === O)) == null
                        ? void 0
                        : te.name,
                  }),
                ],
              }),
              C.size > de &&
                e.jsx("div", {
                  className:
                    "p-3 bg-amber-50 border border-amber-200 rounded-lg",
                  children: e.jsxs("div", {
                    className: "flex items-center text-amber-700",
                    children: [
                      e.jsx(Be, { className: "h-4 w-4 mr-2 flex-shrink-0" }),
                      e.jsxs("span", {
                        className: "text-sm",
                        children: [
                          "A operação será processada em",
                          " ",
                          Math.ceil(C.size / de),
                          " lotes de",
                          " ",
                          de,
                          " clientes",
                        ],
                      }),
                    ],
                  }),
                }),
              e.jsxs("div", {
                className: "flex gap-3 mt-6",
                children: [
                  e.jsx("button", {
                    onClick: () => Z(!1),
                    className:
                      "flex-1 px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors font-medium",
                    children: "Cancelar",
                  }),
                  e.jsx("button", {
                    onClick: M,
                    disabled: U,
                    className:
                      "flex-1 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center",
                    children: U
                      ? e.jsx("div", {
                          className:
                            "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full",
                        })
                      : e.jsxs(e.Fragment, {
                          children: [
                            e.jsx(dt, { className: "h-4 w-4 mr-2" }),
                            "Confirmar Atribuição",
                          ],
                        }),
                  }),
                ],
              }),
            ],
          }),
        }),
        e.jsx(gt, {
          isOpen: he,
          onClose: () => xe(!1),
          title: "Confirmar Remoção",
          size: "md",
          children: e.jsxs("div", {
            className: "space-y-4",
            children: [
              e.jsx("div", {
                className: "flex items-center justify-center",
                children: e.jsx("div", {
                  className:
                    "w-12 h-12 bg-red-100 rounded-full flex items-center justify-center",
                  children: e.jsx(mt, { className: "h-6 w-6 text-red-600" }),
                }),
              }),
              e.jsxs("div", {
                className: "text-center space-y-3",
                children: [
                  e.jsxs("p", {
                    className: "text-gray-700",
                    children: [
                      "Confirma a remoção de cobradores de",
                      " ",
                      e.jsxs("span", {
                        className: "font-semibold",
                        children: [
                          R.totalClients,
                          " cliente",
                          R.totalClients !== 1 ? "s" : "",
                        ],
                      }),
                      "?",
                    ],
                  }),
                  e.jsxs("div", {
                    className: "space-y-1 text-sm text-gray-600",
                    children: [
                      e.jsxs("p", {
                        children: [
                          e.jsx("span", {
                            className: "font-medium text-green-600",
                            children: R.clientsWithCollectors,
                          }),
                          " ",
                          "cliente",
                          R.clientsWithCollectors !== 1 ? "s têm" : " tem",
                          " ",
                          "cobradores atribuídos",
                        ],
                      }),
                      e.jsxs("p", {
                        children: [
                          e.jsx("span", {
                            className: "font-medium text-gray-500",
                            children:
                              (R.totalClients || 0) -
                              (R.clientsWithCollectors || 0),
                          }),
                          " ",
                          "cliente",
                          (R.totalClients || 0) -
                            (R.clientsWithCollectors || 0) !==
                          1
                            ? "s"
                            : "",
                          " ",
                          "já não",
                          " ",
                          (R.totalClients || 0) -
                            (R.clientsWithCollectors || 0) !==
                          1
                            ? "possuem"
                            : "possui",
                          " ",
                          "cobrador",
                        ],
                      }),
                    ],
                  }),
                  e.jsx("div", {
                    className:
                      "p-3 bg-red-50 border border-red-200 rounded-lg mt-4",
                    children: e.jsx("p", {
                      className: "text-sm text-red-700 font-medium",
                      children: "Esta ação não pode ser desfeita",
                    }),
                  }),
                ],
              }),
              (R.totalClients || 0) > de &&
                e.jsx("div", {
                  className:
                    "p-3 bg-amber-50 border border-amber-200 rounded-lg",
                  children: e.jsxs("div", {
                    className: "flex items-center text-amber-700",
                    children: [
                      e.jsx(Be, { className: "h-4 w-4 mr-2 flex-shrink-0" }),
                      e.jsxs("span", {
                        className: "text-sm",
                        children: [
                          "A operação será processada em",
                          " ",
                          Math.ceil((R.totalClients || 0) / de),
                          " ",
                          "lotes de ",
                          de,
                          " clientes",
                        ],
                      }),
                    ],
                  }),
                }),
              e.jsxs("div", {
                className: "flex gap-3 mt-6",
                children: [
                  e.jsx("button", {
                    onClick: () => xe(!1),
                    className:
                      "flex-1 px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors font-medium",
                    children: "Cancelar",
                  }),
                  e.jsx("button", {
                    onClick: n,
                    disabled: U,
                    className:
                      "flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center",
                    children: U
                      ? e.jsx("div", {
                          className:
                            "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full",
                        })
                      : e.jsxs(e.Fragment, {
                          children: [
                            e.jsx(mt, { className: "h-4 w-4 mr-2" }),
                            "Confirmar Remoção",
                          ],
                        }),
                  }),
                ],
              }),
            ],
          }),
        }),
      ],
    });
  }),
  Za = ({ onClose: s }) => {
    const {
        scheduledVisits: t,
        users: x,
        getPendingCancellationRequests: h,
        approveVisitCancellation: i,
        rejectVisitCancellation: D,
      } = Je(),
      { user: E } = ts(),
      [O, F] = r.useState("visits"),
      [C, V] = r.useState("all"),
      [U, A] = r.useState("all"),
      [Q, ee] = r.useState(""),
      [Y, G] = r.useState(""),
      [L, W] = r.useState(""),
      [T, p] = r.useState(new Set());
    r.useState(!1);
    const [I, v] = r.useState("all"),
      [j, z] = r.useState([]),
      [N, H] = r.useState(null),
      [w, y] = r.useState(!1),
      [S, _] = r.useState(null),
      [J, Z] = r.useState(""),
      [he, xe] = r.useState(!1);
    if (
      (r.useEffect(() => {
        const le = h();
        z(le);
      }, [h]),
      !t || !x)
    )
      return e.jsx("div", {
        className: "flex items-center justify-center py-12",
        children: e.jsx("div", {
          className: "text-gray-600",
          children: "Carregando dados das visitas...",
        }),
      });
    const R = x.filter((le) => le.type === "collector"),
      ge = (le) => {
        const c = x.find((M) => M.id === le);
        return (c == null ? void 0 : c.name) || "Cobrador não encontrado";
      },
      pe = (le) => {
        if (le.status !== "agendada") return !1;
        try {
          const c = new Date();
          c.setHours(0, 0, 0, 0);
          const [M, l, n] = le.scheduledDate.split("-"),
            d = new Date(parseInt(M), parseInt(l) - 1, parseInt(n));
          return (d.setHours(0, 0, 0, 0), d < c);
        } catch {
          return !1;
        }
      },
      fe = (le) => {
        try {
          const c = new Date();
          c.setHours(0, 0, 0, 0);
          const [M, l, n] = le.split("-"),
            d = new Date(parseInt(M), parseInt(l) - 1, parseInt(n));
          d.setHours(0, 0, 0, 0);
          const a = c.getTime() - d.getTime(),
            f = Math.floor(a / (1e3 * 60 * 60 * 24));
          return Math.max(0, f);
        } catch {
          return 0;
        }
      },
      we = (le, c) => {
        try {
          const [M, l, n] = le.split("-");
          return `${new Date(parseInt(M), parseInt(l) - 1, parseInt(n)).toLocaleDateString("pt-BR")} às ${c || "00:00"}`;
        } catch {
          return `${le} às ${c || "00:00"}`;
        }
      },
      re = (le) => {
        try {
          const [c, M, l] = le.split("-");
          return new Date(
            parseInt(c),
            parseInt(M) - 1,
            parseInt(l),
          ).toLocaleDateString("pt-BR");
        } catch {
          return le;
        }
      },
      de = (le) => {
        if (!Q && !Y) return !0;
        try {
          const [c, M, l] = le.split("-"),
            n = new Date(parseInt(c), parseInt(M) - 1, parseInt(l));
          n.setHours(0, 0, 0, 0);
          let d = null;
          if (Q) {
            const [f, $, te] = Q.split("-");
            ((d = new Date(parseInt(f), parseInt($) - 1, parseInt(te))),
              d.setHours(0, 0, 0, 0));
          }
          let a = null;
          if (Y) {
            const [f, $, te] = Y.split("-");
            ((a = new Date(parseInt(f), parseInt($) - 1, parseInt(te))),
              a.setHours(23, 59, 59, 999));
          }
          return !((d && n < d) || (a && n > a));
        } catch {
          return !0;
        }
      },
      oe = () => {
        const le = t.filter((M) => {
            var l, n, d;
            if (
              (C !== "all" && M.collectorId !== C) ||
              (U !== "all" && M.status !== U) ||
              !de(M.scheduledDate)
            )
              return !1;
            if (I !== "all") {
              const a = pe(M);
              if ((I === "overdue" && !a) || (I === "not_overdue" && a))
                return !1;
            }
            if (L.trim()) {
              const a = L.toLowerCase().trim(),
                f =
                  ((l = M.clientName) == null ? void 0 : l.toLowerCase()) || "",
                $ =
                  ((n = M.clientDocument) == null ? void 0 : n.toLowerCase()) ||
                  "",
                te =
                  ((d = M.clientAddress) == null ? void 0 : d.toLowerCase()) ||
                  "";
              if (!f.includes(a) && !$.includes(a) && !te.includes(a))
                return !1;
            }
            return !0;
          }),
          c = {};
        return (
          le.forEach((M) => {
            (c[M.collectorId] || (c[M.collectorId] = []),
              c[M.collectorId].push(M));
          }),
          Object.keys(c).forEach((M) => {
            c[M].sort((l, n) => {
              const [d, a, f] = l.scheduledDate.split("-"),
                $ = new Date(parseInt(d), parseInt(a) - 1, parseInt(f)),
                [te, g, u] = n.scheduledDate.split("-");
              return (
                new Date(parseInt(te), parseInt(g) - 1, parseInt(u)).getTime() -
                $.getTime()
              );
            });
          }),
          c
        );
      },
      P = () => {
        (V("all"), A("all"), ee(""), G(""), W(""), v("all"));
      },
      se = () => {
        let le = 0;
        return (
          C !== "all" && le++,
          U !== "all" && le++,
          Q && le++,
          Y && le++,
          L.trim() && le++,
          I !== "all" && le++,
          le
        );
      },
      Ae = (le) => {
        const c = new Set(T);
        (c.has(le) ? c.delete(le) : c.add(le), p(c));
      },
      Ve = (le) => {
        const c = {
            agendada: {
              bg: "bg-blue-100",
              text: "text-blue-800",
              label: "Agendada",
            },
            realizada: {
              bg: "bg-green-100",
              text: "text-green-800",
              label: "Realizada",
            },
            cancelada: {
              bg: "bg-gray-100",
              text: "text-gray-800",
              label: "Cancelada",
            },
            nao_encontrado: {
              bg: "bg-yellow-100",
              text: "text-yellow-800",
              label: "Não Encontrado",
            },
            cancelamento_solicitado: {
              bg: "bg-red-100",
              text: "text-red-800",
              label: "Cancelamento Solicitado",
            },
          },
          M = c[le] || c.agendada;
        return e.jsx("span", {
          className: `px-2 py-1 rounded-full text-xs font-semibold ${M.bg} ${M.text}`,
          children: M.label,
        });
      },
      ne = (le, c) => {
        (H(le), _(c), y(!0), Z(""));
      },
      Re = () => {
        (H(null), _(null), y(!1), Z(""));
      },
      K = async () => {
        if (!(!N || !E || !S)) {
          if (S === "reject" && !J.trim()) {
            alert("Por favor, informe o motivo da rejeição");
            return;
          }
          try {
            (xe(!0),
              S === "approve"
                ? (await i(N.id, E.id), B("Cancelamento aprovado com sucesso"))
                : (await D(N.id, E.id, J.trim()),
                  B("Cancelamento rejeitado com sucesso")));
            const le = h();
            (z(le), Re());
          } catch (le) {
            (console.error("Erro ao processar solicitação:", le),
              alert("Erro ao processar solicitação. Tente novamente."));
          } finally {
            xe(!1);
          }
        }
      },
      B = (le) => {
        const c = document.createElement("div");
        ((c.className =
          "fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
          (c.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
      </svg>
      ${le}
    `),
          document.body.appendChild(c),
          setTimeout(() => {
            document.body.contains(c) && document.body.removeChild(c);
          }, 5e3));
      },
      [X, je] = r.useState(!1),
      Se = () => {
        const le = oe(),
          c = se();
        return e.jsxs("div", {
          className: "space-y-4",
          children: [
            e.jsx("div", {
              className: "bg-white rounded-xl shadow-sm border border-gray-200",
              children: e.jsxs("div", {
                className: "p-4",
                children: [
                  e.jsxs("div", {
                    className: "flex items-center justify-between mb-4",
                    children: [
                      e.jsx("h3", {
                        className: "text-lg font-semibold text-gray-900",
                        children: "Filtros",
                      }),
                      e.jsxs("div", {
                        className: "flex items-center gap-2",
                        children: [
                          e.jsxs("button", {
                            onClick: () => je(!X),
                            className:
                              "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors relative",
                            children: [
                              e.jsx(fs, { className: "h-5 w-5" }),
                              c > 0 &&
                                e.jsx("span", {
                                  className:
                                    "absolute -top-1 -right-1 h-5 w-5 bg-blue-600 text-white text-xs rounded-full flex items-center justify-center font-medium",
                                  children: c,
                                }),
                            ],
                          }),
                          c > 0 &&
                            e.jsx("button", {
                              onClick: P,
                              className:
                                "px-3 py-1.5 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors text-sm font-medium",
                              children: "Limpar",
                            }),
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    children: [
                      e.jsx("label", {
                        className:
                          "block text-sm font-medium text-gray-700 mb-2",
                        children: "Buscar Cliente",
                      }),
                      e.jsxs("div", {
                        className: "relative",
                        children: [
                          e.jsx(Vs, {
                            className:
                              "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                          }),
                          e.jsx("input", {
                            type: "text",
                            value: L,
                            onChange: (M) => W(M.target.value),
                            placeholder: "Nome, documento ou endereço...",
                            className:
                              "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          }),
                        ],
                      }),
                    ],
                  }),
                  X &&
                    e.jsx("div", {
                      className:
                        "mt-4 p-4 bg-gray-50 rounded-lg border border-gray-200 animate-in slide-in-from-top-2",
                      children: e.jsxs("div", {
                        className:
                          "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4",
                        children: [
                          e.jsxs("div", {
                            children: [
                              e.jsx("label", {
                                className:
                                  "block text-sm font-medium text-gray-700 mb-2",
                                children: "Cobrador",
                              }),
                              e.jsxs("select", {
                                value: C,
                                onChange: (M) => V(M.target.value),
                                className:
                                  "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                                children: [
                                  e.jsx("option", {
                                    value: "all",
                                    children: "Todos os cobradores",
                                  }),
                                  R.map((M) =>
                                    e.jsx(
                                      "option",
                                      { value: M.id, children: M.name },
                                      M.id,
                                    ),
                                  ),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            children: [
                              e.jsx("label", {
                                className:
                                  "block text-sm font-medium text-gray-700 mb-2",
                                children: "Status",
                              }),
                              e.jsxs("select", {
                                value: U,
                                onChange: (M) => A(M.target.value),
                                className:
                                  "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                                children: [
                                  e.jsx("option", {
                                    value: "all",
                                    children: "Todos os status",
                                  }),
                                  e.jsx("option", {
                                    value: "agendada",
                                    children: "Agendada",
                                  }),
                                  e.jsx("option", {
                                    value: "realizada",
                                    children: "Realizada",
                                  }),
                                  e.jsx("option", {
                                    value: "cancelada",
                                    children: "Cancelada",
                                  }),
                                  e.jsx("option", {
                                    value: "nao_encontrado",
                                    children: "Não Encontrado",
                                  }),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            children: [
                              e.jsx("label", {
                                className:
                                  "block text-sm font-medium text-gray-700 mb-2",
                                children: "Data Inicial",
                              }),
                              e.jsx("input", {
                                type: "date",
                                value: Q,
                                onChange: (M) => ee(M.target.value),
                                className:
                                  "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            children: [
                              e.jsx("label", {
                                className:
                                  "block text-sm font-medium text-gray-700 mb-2",
                                children: "Data Final",
                              }),
                              e.jsx("input", {
                                type: "date",
                                value: Y,
                                onChange: (M) => G(M.target.value),
                                className:
                                  "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500",
                              }),
                            ],
                          }),
                        ],
                      }),
                    }),
                ],
              }),
            }),
            Object.keys(le).length === 0
              ? e.jsxs("div", {
                  className:
                    "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
                  children: [
                    e.jsx(Me, {
                      className: "h-12 w-12 text-gray-400 mx-auto mb-4",
                    }),
                    e.jsx("h3", {
                      className: "text-lg font-medium text-gray-900 mb-2",
                      children: "Nenhuma visita encontrada",
                    }),
                    e.jsx("p", {
                      className: "text-gray-600",
                      children: "Ajuste os filtros para ver mais resultados",
                    }),
                  ],
                })
              : e.jsx("div", {
                  className: "space-y-4",
                  children: Object.entries(le).map(([M, l]) => {
                    const n = ge(M),
                      d = T.has(M);
                    return e.jsxs(
                      "div",
                      {
                        className:
                          "bg-white rounded-xl shadow-sm border border-gray-200",
                        children: [
                          e.jsx("div", {
                            className:
                              "p-4 lg:p-6 cursor-pointer hover:bg-gray-50 transition-colors",
                            onClick: () => Ae(M),
                            children: e.jsxs("div", {
                              className: "flex items-center justify-between",
                              children: [
                                e.jsxs("div", {
                                  className: "flex items-center flex-1 min-w-0",
                                  children: [
                                    e.jsx("div", {
                                      className:
                                        "h-10 w-10 lg:h-12 lg:w-12 rounded-full flex items-center justify-center mr-3 lg:mr-4 bg-blue-100 flex-shrink-0",
                                      children: e.jsx(Qe, {
                                        className:
                                          "h-5 w-5 lg:h-6 lg:w-6 text-blue-600",
                                      }),
                                    }),
                                    e.jsxs("div", {
                                      className: "min-w-0 flex-1",
                                      children: [
                                        e.jsx("h3", {
                                          className:
                                            "text-base lg:text-lg font-semibold text-gray-900 truncate",
                                          children: n,
                                        }),
                                        e.jsxs("p", {
                                          className: "text-sm text-gray-600",
                                          children: [
                                            l.length,
                                            " ",
                                            l.length === 1
                                              ? "visita"
                                              : "visitas",
                                          ],
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  className:
                                    "flex items-center gap-2 lg:gap-3 flex-shrink-0",
                                  children: [
                                    e.jsxs("div", {
                                      className: "text-right hidden sm:block",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "text-xl lg:text-2xl font-bold text-gray-900",
                                          children: l.length,
                                        }),
                                        e.jsx("div", {
                                          className: "text-sm text-gray-600",
                                          children: "Visitas",
                                        }),
                                      ],
                                    }),
                                    d
                                      ? e.jsx(Ds, {
                                          className: "h-5 w-5 text-gray-600",
                                        })
                                      : e.jsx(Ns, {
                                          className: "h-5 w-5 text-gray-600",
                                        }),
                                  ],
                                }),
                              ],
                            }),
                          }),
                          d &&
                            e.jsx("div", {
                              className: "p-4 lg:p-6 pt-0 space-y-4",
                              children: l.map((a) => {
                                const f = pe(a);
                                return e.jsx(
                                  "div",
                                  {
                                    className: `p-3 lg:p-4 rounded-lg border transition-all duration-200 hover:shadow-md ${f ? "border-red-300 bg-red-50" : "border-gray-200 bg-gray-50"}`,
                                    children: e.jsxs("div", {
                                      className:
                                        "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                                      children: [
                                        e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex flex-col sm:flex-row sm:items-center sm:space-x-3 mb-3",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 mb-1 sm:mb-0",
                                                  children: a.clientName,
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "flex flex-wrap gap-2",
                                                  children: [
                                                    Ve(a.status),
                                                    pe(a) &&
                                                      e.jsxs("span", {
                                                        className:
                                                          "px-2 py-1 rounded-full text-xs font-semibold bg-red-100 text-red-800 flex items-center",
                                                        children: [
                                                          e.jsx(Ge, {
                                                            className:
                                                              "h-3 w-3 mr-1",
                                                          }),
                                                          "Atrasada",
                                                          " ",
                                                          fe(a.scheduledDate),
                                                          " ",
                                                          fe(
                                                            a.scheduledDate,
                                                          ) === 1
                                                            ? "dia"
                                                            : "dias",
                                                        ],
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600 mb-3",
                                              children: [
                                                e.jsxs("div", {
                                                  className: "space-y-2",
                                                  children: [
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center",
                                                      children: [
                                                        e.jsx(Me, {
                                                          className:
                                                            "h-4 w-4 mr-2",
                                                        }),
                                                        we(
                                                          a.scheduledDate,
                                                          a.scheduledTime,
                                                        ),
                                                      ],
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center",
                                                      children: [
                                                        e.jsx(Fe, {
                                                          className:
                                                            "h-4 w-4 mr-2",
                                                        }),
                                                        a.clientAddress,
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className: "space-y-2",
                                                  children: [
                                                    a.totalPendingValue &&
                                                      e.jsxs("div", {
                                                        className:
                                                          "flex items-center",
                                                        children: [
                                                          e.jsx(Oe, {
                                                            className:
                                                              "h-4 w-4 mr-2",
                                                          }),
                                                          "Pendente:",
                                                          " ",
                                                          q(
                                                            a.totalPendingValue,
                                                          ),
                                                        ],
                                                      }),
                                                    a.overdueCount &&
                                                      e.jsxs("div", {
                                                        className:
                                                          "flex items-center",
                                                        children: [
                                                          e.jsx(Ge, {
                                                            className:
                                                              "h-4 w-4 mr-2",
                                                          }),
                                                          a.overdueCount,
                                                          " ",
                                                          a.overdueCount === 1
                                                            ? "parcela vencida"
                                                            : "parcelas vencidas",
                                                        ],
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            a.notes &&
                                              e.jsxs("div", {
                                                className:
                                                  "text-sm text-gray-500 italic mb-3",
                                                children: [
                                                  'Observações: "',
                                                  a.notes,
                                                  '"',
                                                ],
                                              }),
                                            a.cancellationRequestReason &&
                                              e.jsx("div", {
                                                className:
                                                  "bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-3",
                                                children: e.jsxs("div", {
                                                  className: "flex items-start",
                                                  children: [
                                                    e.jsx(xt, {
                                                      className:
                                                        "h-4 w-4 text-yellow-600 mr-2 flex-shrink-0 mt-0.5",
                                                    }),
                                                    e.jsxs("div", {
                                                      children: [
                                                        e.jsx("div", {
                                                          className:
                                                            "text-sm font-medium text-yellow-800 mb-1",
                                                          children:
                                                            "Motivo do cancelamento solicitado:",
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "text-sm text-yellow-700 italic",
                                                          children: [
                                                            '"',
                                                            a.cancellationRequestReason,
                                                            '"',
                                                          ],
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                              }),
                                          ],
                                        }),
                                        a.status ===
                                          "cancelamento_solicitado" &&
                                          e.jsxs("div", {
                                            className:
                                              "flex flex-col sm:flex-row gap-2 mt-3 lg:ml-4",
                                            children: [
                                              e.jsxs("button", {
                                                onClick: () => ne(a, "approve"),
                                                className:
                                                  "flex-1 sm:flex-none px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium flex items-center justify-center text-sm",
                                                children: [
                                                  e.jsx(Le, {
                                                    className: "h-4 w-4 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Aprovar",
                                                  }),
                                                  e.jsx("span", {
                                                    className: "sm:hidden",
                                                    children: "✓",
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("button", {
                                                onClick: () => ne(a, "reject"),
                                                className:
                                                  "flex-1 sm:flex-none px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium flex items-center justify-center text-sm",
                                                children: [
                                                  e.jsx(Es, {
                                                    className: "h-4 w-4 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Rejeitar",
                                                  }),
                                                  e.jsx("span", {
                                                    className: "sm:hidden",
                                                    children: "✕",
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                      ],
                                    }),
                                  },
                                  a.id,
                                );
                              }),
                            }),
                        ],
                      },
                      M,
                    );
                  }),
                }),
          ],
        });
      },
      ae = () =>
        e.jsx("div", {
          className: "space-y-4",
          children:
            j.length === 0
              ? e.jsxs("div", {
                  className:
                    "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
                  children: [
                    e.jsx(Le, {
                      className: "h-12 w-12 text-green-400 mx-auto mb-4",
                    }),
                    e.jsx("h3", {
                      className: "text-lg font-medium text-gray-900 mb-2",
                      children: "Nenhuma solicitação pendente",
                    }),
                    e.jsx("p", {
                      className: "text-gray-600",
                      children:
                        "Todas as solicitações de cancelamento foram processadas",
                    }),
                  ],
                })
              : e.jsxs("div", {
                  className: "space-y-4",
                  children: [
                    e.jsx("div", {
                      className: "flex items-center justify-between mb-4",
                      children: e.jsxs("h3", {
                        className: "text-lg font-semibold text-gray-900",
                        children: ["Solicitações Pendentes (", j.length, ")"],
                      }),
                    }),
                    j.map((le) =>
                      e.jsx(
                        "div",
                        {
                          className:
                            "bg-white rounded-xl shadow-sm border border-red-200 p-4 lg:p-6",
                          children: e.jsxs("div", {
                            className:
                              "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                            children: [
                              e.jsxs("div", {
                                className: "flex-1 min-w-0",
                                children: [
                                  e.jsxs("div", {
                                    className:
                                      "flex flex-col sm:flex-row sm:items-center sm:space-x-3 mb-3",
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "font-semibold text-gray-900 mb-1 sm:mb-0",
                                        children: le.clientName,
                                      }),
                                      e.jsxs("div", {
                                        className: "flex flex-wrap gap-2",
                                        children: [
                                          e.jsx("span", {
                                            className:
                                              "px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800 w-fit",
                                            children: "Cancelamento Solicitado",
                                          }),
                                          pe(le) &&
                                            e.jsxs("span", {
                                              className:
                                                "px-2 py-1 rounded-full text-xs font-semibold bg-red-100 text-red-800 flex items-center",
                                              children: [
                                                e.jsx(Ge, {
                                                  className: "h-3 w-3 mr-1",
                                                }),
                                                "Atrasada ",
                                                fe(le.scheduledDate),
                                                " ",
                                                fe(le.scheduledDate) === 1
                                                  ? "dia"
                                                  : "dias",
                                              ],
                                            }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    className:
                                      "grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600 mb-3",
                                    children: [
                                      e.jsxs("div", {
                                        className: "space-y-2",
                                        children: [
                                          e.jsxs("div", {
                                            className: "flex items-center",
                                            children: [
                                              e.jsx(Me, {
                                                className: "h-4 w-4 mr-2",
                                              }),
                                              we(
                                                le.scheduledDate,
                                                le.scheduledTime,
                                              ),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className: "flex items-center",
                                            children: [
                                              e.jsx(Qe, {
                                                className: "h-4 w-4 mr-2",
                                              }),
                                              "Cobrador: ",
                                              ge(le.collectorId),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className: "flex items-center",
                                            children: [
                                              e.jsx(Fe, {
                                                className: "h-4 w-4 mr-2",
                                              }),
                                              le.clientAddress,
                                            ],
                                          }),
                                        ],
                                      }),
                                      e.jsxs("div", {
                                        className: "space-y-2",
                                        children: [
                                          le.totalPendingValue &&
                                            e.jsxs("div", {
                                              className: "flex items-center",
                                              children: [
                                                e.jsx(Oe, {
                                                  className: "h-4 w-4 mr-2",
                                                }),
                                                "Pendente: ",
                                                q(le.totalPendingValue),
                                              ],
                                            }),
                                          le.cancellationRequestDate &&
                                            e.jsxs("div", {
                                              className: "flex items-center",
                                              children: [
                                                e.jsx(Ie, {
                                                  className: "h-4 w-4 mr-2",
                                                }),
                                                "Solicitado em:",
                                                " ",
                                                re(le.cancellationRequestDate),
                                              ],
                                            }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  le.cancellationRequestReason &&
                                    e.jsx("div", {
                                      className:
                                        "bg-white border border-gray-200 rounded-lg p-3 mb-3",
                                      children: e.jsxs("div", {
                                        className: "flex items-start",
                                        children: [
                                          e.jsx(xt, {
                                            className:
                                              "h-4 w-4 text-gray-500 mr-2 flex-shrink-0 mt-0.5",
                                          }),
                                          e.jsxs("div", {
                                            children: [
                                              e.jsx("div", {
                                                className:
                                                  "text-sm font-medium text-gray-700 mb-1",
                                                children:
                                                  "Motivo do cancelamento:",
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "text-sm text-gray-600 italic",
                                                children: [
                                                  '"',
                                                  le.cancellationRequestReason,
                                                  '"',
                                                ],
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                    }),
                                  le.notes &&
                                    e.jsxs("div", {
                                      className:
                                        "text-sm text-gray-500 italic mb-3",
                                      children: [
                                        'Observações da visita: "',
                                        le.notes,
                                        '"',
                                      ],
                                    }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "flex flex-col sm:flex-row gap-2 mt-3 lg:ml-4",
                                children: [
                                  e.jsxs("button", {
                                    onClick: () => ne(le, "approve"),
                                    className:
                                      "flex-1 sm:flex-none px-3 lg:px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium flex items-center justify-center text-sm",
                                    children: [
                                      e.jsx(Le, { className: "h-4 w-4 mr-1" }),
                                      e.jsx("span", {
                                        className: "hidden sm:inline",
                                        children: "Aprovar",
                                      }),
                                      e.jsx("span", {
                                        className: "sm:hidden",
                                        children: "✓ Aprovar",
                                      }),
                                    ],
                                  }),
                                  e.jsxs("button", {
                                    onClick: () => ne(le, "reject"),
                                    className:
                                      "flex-1 sm:flex-none px-3 lg:px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium flex items-center justify-center text-sm",
                                    children: [
                                      e.jsx(Es, { className: "h-4 w-4 mr-1" }),
                                      e.jsx("span", {
                                        className: "hidden sm:inline",
                                        children: "Rejeitar",
                                      }),
                                      e.jsx("span", {
                                        className: "sm:hidden",
                                        children: "✕ Rejeitar",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        },
                        le.id,
                      ),
                    ),
                  ],
                }),
        }),
      ke = () => {
        const le = () => {
            const n = new Date();
            return (
              n.setDate(n.getDate() - 30),
              n.setHours(0, 0, 0, 0),
              t.filter((d) => {
                if (d.status === "agendada") return !1;
                try {
                  return (
                    (d.updatedAt
                      ? new Date(d.updatedAt)
                      : new Date(d.createdAt)) >= n
                  );
                } catch {
                  return !1;
                }
              })
            );
          },
          M = (() => {
            const n = le(),
              d = {};
            return (
              n.forEach((a) => {
                (d[a.collectorId] || (d[a.collectorId] = []),
                  d[a.collectorId].push(a));
              }),
              Object.keys(d).forEach((a) => {
                d[a].sort((f, $) => {
                  const te = new Date(f.updatedAt || f.createdAt);
                  return (
                    new Date($.updatedAt || $.createdAt).getTime() -
                    te.getTime()
                  );
                });
              }),
              d
            );
          })(),
          l = Object.values(M).reduce((n, d) => n + d.length, 0);
        return e.jsx("div", {
          className: "space-y-4",
          children:
            l === 0
              ? e.jsxs("div", {
                  className:
                    "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
                  children: [
                    e.jsx(Me, {
                      className: "h-12 w-12 text-gray-400 mx-auto mb-4",
                    }),
                    e.jsx("h3", {
                      className: "text-lg font-medium text-gray-900 mb-2",
                      children: "Nenhuma visita finalizada",
                    }),
                    e.jsx("p", {
                      className: "text-gray-600",
                      children:
                        "O histórico dos últimos 30 dias aparecerá aqui conforme as visitas forem finalizadas",
                    }),
                  ],
                })
              : e.jsxs("div", {
                  className: "space-y-4",
                  children: [
                    e.jsx("div", {
                      className: "flex items-center justify-between mb-4",
                      children: e.jsxs("h3", {
                        className: "text-lg font-semibold text-gray-900",
                        children: [
                          "Histórico dos últimos 30 dias (",
                          l,
                          " ",
                          l === 1 ? "visita" : "visitas",
                          ")",
                        ],
                      }),
                    }),
                    Object.entries(M).map(([n, d]) => {
                      const a = ge(n),
                        f = T.has(`history_${n}`);
                      return e.jsxs(
                        "div",
                        {
                          className:
                            "bg-white rounded-xl shadow-sm border border-gray-200",
                          children: [
                            e.jsx("div", {
                              className:
                                "p-6 cursor-pointer hover:bg-gray-50 transition-colors",
                              onClick: () => {
                                const $ = new Set(T),
                                  te = `history_${n}`;
                                ($.has(te) ? $.delete(te) : $.add(te), p($));
                              },
                              children: e.jsxs("div", {
                                className: "flex items-center justify-between",
                                children: [
                                  e.jsxs("div", {
                                    className: "flex items-center",
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "h-12 w-12 rounded-full flex items-center justify-center mr-4 bg-gray-100",
                                        children: e.jsx(Qe, {
                                          className: "h-6 w-6 text-gray-600",
                                        }),
                                      }),
                                      e.jsxs("div", {
                                        children: [
                                          e.jsx("h4", {
                                            className:
                                              "text-lg font-semibold text-gray-900",
                                            children: a,
                                          }),
                                          e.jsxs("p", {
                                            className: "text-sm text-gray-600",
                                            children: [
                                              d.length,
                                              " ",
                                              d.length === 1
                                                ? "visita"
                                                : "visitas",
                                              " ",
                                              "finalizadas",
                                            ],
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    className: "text-right",
                                    children: [
                                      e.jsx("div", {
                                        className:
                                          "text-2xl font-bold text-gray-900",
                                        children: d.length,
                                      }),
                                      e.jsx("div", {
                                        className: "text-sm text-gray-600",
                                        children: "Histórico",
                                      }),
                                    ],
                                  }),
                                  f
                                    ? e.jsx(Ds, {
                                        className: "h-5 w-5 text-gray-600 ml-4",
                                      })
                                    : e.jsx(Ns, {
                                        className: "h-5 w-5 text-gray-600 ml-4",
                                      }),
                                ],
                              }),
                            }),
                            f &&
                              e.jsx("div", {
                                className: "p-6 pt-0 space-y-4",
                                children: d.map(($) => {
                                  const te =
                                    $.cancellationApprovedBy ||
                                    $.cancellationRejectedBy;
                                  return e.jsx(
                                    "div",
                                    {
                                      className:
                                        "p-4 rounded-lg border border-gray-200 bg-gray-50 transition-all duration-200 hover:shadow-md",
                                      children: e.jsx("div", {
                                        className:
                                          "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                                        children: e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex flex-col sm:flex-row sm:items-center sm:space-x-3 mb-3",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 mb-1 sm:mb-0",
                                                  children: $.clientName,
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "flex flex-wrap gap-2",
                                                  children: [
                                                    Ve($.status),
                                                    te &&
                                                      $.status ===
                                                        "cancelada" &&
                                                      e.jsx("span", {
                                                        className:
                                                          "px-2 py-1 rounded-full text-xs bg-orange-100 text-orange-800",
                                                        children:
                                                          "Cancelamento Aprovado",
                                                      }),
                                                    te &&
                                                      $.status === "agendada" &&
                                                      $.cancellationRejectedBy &&
                                                      e.jsx("span", {
                                                        className:
                                                          "px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800",
                                                        children:
                                                          "Cancelamento Rejeitado",
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-gray-600 mb-3",
                                              children: [
                                                e.jsxs("div", {
                                                  className: "space-y-2",
                                                  children: [
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center",
                                                      children: [
                                                        e.jsx(Me, {
                                                          className:
                                                            "h-4 w-4 mr-2",
                                                        }),
                                                        "Visita:",
                                                        " ",
                                                        we(
                                                          $.scheduledDate,
                                                          $.scheduledTime,
                                                        ),
                                                      ],
                                                    }),
                                                    e.jsxs("div", {
                                                      className:
                                                        "flex items-center",
                                                      children: [
                                                        e.jsx(Fe, {
                                                          className:
                                                            "h-4 w-4 mr-2",
                                                        }),
                                                        $.clientAddress,
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className: "space-y-2",
                                                  children: [
                                                    $.totalPendingValue &&
                                                      e.jsxs("div", {
                                                        className:
                                                          "flex items-center",
                                                        children: [
                                                          e.jsx(Oe, {
                                                            className:
                                                              "h-4 w-4 mr-2",
                                                          }),
                                                          "Pendente:",
                                                          " ",
                                                          q(
                                                            $.totalPendingValue,
                                                          ),
                                                        ],
                                                      }),
                                                    $.updatedAt &&
                                                      e.jsxs("div", {
                                                        className:
                                                          "flex items-center",
                                                        children: [
                                                          e.jsx(Ie, {
                                                            className:
                                                              "h-4 w-4 mr-2",
                                                          }),
                                                          "Finalizada em:",
                                                          " ",
                                                          re(
                                                            $.updatedAt.split(
                                                              "T",
                                                            )[0],
                                                          ),
                                                        ],
                                                      }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            $.notes &&
                                              e.jsxs("div", {
                                                className:
                                                  "text-sm text-gray-500 italic mb-3",
                                                children: [
                                                  'Observações: "',
                                                  $.notes,
                                                  '"',
                                                ],
                                              }),
                                            $.cancellationRequestReason &&
                                              e.jsx("div", {
                                                className:
                                                  "bg-orange-50 border border-orange-200 rounded-lg p-3 mb-3",
                                                children: e.jsxs("div", {
                                                  className: "flex items-start",
                                                  children: [
                                                    e.jsx(xt, {
                                                      className:
                                                        "h-4 w-4 text-orange-600 mr-2 flex-shrink-0 mt-0.5",
                                                    }),
                                                    e.jsxs("div", {
                                                      children: [
                                                        e.jsx("div", {
                                                          className:
                                                            "text-sm font-medium text-orange-800 mb-1",
                                                          children:
                                                            "Motivo da solicitação de cancelamento:",
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "text-sm text-orange-700 italic",
                                                          children: [
                                                            '"',
                                                            $.cancellationRequestReason,
                                                            '"',
                                                          ],
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                              }),
                                            $.cancellationRejectedBy &&
                                              $.cancellationRejectionReason &&
                                              e.jsx("div", {
                                                className:
                                                  "bg-red-50 border border-red-200 rounded-lg p-3 mb-3",
                                                children: e.jsxs("div", {
                                                  className: "flex items-start",
                                                  children: [
                                                    e.jsx(Es, {
                                                      className:
                                                        "h-4 w-4 text-red-500 mr-2 flex-shrink-0 mt-0.5",
                                                    }),
                                                    e.jsxs("div", {
                                                      children: [
                                                        e.jsx("div", {
                                                          className:
                                                            "text-sm font-medium text-red-700 mb-1",
                                                          children:
                                                            "Motivo da rejeição do cancelamento:",
                                                        }),
                                                        e.jsxs("div", {
                                                          className:
                                                            "text-sm text-red-600 italic",
                                                          children: [
                                                            '"',
                                                            $.cancellationRejectionReason,
                                                            '"',
                                                          ],
                                                        }),
                                                      ],
                                                    }),
                                                  ],
                                                }),
                                              }),
                                          ],
                                        }),
                                      }),
                                    },
                                    $.id,
                                  );
                                }),
                              }),
                          ],
                        },
                        `history_${n}`,
                      );
                    }),
                  ],
                }),
        });
      },
      Te = r.useMemo(() => {
        var le, c, M, l, n;
        try {
          const d = (t == null ? void 0 : t.length) || 0,
            a =
              ((le =
                t == null
                  ? void 0
                  : t.filter((u) => u.status === "agendada")) == null
                ? void 0
                : le.length) || 0,
            f =
              ((c =
                t == null
                  ? void 0
                  : t.filter((u) => u.status === "realizada")) == null
                ? void 0
                : c.length) || 0,
            $ =
              ((M =
                t == null
                  ? void 0
                  : t.filter((u) => u.status === "cancelada")) == null
                ? void 0
                : M.length) || 0,
            te =
              ((l = t == null ? void 0 : t.filter((u) => pe(u))) == null
                ? void 0
                : l.length) || 0,
            g = ((n = h()) == null ? void 0 : n.length) || 0;
          return {
            totalVisits: d,
            agendadas: a,
            realizadas: f,
            canceladas: $,
            atrasadas: te,
            pendingRequests: g,
          };
        } catch (d) {
          return (
            console.error("Error calculating overview stats:", d),
            {
              totalVisits: 0,
              agendadas: 0,
              realizadas: 0,
              canceladas: 0,
              atrasadas: 0,
              pendingRequests: 0,
            }
          );
        }
      }, [t, h]);
    return e.jsxs(e.Fragment, {
      children: [
        e.jsxs("div", {
          className: "space-y-6",
          children: [
            e.jsxs("div", {
              className:
                "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
              children: [
                e.jsxs("div", {
                  className: "flex items-center justify-between mb-4",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("h2", {
                          className:
                            "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                          children: "Acompanhamento de Visitas",
                        }),
                        e.jsx("p", {
                          className:
                            "text-sm text-gray-600 mt-1 hidden sm:block",
                          children: "Gerencie visitas e cancelamentos",
                        }),
                      ],
                    }),
                    s &&
                      e.jsx("button", {
                        onClick: s,
                        className:
                          "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                        title: "Fechar",
                        children: e.jsx(ze, { className: "h-5 w-5" }),
                      }),
                  ],
                }),
                e.jsxs("div", {
                  className: "grid grid-cols-3 sm:flex gap-2",
                  children: [
                    e.jsxs("button", {
                      onClick: () => F("visits"),
                      className: `flex items-center justify-center px-4 py-3 sm:py-2 rounded-lg text-sm font-medium transition-colors ${O === "visits" ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                      title: "Visitas",
                      children: [
                        e.jsx(Me, {
                          className: "h-5 w-5 sm:h-4 sm:w-4 sm:mr-2",
                        }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Visitas",
                        }),
                      ],
                    }),
                    e.jsxs("button", {
                      onClick: () => F("cancellations"),
                      className: `flex items-center justify-center px-4 py-3 sm:py-2 rounded-lg text-sm font-medium transition-colors relative ${O === "cancellations" ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                      title: "Cancelamentos",
                      children: [
                        e.jsx(Ge, {
                          className: "h-5 w-5 sm:h-4 sm:w-4 sm:mr-2",
                        }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Cancelamentos",
                        }),
                        j.length > 0 &&
                          e.jsx("span", {
                            className:
                              "absolute -top-1 -right-1 h-5 w-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center font-medium sm:static sm:ml-2 sm:h-auto sm:w-auto sm:px-2 sm:py-0.5 sm:bg-red-100 sm:text-red-800",
                            children: j.length,
                          }),
                      ],
                    }),
                    e.jsxs("button", {
                      onClick: () => F("history"),
                      className: `flex items-center justify-center px-4 py-3 sm:py-2 rounded-lg text-sm font-medium transition-colors ${O === "history" ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                      title: "Histórico",
                      children: [
                        e.jsx(Ie, {
                          className: "h-5 w-5 sm:h-4 sm:w-4 sm:mr-2",
                        }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Histórico",
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
            e.jsxs("div", {
              className:
                "bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl shadow-lg p-6",
              children: [
                e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-sm font-medium",
                          children: "Visitas Agendadas",
                        }),
                        e.jsx("p", {
                          className: "text-4xl font-bold mt-1",
                          children: Te.agendadas,
                        }),
                        Te.atrasadas > 0 &&
                          e.jsxs("p", {
                            className:
                              "text-red-200 text-sm mt-2 flex items-center",
                            children: [
                              e.jsx(Ge, { className: "h-4 w-4 mr-1" }),
                              Te.atrasadas,
                              " atrasada",
                              Te.atrasadas !== 1 ? "s" : "",
                            ],
                          }),
                      ],
                    }),
                    e.jsx(Me, {
                      className: "h-16 w-16 text-blue-200 opacity-50",
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "grid grid-cols-3 gap-4 mt-6 pt-6 border-t border-blue-400",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Total",
                        }),
                        e.jsx("p", {
                          className: "text-2xl font-semibold",
                          children: Te.totalVisits,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Realizadas",
                        }),
                        e.jsx("p", {
                          className: "text-2xl font-semibold",
                          children: Te.realizadas,
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("p", {
                          className: "text-blue-100 text-xs",
                          children: "Pendências",
                        }),
                        e.jsx("p", {
                          className: "text-2xl font-semibold",
                          children: Te.pendingRequests,
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
            e.jsx("div", {
              className: "bg-white rounded-xl shadow-sm border border-gray-200",
              children: e.jsxs("div", {
                className: "p-6",
                children: [
                  O === "visits" && Se(),
                  O === "cancellations" && ae(),
                  O === "history" && ke(),
                ],
              }),
            }),
          ],
        }),
        w &&
          N &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsx("div", {
                  className: "px-6 py-4 border-b border-gray-200",
                  children: e.jsxs("h3", {
                    className: "text-lg font-semibold text-gray-900",
                    children: [
                      S === "approve" ? "Aprovar" : "Rejeitar",
                      " ",
                      "Cancelamento",
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className: "px-6 py-4",
                  children: [
                    e.jsxs("div", {
                      className: "mb-4",
                      children: [
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Cliente:" }),
                            " ",
                            N.clientName,
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Data:" }),
                            " ",
                            we(N.scheduledDate, N.scheduledTime),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Cobrador:" }),
                            " ",
                            ge(N.collectorId),
                          ],
                        }),
                      ],
                    }),
                    N.cancellationRequestReason &&
                      e.jsxs("div", {
                        className: "mb-4 p-3 bg-gray-50 rounded-lg",
                        children: [
                          e.jsx("div", {
                            className: "text-sm font-medium text-gray-700 mb-1",
                            children: "Motivo solicitado:",
                          }),
                          e.jsxs("div", {
                            className: "text-sm text-gray-600 italic",
                            children: ['"', N.cancellationRequestReason, '"'],
                          }),
                        ],
                      }),
                    S === "reject" &&
                      e.jsxs("div", {
                        className: "mb-4",
                        children: [
                          e.jsx("label", {
                            className:
                              "block text-sm font-medium text-gray-700 mb-2",
                            children: "Motivo da rejeição *",
                          }),
                          e.jsx("textarea", {
                            value: J,
                            onChange: (le) => Z(le.target.value),
                            placeholder:
                              "Explique por que está rejeitando esta solicitação...",
                            rows: 4,
                            className:
                              "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500",
                            required: !0,
                          }),
                        ],
                      }),
                    e.jsx("div", {
                      className: `border rounded-lg p-3 mb-4 ${S === "approve" ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"}`,
                      children: e.jsxs("div", {
                        className: "flex items-start",
                        children: [
                          S === "approve"
                            ? e.jsx(Le, {
                                className:
                                  "h-5 w-5 text-green-600 mr-2 flex-shrink-0 mt-0.5",
                              })
                            : e.jsx(Es, {
                                className:
                                  "h-5 w-5 text-red-600 mr-2 flex-shrink-0 mt-0.5",
                              }),
                          e.jsx("div", {
                            className: `text-sm ${S === "approve" ? "text-green-700" : "text-red-700"}`,
                            children:
                              S === "approve"
                                ? e.jsxs(e.Fragment, {
                                    children: [
                                      e.jsx("strong", {
                                        children: "Confirmar aprovação:",
                                      }),
                                      " A visita será cancelada e o cobrador será notificado.",
                                    ],
                                  })
                                : e.jsxs(e.Fragment, {
                                    children: [
                                      e.jsx("strong", {
                                        children: "Confirmar rejeição:",
                                      }),
                                      " A visita permanecerá agendada e o cobrador será notificado da rejeição.",
                                    ],
                                  }),
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "px-4 lg:px-6 py-4 border-t border-gray-200 flex flex-col sm:flex-row justify-end gap-2 sm:gap-3",
                  children: [
                    e.jsx("button", {
                      onClick: Re,
                      disabled: he,
                      className:
                        "w-full sm:w-auto px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50",
                      children: "Cancelar",
                    }),
                    e.jsxs("button", {
                      onClick: K,
                      disabled: he || (S === "reject" && !J.trim()),
                      className: `w-full sm:w-auto px-4 py-2 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center ${S === "approve" ? "bg-green-600 text-white hover:bg-green-700" : "bg-red-600 text-white hover:bg-red-700"}`,
                      children: [
                        he
                          ? e.jsx("div", {
                              className:
                                "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2",
                            })
                          : S === "approve"
                            ? e.jsx(Le, { className: "h-4 w-4 mr-2" })
                            : e.jsx(Es, { className: "h-4 w-4 mr-2" }),
                        he
                          ? "Processando..."
                          : S === "approve"
                            ? "Aprovar"
                            : "Rejeitar",
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
      ],
    });
  },
  Ms = () => {
    const s = new Date(),
      t = s.getFullYear(),
      x = String(s.getMonth() + 1).padStart(2, "0"),
      h = String(s.getDate()).padStart(2, "0");
    return `${t}-${x}-${h}`;
  },
  Ze = (s) => {
    const t = s.getFullYear(),
      x = String(s.getMonth() + 1).padStart(2, "0"),
      h = String(s.getDate()).padStart(2, "0");
    return `${t}-${x}-${h}`;
  },
  Pt = () => {
    const s = new Date(),
      t = s.getFullYear(),
      x = s.getMonth(),
      h = s.getDate();
    return {
      hoje: { label: "Hoje", start: Ze(s), end: Ze(s), single: !0 },
      ontem: {
        label: "Ontem",
        start: Ze(new Date(t, x, h - 1)),
        end: Ze(new Date(t, x, h - 1)),
        single: !0,
      },
      semanaPassada: {
        label: "Semana Passada",
        start: Ze(new Date(t, x, h - 7)),
        end: Ze(new Date(t, x, h - 1)),
        single: !1,
      },
      mesAtual: {
        label: "Mês Atual",
        start: Ze(new Date(t, x, 1)),
        end: Ze(s),
        single: !1,
      },
      mesPassado: {
        label: "Mês Passado",
        start: Ze(new Date(t, x - 1, 1)),
        end: Ze(new Date(t, x, 0)),
        single: !1,
      },
      ultimos30Dias: {
        label: "Últimos 30 dias",
        start: Ze(new Date(t, x, h - 30)),
        end: Ze(s),
        single: !1,
      },
      trimestre: {
        label: "Último Trimestre",
        start: Ze(new Date(t, x - 3, h)),
        end: Ze(s),
        single: !1,
      },
      semestre: {
        label: "Último Semestre",
        start: Ze(new Date(t, x - 6, h)),
        end: Ze(s),
        single: !1,
      },
    };
  },
  Xa = ({ collections: s }) => {
    const { users: t, salePayments: x, refreshData: h } = Je(),
      [i, D] = r.useState(Ms()),
      [E, O] = r.useState(Ms()),
      [F, C] = r.useState(!1),
      [V, U] = r.useState("single"),
      [A, Q] = r.useState("all"),
      [ee, Y] = r.useState("all"),
      [G, L] = r.useState(""),
      [W, T] = r.useState(""),
      [, p] = r.useState(new Date()),
      [I, v] = r.useState(!1),
      [j, z] = r.useState(0),
      [N, H] = r.useState(!1);
    r.useState(!1);
    const w = r.useMemo(() => {
      let R = 0;
      return (
        A !== "all" && R++,
        ee !== "all" && R++,
        G && R++,
        W && R++,
        V === "range" && R++,
        R
      );
    }, [A, ee, G, W, V]);
    r.useEffect(() => {
      (p(new Date()), v(!0), z((ge) => ge + 1));
      const R = setTimeout(() => {
        v(!1);
      }, 3e3);
      return () => clearTimeout(R);
    }, [x, s]);
    const y = (R) => {
      const pe = Pt()[R];
      pe.single
        ? (U("single"), D(pe.start))
        : (U("range"), D(pe.start), O(pe.end));
    };
    Xe.useEffect(() => {
      if (V === "range") {
        const R = Ms();
        i === R && E === R && y("mesPassado");
      }
    }, [V]);
    const S = r.useMemo(() => {
        const R = new Set();
        return (
          s.forEach((ge) => {
            ge.nome_da_loja && R.add(ge.nome_da_loja);
          }),
          Array.from(R).sort()
        );
      }, [s]),
      _ = r.useMemo(
        () =>
          t
            .filter((R) => R.type === "collector")
            .sort((R, ge) => R.name.localeCompare(ge.name)),
        [t],
      ),
      J = r.useMemo(() => {
        const R = x.filter((de) => {
            const oe = de.paymentDate;
            if (
              !oe ||
              !(V === "single" ? oe === i : oe >= i && oe <= E) ||
              (A !== "all" && de.collectorId !== A)
            )
              return !1;
            if (ee !== "all") {
              const Ae = s.find(
                (Ve) =>
                  Ve.documento === de.clientDocument &&
                  Ve.venda_n === de.saleNumber,
              );
              if (!Ae || Ae.nome_da_loja !== ee) return !1;
            }
            const se = de.paymentAmount;
            return !((G && se < parseFloat(G)) || (W && se > parseFloat(W)));
          }),
          ge = new Map();
        R.forEach((de) => {
          var Ae;
          const oe = `${de.saleNumber}-${de.clientDocument}-${de.collectorId}-${de.id}`,
            P = s.find(
              (Ve) =>
                Ve.documento === de.clientDocument &&
                Ve.venda_n === de.saleNumber,
            );
          ge.has(oe) ||
            ge.set(oe, {
              saleKey: oe,
              collectorId: de.collectorId || "unknown",
              client: de.clientDocument || "Cliente não informado",
              totalReceived: 0,
              originalValue: (P == null ? void 0 : P.valor_original) || 0,
              store: (P == null ? void 0 : P.nome_da_loja) || "",
              saleNumber:
                ((Ae = de.saleNumber) == null ? void 0 : Ae.toString()) || "",
            });
          const se = ge.get(oe);
          se.totalReceived += de.paymentAmount;
        });
        const pe = new Map();
        Array.from(ge.values()).forEach((de) => {
          const oe = de.collectorId,
            P = t.find((Ve) => Ve.id === oe),
            se = (P == null ? void 0 : P.name) || "Não atribuído";
          pe.has(oe) ||
            pe.set(oe, {
              collectorId: oe,
              collectorName: se,
              receivedAmount: 0,
              transactionCount: 0,
              clients: new Set(),
              saleNumbers: new Set(),
            });
          const Ae = pe.get(oe);
          ((Ae.receivedAmount += de.totalReceived),
            (Ae.transactionCount += 1),
            Ae.clients.add(de.client),
            de.saleNumber && Ae.saleNumbers.add(de.saleNumber));
        });
        const fe = Array.from(pe.values()).map((de) => ({
            ...de,
            clients: Array.from(de.clients),
            saleNumbers: Array.from(de.saleNumbers).sort(),
          })),
          we = new Map();
        R.forEach((de) => {
          var Ae, Ve;
          const oe = `${de.id}`,
            P = s.find(
              (ne) =>
                ne.documento === de.clientDocument &&
                ne.venda_n === de.saleNumber,
            );
          we.has(oe) ||
            we.set(oe, {
              saleKey: oe,
              client:
                (P == null ? void 0 : P.cliente) ||
                de.clientDocument ||
                "Cliente não informado",
              saleNumber:
                ((Ae = de.saleNumber) == null ? void 0 : Ae.toString()) || "",
              store: (P == null ? void 0 : P.nome_da_loja) || "",
              totalOriginalValue: 0,
              totalReceivedValue: de.paymentAmount,
              receivedDate: de.paymentDate || i,
              collector:
                de.collectorName ||
                ((Ve = t.find((ne) => ne.id === de.collectorId)) == null
                  ? void 0
                  : Ve.name) ||
                "Não atribuído",
              installments: [],
            });
          const se = we.get(oe);
          de.distributionDetails && Array.isArray(de.distributionDetails)
            ? de.distributionDetails.forEach((ne) => {
                (se.installments.push({
                  collectionId: ne.installmentId || de.id,
                  originalValue: ne.originalAmount || 0,
                  receivedValue: ne.appliedAmount || 0,
                  pendingValue: Math.max(
                    0,
                    (ne.originalAmount || 0) - (ne.appliedAmount || 0),
                  ),
                }),
                  (se.totalOriginalValue += ne.originalAmount || 0));
              })
            : se.installments.push({
                collectionId: de.id,
                originalValue: 0,
                receivedValue: de.paymentAmount,
                pendingValue: 0,
              });
        });
        const re = Array.from(we.values()).map((de) => ({
          ...de,
          totalPendingValue: Math.max(
            0,
            de.totalOriginalValue - de.totalReceivedValue,
          ),
        }));
        return {
          date: V === "single" ? ls(i) : `${ls(i)} - ${ls(E)}`,
          totalReceived: re.reduce((de, oe) => de + oe.totalReceivedValue, 0),
          totalTransactions: ge.size,
          collectorSummary: fe,
          payments: re,
        };
      }, [x, s, i, E, V, A, ee, G, W, t, j]),
      Z = () => {
        const R = er(J, V === "range"),
          ge = new Blob([R], { type: "text/plain;charset=utf-8" }),
          pe = URL.createObjectURL(ge),
          fe = document.createElement("a");
        fe.href = pe;
        const we = V === "single" ? i : `${i}_${E}`;
        ((fe.download = `relatorio-caixa-${we}.txt`),
          fe.click(),
          URL.revokeObjectURL(pe));
      },
      he = () => {
        const R = sr(J, V === "range", F),
          ge = window.open("", "_blank");
        ge && (ge.document.write(R), ge.document.close(), ge.print());
      },
      xe = () => {
        (U("single"), D(Ms()), O(Ms()), Q("all"), Y("all"), L(""), T(""));
      };
    return e.jsxs("div", {
      className: "space-y-4",
      children: [
        e.jsxs("div", {
          className: "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("h2", {
                      className: "text-xl font-bold text-gray-900",
                      children: "Relatório do Caixa",
                    }),
                    e.jsx("p", {
                      className: "text-sm text-gray-600 mt-1",
                      children:
                        V === "single" ? ls(i) : `${ls(i)} até ${ls(E)}`,
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "flex items-center gap-2",
                  children: [
                    e.jsx("button", {
                      onClick: async () => {
                        (await h(), z((R) => R + 1));
                      },
                      className:
                        "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                      title: "Atualizar",
                      children: e.jsx(hs, { className: "h-5 w-5" }),
                    }),
                    e.jsxs("button", {
                      onClick: () => H(!N),
                      className:
                        "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors relative",
                      children: [
                        e.jsx(fs, { className: "h-5 w-5" }),
                        w > 0 &&
                          e.jsx("span", {
                            className:
                              "absolute -top-1 -right-1 h-5 w-5 bg-blue-600 text-white text-xs rounded-full flex items-center justify-center font-medium",
                            children: w,
                          }),
                      ],
                    }),
                    e.jsx("button", {
                      onClick: he,
                      className:
                        "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                      children: e.jsx(ka, { className: "h-5 w-5" }),
                    }),
                    e.jsx("button", {
                      onClick: Z,
                      className:
                        "p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                      children: e.jsx($s, { className: "h-5 w-5" }),
                    }),
                  ],
                }),
              ],
            }),
            I &&
              e.jsxs("div", {
                className:
                  "mt-2 flex items-center gap-2 text-xs text-green-600",
                children: [
                  e.jsx(hs, { className: "h-3 w-3 animate-spin" }),
                  e.jsx("span", { children: "Atualizado" }),
                ],
              }),
          ],
        }),
        N &&
          e.jsx("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-4 animate-in slide-in-from-top-2",
            children: e.jsxs("div", {
              className: "space-y-4",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("label", {
                      className: "block text-sm font-medium text-gray-700 mb-2",
                      children: "Período",
                    }),
                    e.jsxs("div", {
                      className:
                        "flex bg-gray-100 rounded-lg p-1 w-full sm:w-auto",
                      children: [
                        e.jsx("button", {
                          onClick: () => U("single"),
                          className: `flex-1 sm:flex-none px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 ${V === "single" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                          children: "Data Única",
                        }),
                        e.jsx("button", {
                          onClick: () => U("range"),
                          className: `flex-1 sm:flex-none px-4 py-2 rounded-md text-sm font-medium transition-all duration-200 ${V === "range" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                          children: "Período",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("label", {
                      className: "block text-sm font-medium text-gray-700 mb-2",
                      children: "Ações Rápidas",
                    }),
                    e.jsx("div", {
                      className: "flex flex-wrap gap-2",
                      children: Object.entries(Pt()).map(([R, ge]) =>
                        e.jsx(
                          "button",
                          {
                            onClick: () => y(R),
                            className:
                              "px-3 py-1.5 text-xs font-medium bg-gray-100 text-gray-700 rounded-lg hover:bg-blue-100 hover:text-blue-700 transition-colors whitespace-nowrap",
                            children: ge.label,
                          },
                          R,
                        ),
                      ),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: V === "single" ? "Data" : "Data Inicial",
                        }),
                        e.jsxs("div", {
                          className: "flex items-center",
                          children: [
                            e.jsx(Me, {
                              className: "h-4 w-4 text-gray-500 mr-2",
                            }),
                            e.jsx("input", {
                              type: "date",
                              value: i,
                              onChange: (R) => D(R.target.value),
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                            }),
                          ],
                        }),
                      ],
                    }),
                    V === "range" &&
                      e.jsxs("div", {
                        children: [
                          e.jsx("label", {
                            className:
                              "block text-sm font-medium text-gray-700 mb-2",
                            children: "Data Final",
                          }),
                          e.jsxs("div", {
                            className: "flex items-center",
                            children: [
                              e.jsx(Me, {
                                className: "h-4 w-4 text-gray-500 mr-2",
                              }),
                              e.jsx("input", {
                                type: "date",
                                value: E,
                                onChange: (R) => O(R.target.value),
                                min: i,
                                className:
                                  "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                              }),
                            ],
                          }),
                        ],
                      }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Cobrador",
                        }),
                        e.jsxs("select", {
                          value: A,
                          onChange: (R) => Q(R.target.value),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          children: [
                            e.jsx("option", {
                              value: "all",
                              children: "Todos os Cobradores",
                            }),
                            _.map((R) =>
                              e.jsx(
                                "option",
                                { value: R.id, children: R.name },
                                R.id,
                              ),
                            ),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Loja",
                        }),
                        e.jsxs("select", {
                          value: ee,
                          onChange: (R) => Y(R.target.value),
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                          children: [
                            e.jsx("option", {
                              value: "all",
                              children: "Todas as Lojas",
                            }),
                            S.map((R) =>
                              e.jsx("option", { value: R, children: R }, R),
                            ),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Valor Mínimo",
                        }),
                        e.jsxs("div", {
                          className: "flex items-center",
                          children: [
                            e.jsx(Oe, {
                              className: "h-4 w-4 text-gray-500 mr-2",
                            }),
                            e.jsx("input", {
                              type: "number",
                              step: "0.01",
                              min: "0",
                              value: G,
                              onChange: (R) => L(R.target.value),
                              placeholder: "0,00",
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Valor Máximo",
                        }),
                        e.jsxs("div", {
                          className: "flex items-center",
                          children: [
                            e.jsx(Oe, {
                              className: "h-4 w-4 text-gray-500 mr-2",
                            }),
                            e.jsx("input", {
                              type: "number",
                              step: "0.01",
                              min: "0",
                              value: W,
                              onChange: (R) => T(R.target.value),
                              placeholder: "∞",
                              className:
                                "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsx("div", {
                      className: "flex items-end",
                      children: e.jsxs("button", {
                        onClick: xe,
                        className:
                          "w-full flex items-center justify-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm font-medium",
                        children: [
                          e.jsx(fs, { className: "h-4 w-4 mr-2" }),
                          "Limpar Filtros",
                        ],
                      }),
                    }),
                  ],
                }),
              ],
            }),
          }),
        e.jsxs("div", {
          className:
            "bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-xl shadow-lg p-6",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-between",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-green-100 text-sm font-medium",
                      children: "Total Recebido",
                    }),
                    e.jsx("p", {
                      className: "text-4xl font-bold mt-1",
                      children: q(J.totalReceived),
                    }),
                    J.totalTransactions > 0 &&
                      e.jsxs("p", {
                        className: "text-green-100 text-sm mt-2",
                        children: [
                          "Ticket médio: ",
                          q(J.totalReceived / J.totalTransactions),
                        ],
                      }),
                  ],
                }),
                e.jsx(Oe, { className: "h-16 w-16 text-green-200 opacity-50" }),
              ],
            }),
            e.jsxs("div", {
              className:
                "grid grid-cols-2 gap-4 mt-6 pt-6 border-t border-green-400",
              children: [
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-green-100 text-xs",
                      children: "Vendas",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: J.totalTransactions,
                    }),
                  ],
                }),
                e.jsxs("div", {
                  children: [
                    e.jsx("p", {
                      className: "text-green-100 text-xs",
                      children: "Cobradores",
                    }),
                    e.jsx("p", {
                      className: "text-2xl font-semibold",
                      children: J.collectorSummary.length,
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
        J.collectorSummary.length > 0 &&
          e.jsxs("div", {
            className: "space-y-4",
            children: [
              e.jsxs("div", {
                className: "flex items-center justify-between",
                children: [
                  e.jsx("h3", {
                    className: "text-lg font-semibold text-gray-900",
                    children: "Desempenho por Cobrador",
                  }),
                  e.jsx("button", {
                    onClick: () => C(!F),
                    className:
                      "text-sm text-blue-600 hover:text-blue-700 font-medium",
                    children: F ? "Ocultar detalhes" : "Ver detalhes",
                  }),
                ],
              }),
              e.jsx("div", {
                className: "grid gap-4 md:grid-cols-2 lg:grid-cols-3",
                children: J.collectorSummary.map((R) =>
                  e.jsxs(
                    "div",
                    {
                      className:
                        "bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow",
                      children: [
                        e.jsxs("div", {
                          className: "flex items-start justify-between mb-3",
                          children: [
                            e.jsxs("div", {
                              children: [
                                e.jsx("h4", {
                                  className: "font-medium text-gray-900",
                                  children: R.collectorName,
                                }),
                                e.jsxs("p", {
                                  className: "text-sm text-gray-500",
                                  children: [R.transactionCount, " vendas"],
                                }),
                              ],
                            }),
                            e.jsxs("div", {
                              className: "text-right",
                              children: [
                                e.jsx("p", {
                                  className: "text-lg font-bold text-green-600",
                                  children: q(R.receivedAmount),
                                }),
                                e.jsxs("p", {
                                  className: "text-xs text-gray-500",
                                  children: [
                                    "Ticket: ",
                                    q(
                                      R.transactionCount > 0
                                        ? R.receivedAmount / R.transactionCount
                                        : 0,
                                    ),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        R.saleNumbers.length > 0 &&
                          F &&
                          e.jsxs("div", {
                            className: "pt-3 border-t border-gray-100",
                            children: [
                              e.jsx("p", {
                                className: "text-xs text-gray-600 mb-1",
                                children: "Vendas realizadas:",
                              }),
                              e.jsxs("p", {
                                className: "text-xs text-gray-700 line-clamp-2",
                                children: ["#", R.saleNumbers.join(", #")],
                              }),
                            ],
                          }),
                      ],
                    },
                    R.collectorId,
                  ),
                ),
              }),
            ],
          }),
        F &&
          J.payments.length > 0 &&
          e.jsxs("div", {
            className: "space-y-4",
            children: [
              e.jsx("h3", {
                className: "text-lg font-semibold text-gray-900",
                children: "Transações Detalhadas",
              }),
              e.jsx("div", {
                className:
                  "bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden",
                children: e.jsx("div", {
                  className: "overflow-x-auto",
                  children: e.jsxs("table", {
                    className: "w-full",
                    children: [
                      e.jsx("thead", {
                        className: "bg-gray-50 border-b border-gray-200",
                        children: e.jsxs("tr", {
                          children: [
                            e.jsx("th", {
                              className:
                                "px-4 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider",
                              children: "Cliente / Venda",
                            }),
                            e.jsx("th", {
                              className:
                                "px-4 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider hidden sm:table-cell",
                              children: "Loja",
                            }),
                            e.jsx("th", {
                              className:
                                "px-4 py-3 text-left text-xs font-medium text-gray-600 uppercase tracking-wider hidden md:table-cell",
                              children: "Cobrador",
                            }),
                            e.jsx("th", {
                              className:
                                "px-4 py-3 text-right text-xs font-medium text-gray-600 uppercase tracking-wider",
                              children: "Valor",
                            }),
                          ],
                        }),
                      }),
                      e.jsx("tbody", {
                        className: "divide-y divide-gray-200",
                        children: J.payments.map((R, ge) =>
                          e.jsxs(
                            "tr",
                            {
                              className: "hover:bg-gray-50",
                              children: [
                                e.jsx("td", {
                                  className: "px-4 py-3",
                                  children: e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-sm font-medium text-gray-900",
                                        children: R.client,
                                      }),
                                      e.jsx("p", {
                                        className: "text-xs text-gray-500",
                                        children: R.saleNumber
                                          ? `Venda #${R.saleNumber}`
                                          : "Sem número",
                                      }),
                                    ],
                                  }),
                                }),
                                e.jsx("td", {
                                  className: "px-4 py-3 hidden sm:table-cell",
                                  children: e.jsx("p", {
                                    className: "text-sm text-gray-600",
                                    children: R.store,
                                  }),
                                }),
                                e.jsx("td", {
                                  className: "px-4 py-3 hidden md:table-cell",
                                  children: e.jsx("p", {
                                    className: "text-sm text-gray-600",
                                    children: R.collector,
                                  }),
                                }),
                                e.jsxs("td", {
                                  className: "px-4 py-3 text-right",
                                  children: [
                                    e.jsx("p", {
                                      className:
                                        "text-sm font-bold text-green-600",
                                      children: q(R.totalReceivedValue),
                                    }),
                                    R.totalPendingValue > 0 &&
                                      e.jsxs("p", {
                                        className: "text-xs text-red-600",
                                        children: [
                                          "Pendente: ",
                                          q(R.totalPendingValue),
                                        ],
                                      }),
                                  ],
                                }),
                              ],
                            },
                            `${R.saleKey}-${ge}`,
                          ),
                        ),
                      }),
                    ],
                  }),
                }),
              }),
            ],
          }),
        J.totalTransactions === 0 &&
          e.jsxs("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center",
            children: [
              e.jsx(rs, { className: "h-12 w-12 text-gray-400 mx-auto mb-4" }),
              e.jsx("h3", {
                className: "text-lg font-medium text-gray-900 mb-2",
                children: "Nenhum recebimento encontrado",
              }),
              e.jsxs("p", {
                className: "text-gray-600",
                children: [
                  "Não há recebimentos registrados para",
                  " ",
                  V === "single" ? ls(i) : `${ls(i)} até ${ls(E)}`,
                  " ",
                  "com os filtros selecionados.",
                ],
              }),
            ],
          }),
      ],
    });
  },
  er = (s, t = !1) => {
    const x = [
      "=".repeat(60),
      `RELATÓRIO DO CAIXA ${t ? "DO PERÍODO" : "DO DIA"} - ${s.date}`,
      "=".repeat(60),
      "",
      `Total Recebido: ${q(s.totalReceived)}`,
      `Total de Vendas: ${s.totalTransactions}`,
      `Cobradores Ativos: ${s.collectorSummary.length}`,
      "",
      "RESUMO POR COBRADOR:",
      "-".repeat(60),
    ];
    return (
      s.collectorSummary.forEach((h) => {
        x.push(
          `${h.collectorName}:`,
          `  Valor Recebido: ${q(h.receivedAmount)}`,
          `  Vendas: ${h.transactionCount}`,
          `  Clientes: ${h.clients.length}`,
          `  Números das Vendas: ${h.saleNumbers.length > 0 ? `#${h.saleNumbers.join(", #")}` : "Nenhuma venda com número"}`,
          "",
        );
      }),
      s.payments.length > 0 &&
        (x.push("TRANSAÇÕES DETALHADAS:", "-".repeat(60)),
        s.payments.forEach((h) => {
          x.push(
            `Cliente: ${h.client}`,
            `${h.saleNumber ? `Venda: #${h.saleNumber}` : "Venda sem número"} | Loja: ${h.store}`,
            `Parcelas: ${h.installments.length}`,
            `Valor Devido: ${q(h.totalOriginalValue)} | Valor Recebido: ${q(h.totalReceivedValue)}`,
            `Valor Pendente: ${h.totalPendingValue > 0 ? q(h.totalPendingValue) : "Quitado"}`,
            `Cobrador: ${h.collector}`,
            "",
          );
        })),
      x.push("=".repeat(60)),
      x.join(`
`)
    );
  },
  sr = (s, t = !1, x = !1) => `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Relatório do Caixa - ${s.date}</title>
      <style>
        @page { margin: 15mm; size: A4 landscape; }
        * { box-sizing: border-box; }
        body { 
          font-family: 'Arial', sans-serif; 
          margin: 0; 
          padding: 0; 
          line-height: 1.3;
          color: #333;
          background: #fff;
          text-align: center;
          font-size: 13px;
        }
        
        .container {
          max-width: 95%;
          margin: 0 auto;
          text-align: left;
        }
        
        .header { 
          text-align: center; 
          border-bottom: 2px solid #333; 
          padding: 8px 0; 
          margin-bottom: 15px; 
        }
        
        .header h1 { 
          margin: 0 0 4px 0; 
          color: #333; 
          font-size: 20px; 
          font-weight: bold;
        }
        
        .header h2 { 
          margin: 0; 
          color: #666; 
          font-size: 14px; 
          font-weight: normal;
        }
        
        .summary { 
          margin: 0 auto 15px auto; 
          padding: 8px;
          border: 1px solid #ddd;
          max-width: 100%;
        }
        
        .summary h3 {
          margin: 0 0 8px 0;
          color: #333;
          font-size: 16px;
          font-weight: bold;
          border-bottom: 1px solid #ddd;
          padding-bottom: 4px;
        }
        
        .summary-grid {
          display: grid;
          grid-template-columns: repeat(4, 1fr);
          gap: 8px;
          margin-top: 8px;
        }
        
        .summary-item { 
          border: 1px solid #eee;
          padding: 6px;
        }
        
        .summary-item .label {
          font-size: 11px;
          color: #666;
          margin-bottom: 2px;
        }
        
        .summary-item .value {
          font-size: 14px;
          font-weight: bold;
          color: #333;
        }
        
        .section-title {
          color: #333;
          font-size: 16px;
          font-weight: bold;
          margin: 20px 0 8px 0;
          padding: 4px 0;
          border-bottom: 1px solid #ddd;
        }
        
        table { 
          width: 100%; 
          border-collapse: collapse; 
          margin: 8px auto 15px auto;
          border: 1px solid #ddd;
        }
        
        th { 
          background: #f5f5f5;
          color: #333;
          font-weight: bold;
          padding: 6px 8px;
          text-align: center;
          font-size: 12px;
          border: 1px solid #ddd;
        }
        
        td { 
          padding: 6px 8px;
          border: 1px solid #ddd;
          font-size: 12px;
          vertical-align: top;
          text-align: center;
        }
        
        tr:nth-child(even) { background-color: #fafafa; }
        
        .text-center { text-align: center; }
        .text-right { text-align: right; }
        .small-text { font-size: 10px; color: #666; }
        
        .total-section { 
          margin: 15px auto 0 auto; 
          padding: 8px;
          border: 1px solid #ddd;
          max-width: 100%;
        }
        
        .totals-grid {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 15px;
          margin-top: 8px;
        }
        
        .totals-column {
          display: flex;
          flex-direction: column;
          gap: 4px;
        }
        
        .total-section h3 {
          margin: 0 0 8px 0;
          color: #333;
          font-size: 16px;
          font-weight: bold;
        }
        
        .total-row { 
          display: flex; 
          justify-content: space-between; 
          align-items: center;
          margin: 4px 0; 
          font-size: 13px;
          padding: 2px 0;
        }
        
        .total-row .label {
          color: #333;
          font-weight: normal;
        }
        
        .total-row .value {
          font-weight: bold;
        }
        
        .total-row.grand-total { 
          font-size: 15px;
          border-top: 2px solid #333; 
          padding-top: 8px; 
          margin-top: 8px;
        }
        
        .grand-total .label {
          color: #333;
          font-weight: bold;
        }
        
        .grand-total .value {
          color: #333;
          font-weight: bold;
        }
        
        .footer {
          margin-top: 20px;
          padding-top: 8px;
          border-top: 1px solid #ddd;
          text-align: center;
          color: #666;
          font-size: 10px;
        }
        
        .generated-info {
          padding: 6px;
          margin-top: 15px;
          font-size: 10px;
          color: #666;
          text-align: center;
          border: 1px solid #ddd;
        }
        
        @media print {
          .header { break-inside: avoid; }
          .summary { break-inside: avoid; }
          .total-section { break-inside: avoid; }
          table { break-inside: avoid; }
          tr { break-inside: avoid; }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>Relatório do Caixa ${t ? "do Período" : "do Dia"}</h1>
          <h2>${s.date}</h2>
        </div>
      
      <div class="summary">
        <h3>Resumo Financeiro</h3>
        <div class="summary-grid">
          <div class="summary-item">
            <div class="label">Total Recebido</div>
            <div class="value">${q(s.totalReceived)}</div>
          </div>
          <div class="summary-item">
            <div class="label">Total de Vendas</div>
            <div class="value">${s.totalTransactions}</div>
          </div>
          <div class="summary-item">
            <div class="label">Cobradores Ativos</div>
            <div class="value">${s.collectorSummary.length}</div>
          </div>
          <div class="summary-item">
            <div class="label">Ticket Médio</div>
            <div class="value">${s.totalTransactions > 0 ? q(s.totalReceived / s.totalTransactions) : q(0)}</div>
          </div>
        </div>
      </div>

      <h3 class="section-title">Resumo por Cobrador</h3>
      <table>
        <tr>
          <th>Cobrador</th>
          <th>Valor Recebido</th>
          <th>Vendas</th>
          <th>Clientes</th>
          <th>Números das Vendas</th>
        </tr>
        ${s.collectorSummary
          .map(
            (h) => `
          <tr>
            <td>${h.collectorName}</td>
            <td style="font-weight: bold; text-align: right;">${q(h.receivedAmount)}</td>
            <td>${h.transactionCount}</td>
            <td>${h.clients.length}</td>
            <td class="small-text">${h.saleNumbers.length > 0 ? `#${h.saleNumbers.join(", #")}` : "-"}</td>
          </tr>
        `,
          )
          .join("")}
      </table>

      ${
        x && s.payments.length > 0
          ? `
      <h3 class="section-title">Transações Detalhadas</h3>
      <table>
        <tr>
          <th>Cliente</th>
          <th>Venda</th>
          <th>Parcelas</th>
          <th>Loja</th>
          <th>Valor Devido</th>
          <th>Valor Recebido</th>
          <th>Valor Pendente</th>
          <th>Cobrador</th>
        </tr>
        ${s.payments
          .map(
            (h) => `
          <tr>
            <td>${h.client}</td>
            <td>${h.saleNumber ? `#${h.saleNumber}` : "Sem número"}</td>
            <td>${h.installments.length}</td>
            <td>${h.store}</td>
            <td style="text-align: right;">${q(h.totalOriginalValue)}</td>
            <td style="font-weight: bold; text-align: right;">${q(h.totalReceivedValue)}</td>
            <td style="text-align: right;">${h.totalPendingValue > 0 ? q(h.totalPendingValue) : "-"}</td>
            <td>${h.collector}</td>
          </tr>
        `,
          )
          .join("")}
      </table>
      
      <div class="total-section">
        <h3 style="margin-top: 0;">Totais Gerais</h3>
        <div class="totals-grid">
          <div class="totals-column">
            <div class="total-row">
              <span class="label">Total de Vendas:</span>
              <span class="value">${s.totalTransactions}</span>
            </div>
            <div class="total-row">
              <span class="label">Total Devido:</span>
              <span class="value">${q(s.payments.reduce((h, i) => h + i.totalOriginalValue, 0))}</span>
            </div>
          </div>
          <div class="totals-column">
            <div class="total-row">
              <span class="label">Total Recebido:</span>
              <span class="value">${q(s.totalReceived)}</span>
            </div>
            <div class="total-row">
              <span class="label">Total Pendente:</span>
              <span class="value">${q(s.payments.reduce((h, i) => h + i.totalPendingValue, 0))}</span>
            </div>
          </div>
        </div>
        <div class="total-row grand-total">
          <span class="label">RESULTADO FINAL:</span>
          <span class="value">${q(s.totalReceived)}</span>
        </div>
      </div>
      `
          : ""
      }
      
      ${
        !x && s.payments.length > 0
          ? `
      <div class="total-section">
        <h3 style="margin-top: 0;">Totais Gerais</h3>
        <div class="totals-grid">
          <div class="totals-column">
            <div class="total-row">
              <span class="label">Total de Vendas:</span>
              <span class="value">${s.totalTransactions}</span>
            </div>
            <div class="total-row">
              <span class="label">Total Devido:</span>
              <span class="value">${q(s.payments.reduce((h, i) => h + i.totalOriginalValue, 0))}</span>
            </div>
          </div>
          <div class="totals-column">
            <div class="total-row">
              <span class="label">Total Recebido:</span>
              <span class="value">${q(s.totalReceived)}</span>
            </div>
            <div class="total-row">
              <span class="label">Total Pendente:</span>
              <span class="value">${q(s.payments.reduce((h, i) => h + i.totalPendingValue, 0))}</span>
            </div>
          </div>
        </div>
        <div class="total-row grand-total">
          <span class="label">RESULTADO FINAL:</span>
          <span class="value">${q(s.totalReceived)}</span>
        </div>
      </div>
      `
          : ""
      }
      
      <div class="generated-info">
        <strong>Relatório Gerado Automaticamente</strong><br>
        Data de Geração: ${new Date().toLocaleString("pt-BR", { timeZone: "America/Sao_Paulo", year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit" })}<br>
        Sistema de Gestão de Cobrança
      </div>
      
        <div class="footer">
          <p>Este relatório contém informações confidenciais da empresa.</p>
          <p>Para dúvidas ou esclarecimentos, entre em contato com o setor financeiro.</p>
        </div>
      </div>
    </body>
    </html>
  `,
  tr = () => {
    const { user: s } = ts(),
      [t, x] = r.useState([]),
      [h, i] = r.useState([]),
      [D, E] = r.useState([]),
      [O, F] = r.useState(new Set()),
      [C, V] = r.useState([]),
      [U, A] = r.useState(!1),
      [Q, ee] = r.useState("current"),
      [Y, G] = r.useState("all"),
      [L, W] = r.useState(""),
      [T, p] = r.useState(""),
      [I, v] = r.useState(1),
      [j] = r.useState(10),
      [z, N] = r.useState(!0),
      [H, w] = r.useState(null),
      [y, S] = r.useState({
        total: 0,
        approved: 0,
        rejected: 0,
        expired: 0,
        approvalRate: 0,
      }),
      [_, J] = r.useState(0),
      [Z, he] = r.useState(0),
      xe = async () => {
        try {
          const [P, se, Ae] = await Promise.all([
            as.getPendingRequests(),
            as.getRecentlyProcessedRequests(),
            as.getExpiredRequests(),
          ]);
          (x(P), i(se));
          const Ve = Ae.filter((ne) => !O.has(ne.id));
          E(Ve);
        } catch (P) {
          console.error("Erro ao carregar solicitações:", P);
        }
      },
      R = async () => {
        try {
          const {
            data: P,
            total: se,
            totalPages: Ae,
          } = await as.getAuthorizationHistory({
            status: Y,
            searchTerm: L,
            dateFilter: T,
            page: I,
            limit: j,
          });
          (V(P), J(se), he(Ae));
        } catch (P) {
          console.error("Erro ao carregar histórico:", P);
        }
      },
      ge = async () => {
        try {
          const P = await as.getAuthorizationStats();
          S(P);
        } catch (P) {
          console.error("Erro ao carregar estatísticas:", P);
        }
      };
    (r.useEffect(() => {
      (async () => {
        (N(!0), await Promise.all([xe(), ge()]), N(!1));
      })();
      const se = (Ve) => {
        (xe(),
          "Notification" in window &&
            new Notification("Nova solicitação de autorização", {
              body: `${Ve.detail.collectorName} solicitou autorização para editar pagamentos`,
              icon: "/favicon.ico",
            }));
      };
      window.addEventListener("authRequestCreated", se);
      const Ae = setInterval(xe, 3e4);
      return () => {
        (window.removeEventListener("authRequestCreated", se),
          clearInterval(Ae));
      };
    }, []),
      r.useEffect(() => {
        Q === "history" && R();
      }, [Q, Y, L, T, I]),
      r.useEffect(() => {
        z || xe();
      }, [O]));
    const pe = async (P) => {
        if (s) {
          w(P);
          try {
            const se = await as.approveRequest(P, s.id, s.name);
            (await xe(),
              await ge(),
              window.dispatchEvent(
                new CustomEvent("tokenApproved", {
                  detail: {
                    token: se.token,
                    clientDocument: se.client_document,
                    collectorName: se.collector_name,
                  },
                }),
              ));
          } catch (se) {
            console.error("Erro ao aprovar solicitação:", se);
          } finally {
            w(null);
          }
        }
      },
      fe = async (P) => {
        if (s) {
          w(P);
          try {
            const se = await as.rejectRequest(P, s.id, s.name);
            (window.dispatchEvent(
              new CustomEvent("tokenRejected", {
                detail: {
                  token: se.token,
                  clientDocument: se.client_document,
                  collectorName: se.collector_name,
                },
              }),
            ),
              await xe(),
              await ge());
          } catch (se) {
            console.error("Erro ao rejeitar solicitação:", se);
          } finally {
            w(null);
          }
        }
      },
      we = async () => {
        try {
          await as.markExpiredRequests();
          const P = new Set(D.map((se) => se.id));
          (F((se) => new Set([...se, ...P])), E([]), await xe(), await ge());
        } catch (P) {
          console.error("Erro ao limpar solicitações expiradas:", P);
        }
      },
      re = (P) =>
        new Date(P).toLocaleTimeString("pt-BR", {
          hour: "2-digit",
          minute: "2-digit",
        }),
      de = (P) => {
        const se = new Date(P).getTime() - Date.now();
        if (se <= 0) return "Expirado";
        const Ae = Math.floor(se / 6e4),
          Ve = Math.floor((se % 6e4) / 1e3);
        return `${Ae}:${Ve.toString().padStart(2, "0")}`;
      },
      oe = async () => {
        try {
          const P = await as.exportAuthorizationHistory({
              status: Y,
              searchTerm: L,
              dateFilter: T,
            }),
            se = new Blob([P], { type: "text/csv;charset=utf-8" }),
            Ae = URL.createObjectURL(se),
            Ve = document.createElement("a");
          ((Ve.href = Ae),
            (Ve.download = `historico-autorizacoes-${new Date().toISOString().split("T")[0]}.csv`),
            Ve.click(),
            URL.revokeObjectURL(Ae));
        } catch (P) {
          console.error("Erro ao exportar histórico:", P);
        }
      };
    return z
      ? e.jsx("div", {
          className: "space-y-6",
          children: e.jsx("div", {
            className:
              "bg-white rounded-xl shadow-sm border border-gray-200 p-6",
            children: e.jsxs("div", {
              className: "flex items-center justify-center py-12",
              children: [
                e.jsx(Cs, { className: "h-8 w-8 animate-spin text-blue-500" }),
                e.jsx("span", {
                  className: "ml-2 text-gray-600",
                  children: "Carregando solicitações...",
                }),
              ],
            }),
          }),
        })
      : e.jsxs("div", {
          className: "space-y-6",
          children: [
            e.jsxs("div", {
              className:
                "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
              children: [
                e.jsx("div", {
                  className:
                    "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-4",
                  children: e.jsxs("div", {
                    className: "flex items-center gap-2",
                    children: [
                      e.jsx("h2", {
                        className:
                          "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                        children: "Solicitações de Autorização",
                      }),
                      e.jsx("div", {
                        className:
                          "bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs font-medium",
                        children: Q === "current" ? t.length : _,
                      }),
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className: "grid grid-cols-2 sm:flex gap-2",
                  children: [
                    e.jsxs("button", {
                      onClick: () => ee("current"),
                      className: `flex items-center justify-center px-4 py-3 sm:py-2 rounded-lg text-sm font-medium transition-colors ${Q === "current" ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                      title: "Solicitações Atuais",
                      children: [
                        e.jsx(Ie, {
                          className: "h-5 w-5 sm:h-4 sm:w-4 sm:mr-2",
                        }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Atuais",
                        }),
                      ],
                    }),
                    e.jsxs("button", {
                      onClick: () => ee("history"),
                      className: `flex items-center justify-center px-4 py-3 sm:py-2 rounded-lg text-sm font-medium transition-colors ${Q === "history" ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700 hover:bg-gray-200"}`,
                      title: "Histórico de Autorizações",
                      children: [
                        e.jsx(rs, {
                          className: "h-5 w-5 sm:h-4 sm:w-4 sm:mr-2",
                        }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Histórico",
                        }),
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "flex items-center justify-between mt-4 pt-4 border-t border-gray-100",
                  children: [
                    e.jsx("div", {
                      className: "text-sm text-gray-600",
                      children:
                        Q === "current"
                          ? `${t.length} pendente${t.length !== 1 ? "s" : ""}`
                          : `${_} registro${_ !== 1 ? "s" : ""}`,
                    }),
                    e.jsx("div", {
                      className: "flex gap-2",
                      children:
                        Q === "current"
                          ? e.jsxs("button", {
                              onClick: we,
                              className:
                                "flex items-center px-3 py-1.5 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors",
                              title: "Limpar Solicitações Expiradas",
                              children: [
                                e.jsx(ze, { className: "h-4 w-4 sm:mr-1" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Limpar Expiradas",
                                }),
                              ],
                            })
                          : e.jsxs("button", {
                              onClick: oe,
                              className:
                                "flex items-center px-3 py-1.5 text-sm text-blue-600 hover:bg-blue-50 rounded-lg transition-colors",
                              title: "Exportar Histórico",
                              children: [
                                e.jsx($s, { className: "h-4 w-4 sm:mr-1" }),
                                e.jsx("span", {
                                  className: "hidden sm:inline",
                                  children: "Exportar",
                                }),
                              ],
                            }),
                    }),
                  ],
                }),
              ],
            }),
            e.jsx("div", {
              className:
                "bg-white rounded-xl shadow-sm border border-gray-200 p-4",
              children:
                Q === "current"
                  ? e.jsxs("div", {
                      children: [
                        t.length > 0
                          ? e.jsxs("div", {
                              className: "space-y-4",
                              children: [
                                e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between mb-4",
                                  children: [
                                    e.jsxs("h3", {
                                      className:
                                        "text-lg font-semibold text-gray-900 flex items-center",
                                      children: [
                                        e.jsx(Ie, {
                                          className:
                                            "h-5 w-5 mr-2 text-amber-500",
                                        }),
                                        "Aguardando Aprovação",
                                      ],
                                    }),
                                    e.jsxs("span", {
                                      className:
                                        "text-sm text-amber-600 bg-amber-100 px-3 py-1 rounded-full font-medium",
                                      children: [
                                        t.length,
                                        " pendente",
                                        t.length !== 1 ? "s" : "",
                                      ],
                                    }),
                                  ],
                                }),
                                t.map((P) =>
                                  e.jsxs(
                                    "div",
                                    {
                                      className:
                                        "bg-gradient-to-r from-amber-50 to-orange-50 border-l-4 border-amber-400 rounded-lg p-3 hover:shadow-md transition-shadow",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center justify-between mb-3",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center gap-2 flex-1 min-w-0",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "h-8 w-8 bg-amber-100 rounded-full flex items-center justify-center flex-shrink-0",
                                                  children: e.jsx(Qe, {
                                                    className:
                                                      "h-4 w-4 text-amber-600",
                                                  }),
                                                }),
                                                e.jsxs("div", {
                                                  className: "min-w-0 flex-1",
                                                  children: [
                                                    e.jsx("h4", {
                                                      className:
                                                        "font-semibold text-gray-900 truncate text-sm",
                                                      children:
                                                        P.collector_name,
                                                    }),
                                                    e.jsx("p", {
                                                      className:
                                                        "text-xs text-amber-600 font-medium",
                                                      children: de(
                                                        P.expires_at,
                                                      ),
                                                    }),
                                                  ],
                                                }),
                                              ],
                                            }),
                                            e.jsx("div", {
                                              className:
                                                "text-xs text-gray-500 flex-shrink-0",
                                              children: re(P.requested_at),
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center gap-2 mb-3 p-2 bg-white rounded",
                                          children: [
                                            e.jsx(rs, {
                                              className:
                                                "h-4 w-4 text-blue-600 flex-shrink-0",
                                            }),
                                            e.jsxs("div", {
                                              className: "min-w-0 flex-1",
                                              children: [
                                                e.jsx("p", {
                                                  className:
                                                    "font-medium text-gray-900 truncate text-sm",
                                                  children: P.client_name,
                                                }),
                                                e.jsx("p", {
                                                  className:
                                                    "text-xs text-gray-600 truncate",
                                                  children: P.client_document,
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className: "flex gap-2",
                                          children: [
                                            e.jsx("button", {
                                              onClick: () => pe(P.token),
                                              disabled: H === P.token,
                                              className:
                                                "flex-1 flex items-center justify-center px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium disabled:opacity-50 text-sm",
                                              title: "Aprovar solicitação",
                                              children:
                                                H === P.token
                                                  ? e.jsx(Cs, {
                                                      className:
                                                        "h-4 w-4 animate-spin",
                                                    })
                                                  : e.jsxs(e.Fragment, {
                                                      children: [
                                                        e.jsx(us, {
                                                          className:
                                                            "h-4 w-4 sm:mr-1",
                                                        }),
                                                        e.jsx("span", {
                                                          className:
                                                            "hidden sm:inline ml-1",
                                                          children: "Aprovar",
                                                        }),
                                                      ],
                                                    }),
                                            }),
                                            e.jsx("button", {
                                              onClick: () => fe(P.token),
                                              disabled: H === P.token,
                                              className:
                                                "flex-1 flex items-center justify-center px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium disabled:opacity-50 text-sm",
                                              title: "Rejeitar solicitação",
                                              children:
                                                H === P.token
                                                  ? e.jsx(Cs, {
                                                      className:
                                                        "h-4 w-4 animate-spin",
                                                    })
                                                  : e.jsxs(e.Fragment, {
                                                      children: [
                                                        e.jsx(ze, {
                                                          className:
                                                            "h-4 w-4 sm:mr-1",
                                                        }),
                                                        e.jsx("span", {
                                                          className:
                                                            "hidden sm:inline ml-1",
                                                          children: "Rejeitar",
                                                        }),
                                                      ],
                                                    }),
                                            }),
                                          ],
                                        }),
                                      ],
                                    },
                                    P.token,
                                  ),
                                ),
                              ],
                            })
                          : e.jsxs("div", {
                              className: "text-center py-12",
                              children: [
                                e.jsx("div", {
                                  className:
                                    "h-16 w-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4",
                                  children: e.jsx(us, {
                                    className: "h-8 w-8 text-green-600",
                                  }),
                                }),
                                e.jsx("h3", {
                                  className:
                                    "text-lg font-medium text-gray-900 mb-2",
                                  children: "Nenhuma solicitação pendente",
                                }),
                                e.jsx("p", {
                                  className: "text-gray-600",
                                  children:
                                    "Todas as solicitações foram processadas",
                                }),
                              ],
                            }),
                        h.length > 0 &&
                          e.jsxs("div", {
                            className: "space-y-3 mb-6",
                            children: [
                              e.jsx("h4", {
                                className: "text-sm font-medium text-gray-700",
                                children: "Processadas Recentemente",
                              }),
                              h.map((P) =>
                                e.jsx(
                                  "div",
                                  {
                                    className: `border rounded-lg p-4 ${P.status === "approved" ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"}`,
                                    children: e.jsxs("div", {
                                      className:
                                        "flex items-center justify-between",
                                      children: [
                                        e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center gap-2 mb-1",
                                              children: [
                                                e.jsx(Qe, {
                                                  className:
                                                    "h-4 w-4 text-gray-600",
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "font-medium text-gray-900",
                                                  children: P.collector_name,
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: re(P.requested_at),
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center gap-2",
                                              children: [
                                                e.jsx("span", {
                                                  className:
                                                    "text-xs font-mono bg-gray-100 px-2 py-1 rounded",
                                                  children: P.token,
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "text-sm text-gray-700",
                                                  children: P.client_name,
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsx("div", {
                                          className: `flex items-center px-3 py-1 rounded-full text-sm ${P.status === "approved" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}`,
                                          children:
                                            P.status === "approved"
                                              ? e.jsxs(e.Fragment, {
                                                  children: [
                                                    e.jsx(us, {
                                                      className: "h-4 w-4 mr-1",
                                                    }),
                                                    " Aprovado",
                                                  ],
                                                })
                                              : e.jsxs(e.Fragment, {
                                                  children: [
                                                    e.jsx(ze, {
                                                      className: "h-4 w-4 mr-1",
                                                    }),
                                                    " Rejeitado",
                                                  ],
                                                }),
                                        }),
                                      ],
                                    }),
                                  },
                                  P.token,
                                ),
                              ),
                            ],
                          }),
                        D.length > 0 &&
                          e.jsxs("div", {
                            className: "space-y-3",
                            children: [
                              e.jsxs("button", {
                                onClick: () => A(!U),
                                className:
                                  "flex items-center text-sm font-medium text-gray-700 hover:text-gray-900",
                                children: [
                                  e.jsx(Be, {
                                    className: "h-4 w-4 mr-2 text-red-500",
                                  }),
                                  "Expiradas (",
                                  D.length,
                                  ")",
                                  U ? " - Ocultar" : " - Mostrar",
                                ],
                              }),
                              U &&
                                D.map((P) =>
                                  e.jsx(
                                    "div",
                                    {
                                      className:
                                        "bg-gray-50 border border-gray-200 rounded-lg p-4 opacity-60",
                                      children: e.jsxs("div", {
                                        className:
                                          "flex items-center justify-between",
                                        children: [
                                          e.jsxs("div", {
                                            className: "flex-1",
                                            children: [
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center gap-2 mb-1",
                                                children: [
                                                  e.jsx(Qe, {
                                                    className:
                                                      "h-4 w-4 text-gray-600",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "font-medium text-gray-900",
                                                    children: P.collector_name,
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "text-xs text-gray-500",
                                                    children: re(
                                                      P.requested_at,
                                                    ),
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center gap-2",
                                                children: [
                                                  e.jsx("span", {
                                                    className:
                                                      "text-xs font-mono bg-gray-100 px-2 py-1 rounded",
                                                    children: P.token,
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "text-sm text-gray-700",
                                                    children: P.client_name,
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                          e.jsx("span", {
                                            className:
                                              "text-xs text-red-600 font-medium",
                                            children: "Expirado",
                                          }),
                                        ],
                                      }),
                                    },
                                    P.token,
                                  ),
                                ),
                            ],
                          }),
                        t.length === 0 &&
                          h.length === 0 &&
                          D.length === 0 &&
                          e.jsxs("div", {
                            className: "text-center py-12",
                            children: [
                              e.jsx(Ie, {
                                className:
                                  "h-12 w-12 text-gray-400 mx-auto mb-4",
                              }),
                              e.jsx("p", {
                                className: "text-gray-500",
                                children: "Nenhuma solicitação de autorização",
                              }),
                            ],
                          }),
                      ],
                    })
                  : e.jsxs("div", {
                      children: [
                        e.jsxs("div", {
                          className:
                            "grid grid-cols-1 md:grid-cols-4 gap-4 mb-6",
                          children: [
                            e.jsx("div", {
                              className:
                                "bg-blue-50 border border-blue-200 rounded-lg p-4",
                              children: e.jsxs("div", {
                                className: "flex items-center justify-between",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-sm font-medium text-blue-800",
                                        children: "Total",
                                      }),
                                      e.jsx("p", {
                                        className:
                                          "text-2xl font-bold text-blue-900",
                                        children: y.total,
                                      }),
                                    ],
                                  }),
                                  e.jsx(rs, {
                                    className: "h-8 w-8 text-blue-600",
                                  }),
                                ],
                              }),
                            }),
                            e.jsx("div", {
                              className:
                                "bg-green-50 border border-green-200 rounded-lg p-4",
                              children: e.jsxs("div", {
                                className: "flex items-center justify-between",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-sm font-medium text-green-800",
                                        children: "Aprovadas",
                                      }),
                                      e.jsx("p", {
                                        className:
                                          "text-2xl font-bold text-green-900",
                                        children: y.approved,
                                      }),
                                    ],
                                  }),
                                  e.jsx(us, {
                                    className: "h-8 w-8 text-green-600",
                                  }),
                                ],
                              }),
                            }),
                            e.jsx("div", {
                              className:
                                "bg-red-50 border border-red-200 rounded-lg p-4",
                              children: e.jsxs("div", {
                                className: "flex items-center justify-between",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-sm font-medium text-red-800",
                                        children: "Rejeitadas",
                                      }),
                                      e.jsx("p", {
                                        className:
                                          "text-2xl font-bold text-red-900",
                                        children: y.rejected,
                                      }),
                                    ],
                                  }),
                                  e.jsx(ze, {
                                    className: "h-8 w-8 text-red-600",
                                  }),
                                ],
                              }),
                            }),
                            e.jsx("div", {
                              className:
                                "bg-amber-50 border border-amber-200 rounded-lg p-4",
                              children: e.jsxs("div", {
                                className: "flex items-center justify-between",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("p", {
                                        className:
                                          "text-sm font-medium text-amber-800",
                                        children: "Taxa Aprovação",
                                      }),
                                      e.jsxs("p", {
                                        className:
                                          "text-2xl font-bold text-amber-900",
                                        children: [
                                          y.approvalRate.toFixed(1),
                                          "%",
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsx(ks, {
                                    className: "h-8 w-8 text-amber-600",
                                  }),
                                ],
                              }),
                            }),
                          ],
                        }),
                        e.jsx("div", {
                          className:
                            "bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6",
                          children: e.jsxs("div", {
                            className: "grid grid-cols-1 md:grid-cols-4 gap-4",
                            children: [
                              e.jsxs("div", {
                                children: [
                                  e.jsx("label", {
                                    className:
                                      "block text-sm font-medium text-gray-700 mb-2",
                                    children: "Buscar",
                                  }),
                                  e.jsxs("div", {
                                    className: "relative",
                                    children: [
                                      e.jsx(Vs, {
                                        className:
                                          "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                                      }),
                                      e.jsx("input", {
                                        type: "text",
                                        value: L,
                                        onChange: (P) => W(P.target.value),
                                        className:
                                          "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                        placeholder:
                                          "Cobrador, cliente, documento...",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                children: [
                                  e.jsx("label", {
                                    className:
                                      "block text-sm font-medium text-gray-700 mb-2",
                                    children: "Status",
                                  }),
                                  e.jsxs("select", {
                                    value: Y,
                                    onChange: (P) => G(P.target.value),
                                    className:
                                      "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                    children: [
                                      e.jsx("option", {
                                        value: "all",
                                        children: "Todos",
                                      }),
                                      e.jsx("option", {
                                        value: "approved",
                                        children: "Aprovadas",
                                      }),
                                      e.jsx("option", {
                                        value: "rejected",
                                        children: "Rejeitadas",
                                      }),
                                      e.jsx("option", {
                                        value: "expired",
                                        children: "Expiradas",
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                children: [
                                  e.jsx("label", {
                                    className:
                                      "block text-sm font-medium text-gray-700 mb-2",
                                    children: "Data",
                                  }),
                                  e.jsx("input", {
                                    type: "date",
                                    value: T,
                                    onChange: (P) => p(P.target.value),
                                    className:
                                      "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent",
                                  }),
                                ],
                              }),
                              e.jsx("div", {
                                className: "flex items-end",
                                children: e.jsx("button", {
                                  onClick: () => {
                                    (W(""), G("all"), p(""), v(1));
                                  },
                                  className:
                                    "px-4 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
                                  children: "Limpar Filtros",
                                }),
                              }),
                            ],
                          }),
                        }),
                        e.jsx("div", {
                          className: "space-y-3",
                          children:
                            C.length === 0
                              ? e.jsxs("div", {
                                  className: "text-center py-12",
                                  children: [
                                    e.jsx(rs, {
                                      className:
                                        "h-12 w-12 text-gray-400 mx-auto mb-4",
                                    }),
                                    e.jsx("p", {
                                      className: "text-gray-500",
                                      children: "Nenhum registro encontrado",
                                    }),
                                  ],
                                })
                              : C.map((P) =>
                                  e.jsx(
                                    "div",
                                    {
                                      className: `border rounded-lg p-4 ${P.status === "approved" ? "bg-green-50 border-green-200" : P.status === "rejected" ? "bg-red-50 border-red-200" : "bg-gray-50 border-gray-200"}`,
                                      children: e.jsxs("div", {
                                        className:
                                          "flex items-start justify-between",
                                        children: [
                                          e.jsxs("div", {
                                            className: "flex-1",
                                            children: [
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center gap-2 mb-2",
                                                children: [
                                                  e.jsx(Qe, {
                                                    className:
                                                      "h-4 w-4 text-gray-600",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "font-medium text-gray-900",
                                                    children: P.collector_name,
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "text-xs text-gray-500",
                                                    children: re(
                                                      P.requested_at,
                                                    ),
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center gap-2 mb-2",
                                                children: [
                                                  e.jsx(rs, {
                                                    className:
                                                      "h-4 w-4 text-gray-600",
                                                  }),
                                                  e.jsxs("span", {
                                                    className:
                                                      "text-sm text-gray-700",
                                                    children: [
                                                      P.client_name,
                                                      " (",
                                                      P.client_document,
                                                      ")",
                                                    ],
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                className:
                                                  "flex items-center gap-2 mb-2",
                                                children: [
                                                  e.jsxs("span", {
                                                    className:
                                                      "text-xs font-mono bg-gray-100 px-2 py-1 rounded",
                                                    children: [
                                                      "Token: ",
                                                      P.token,
                                                    ],
                                                  }),
                                                  P.processed_at &&
                                                    e.jsxs("span", {
                                                      className:
                                                        "text-xs text-gray-500",
                                                      children: [
                                                        "Processado em: ",
                                                        re(P.processed_at),
                                                      ],
                                                    }),
                                                ],
                                              }),
                                              P.processed_by_name &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: [
                                                    "Processado por: ",
                                                    P.processed_by_name,
                                                  ],
                                                }),
                                            ],
                                          }),
                                          e.jsx("div", {
                                            className: `flex items-center px-3 py-1 rounded-full text-sm font-medium ${P.status === "approved" ? "bg-green-100 text-green-800" : P.status === "rejected" ? "bg-red-100 text-red-800" : "bg-gray-100 text-gray-800"}`,
                                            children:
                                              P.status === "approved"
                                                ? e.jsxs(e.Fragment, {
                                                    children: [
                                                      e.jsx(us, {
                                                        className:
                                                          "h-4 w-4 mr-1",
                                                      }),
                                                      " Aprovado",
                                                    ],
                                                  })
                                                : P.status === "rejected"
                                                  ? e.jsxs(e.Fragment, {
                                                      children: [
                                                        e.jsx(ze, {
                                                          className:
                                                            "h-4 w-4 mr-1",
                                                        }),
                                                        " Rejeitado",
                                                      ],
                                                    })
                                                  : e.jsxs(e.Fragment, {
                                                      children: [
                                                        e.jsx(Ie, {
                                                          className:
                                                            "h-4 w-4 mr-1",
                                                        }),
                                                        " Expirado",
                                                      ],
                                                    }),
                                          }),
                                        ],
                                      }),
                                    },
                                    `${P.token}-${P.requested_at}`,
                                  ),
                                ),
                        }),
                        Z > 1 &&
                          e.jsxs("div", {
                            className: "flex items-center justify-between mt-6",
                            children: [
                              e.jsxs("div", {
                                className: "text-sm text-gray-700",
                                children: [
                                  "Mostrando ",
                                  (I - 1) * j + 1,
                                  " a ",
                                  Math.min(I * j, _),
                                  " de ",
                                  _,
                                  " registros",
                                ],
                              }),
                              e.jsxs("div", {
                                className: "flex items-center gap-2",
                                children: [
                                  e.jsx("button", {
                                    onClick: () => v(Math.max(1, I - 1)),
                                    disabled: I === 1,
                                    className:
                                      "px-3 py-1 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",
                                    children: "Anterior",
                                  }),
                                  e.jsxs("span", {
                                    className: "text-sm text-gray-700",
                                    children: ["Página ", I, " de ", Z],
                                  }),
                                  e.jsx("button", {
                                    onClick: () => v(Math.min(Z, I + 1)),
                                    disabled: I === Z,
                                    className:
                                      "px-3 py-1 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",
                                    children: "Próxima",
                                  }),
                                ],
                              }),
                            ],
                          }),
                      ],
                    }),
            }),
          ],
        });
  },
  Qt = (s = 0) => [
    { id: "overview", name: "Visão Geral", icon: As },
    { id: "collections", name: "Cobranças", icon: rs },
    { id: "performance", name: "Desempenho", icon: ks },
    { id: "stores", name: "Lojas", icon: Is },
    { id: "clients", name: "Clientes", icon: Dt },
    { id: "visit-tracking", name: "Acompanhamento", icon: Ge },
    { id: "authorization", name: "Autorizações", icon: Dt },
    { id: "users", name: "Usuários", icon: is },
    { id: "database-upload", name: "Upload de Dados", icon: $s },
  ],
  ar = ({ activeTab: s, onTabChange: t }) => {
    const {
        getDashboardStats: x,
        getCollectorPerformance: h,
        getFilteredCollections: i,
        getPendingCancellationRequests: D,
        collections: E,
      } = Je(),
      [O, F] = r.useState(
        () => localStorage.getItem("managerActiveTab") || "overview",
      ),
      C = s || O,
      V = (ne) => {
        t ? t(ne) : F(ne);
      },
      [U, A] = r.useState({}),
      [Q, ee] = r.useState(
        () => localStorage.getItem("managerCollectionsView") || "table",
      ),
      [Y, G] = r.useState("all"),
      [L, W] = r.useState(!1),
      [T, p] = r.useState(0),
      [I, v] = r.useState(0),
      [j, z] = r.useState(0),
      N = r.useRef(null),
      H = r.useRef(null),
      [w, y] = r.useState(0);
    (r.useEffect(() => {
      localStorage.setItem("managerActiveTab", C);
    }, [C]),
      r.useEffect(() => {
        localStorage.setItem("managerCollectionsView", Q);
      }, [Q]),
      r.useEffect(() => {
        const ne = async () => {
          try {
            const K = await as.getPendingRequests();
            y(K.length);
          } catch (K) {
            console.error("Erro ao buscar autorizações pendentes:", K);
          }
        };
        ne();
        const Re = setInterval(ne, 3e4);
        return () => clearInterval(Re);
      }, []),
      r.useEffect(() => {
        const ne = (Re) => {
          N.current && !N.current.contains(Re.target) && W(!1);
        };
        return (
          L && document.addEventListener("mousedown", ne),
          () => {
            document.removeEventListener("mousedown", ne);
          }
        );
      }, [L]));
    const S = (ne) => {
        (v(ne.targetTouches[0].clientX), z(0));
      },
      _ = (ne) => {
        z(ne.targetTouches[0].clientX);
      },
      J = () => {
        if (!I || !j) return;
        const ne = I - j,
          Re = ne > 50,
          K = ne < -50;
        (Re && T < 2 && p(T + 1), K && T > 0 && p(T - 1), v(0), z(0));
      },
      Z = () => {
        p(T < 2 ? T + 1 : 0);
      },
      he = () => {
        p(T > 0 ? T - 1 : 2);
      },
      xe = x(),
      R = h(),
      pe = i(U, "manager"),
      fe =
        Y === "with-collector"
          ? E.filter((ne) => ne.user_id && ne.user_id.trim() !== "")
          : E,
      we = fe.reduce((ne, Re) => ne + Re.valor_original, 0),
      re = fe.reduce((ne, Re) => ne + Re.valor_recebido, 0),
      de = fe.filter((ne) => {
        var Re;
        return (
          ((Re = ne.status) == null ? void 0 : Re.toLowerCase()) ===
            "recebido" || ne.valor_recebido > 0
        );
      }).length,
      oe = fe.length,
      P = {
        totalAmount: we,
        receivedAmount: re,
        totalReceived: de,
        totalCollections: oe,
        pendingAmount: we - re,
        conversionRate: oe > 0 ? (de / oe) * 100 : 0,
      },
      se = D(),
      Ae = Qt(se.length),
      Ve = () => {
        switch (C) {
          case "database-upload":
            return e.jsx(Qa, {});
          case "overview":
            const ne = new Map();
            (fe.forEach((ae) => {
              const ke = `${ae.venda_n}-${ae.documento}`;
              ne.has(ke) ||
                ne.set(ke, {
                  isPending: !1,
                  clientDocument: ae.documento || "",
                  totalValue: 0,
                  receivedValue: 0,
                });
              const Te = ne.get(ke);
              ((Te.totalValue += ae.valor_original),
                (Te.receivedValue += ae.valor_recebido));
            }),
              ne.forEach((ae) => {
                const ke = ae.totalValue - ae.receivedValue;
                ae.isPending = ke > 0.01;
              }));
            const Re = Array.from(ne.values()).filter(
                (ae) => ae.isPending,
              ).length,
              K = Array.from(ne.values()).filter((ae) => !ae.isPending).length,
              B = new Set(
                Array.from(ne.values())
                  .filter((ae) => ae.isPending)
                  .map((ae) => ae.clientDocument)
                  .filter(Boolean),
              ).size,
              X = fe.filter((ae) => {
                const ke = new Date().toISOString().split("T")[0];
                return ae.data_vencimento === ke;
              }),
              je = X.reduce((ae, ke) => ae + ke.valor_original, 0),
              Se = new Set(fe.map((ae) => ae.nome_da_loja).filter(Boolean))
                .size;
            return e.jsxs("div", {
              className: "space-y-4 sm:space-y-6",
              children: [
                e.jsx("div", {
                  className:
                    "bg-white rounded-lg sm:rounded-xl shadow-sm p-3 sm:p-4 border border-gray-200",
                  children: e.jsxs("div", {
                    className:
                      "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 sm:gap-4",
                    children: [
                      e.jsx("h2", {
                        className:
                          "text-base sm:text-lg lg:text-xl font-semibold text-gray-900",
                        children: "Visão Geral",
                      }),
                      e.jsxs("div", {
                        className:
                          "flex flex-col sm:flex-row sm:items-center gap-3",
                        children: [
                          e.jsx("label", {
                            className: "text-sm font-medium text-gray-700",
                            children: "Filtrar por cobrador:",
                          }),
                          e.jsxs("div", {
                            className: "flex bg-gray-100 rounded-md p-0.5",
                            children: [
                              e.jsx("button", {
                                onClick: () => G("all"),
                                className: `px-3 py-1.5 rounded-md text-xs sm:text-sm font-medium transition-all duration-200 whitespace-nowrap ${Y === "all" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                                children: "Tudo",
                              }),
                              e.jsx("button", {
                                onClick: () => G("with-collector"),
                                className: `px-3 py-1.5 rounded-md text-xs sm:text-sm font-medium transition-all duration-200 whitespace-nowrap ${Y === "with-collector" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                                children: "Apenas com cobrador",
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className: "space-y-4",
                  children: [
                    e.jsx("div", {
                      className: "flex items-center justify-end",
                      children: e.jsxs("div", {
                        className: "hidden sm:flex items-center gap-1",
                        children: [
                          e.jsx("button", {
                            onClick: he,
                            className:
                              "p-1 rounded-full hover:bg-gray-100 transition-colors",
                            children: e.jsx(ws, {
                              className: "h-4 w-4 text-gray-600",
                            }),
                          }),
                          e.jsx("button", {
                            onClick: Z,
                            className:
                              "p-1 rounded-full hover:bg-gray-100 transition-colors",
                            children: e.jsx(js, {
                              className: "h-4 w-4 text-gray-600",
                            }),
                          }),
                        ],
                      }),
                    }),
                    e.jsx("div", {
                      ref: H,
                      className: "relative overflow-hidden",
                      onTouchStart: S,
                      onTouchMove: _,
                      onTouchEnd: J,
                      style: { touchAction: "pan-y pinch-zoom" },
                      children: e.jsxs("div", {
                        className:
                          "flex transition-transform duration-300 ease-in-out",
                        style: { transform: `translateX(-${T * 100}%)` },
                        children: [
                          e.jsxs("div", {
                            className: "w-full flex-shrink-0",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center gap-2 mb-3 sm:mb-4",
                                children: [
                                  e.jsx(Oe, {
                                    className: "h-4 w-4 text-blue-600",
                                  }),
                                  e.jsx("h4", {
                                    className:
                                      "font-medium text-gray-900 text-sm sm:text-base",
                                    children: "Métricas Financeiras",
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-6 mb-4",
                                children: [
                                  e.jsx(ss, {
                                    title: "Valor Total",
                                    value: q(P.totalAmount),
                                    change: `${P.totalCollections} cobranças`,
                                    changeType: "neutral",
                                    icon: Oe,
                                    iconColor: "bg-blue-500",
                                    onClick: () => V("collections"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Total em Aberto",
                                    value: q(P.pendingAmount),
                                    change: "+12% vs mês anterior",
                                    changeType: "positive",
                                    icon: Oe,
                                    iconColor: "bg-red-500",
                                    onClick: () => V("collections"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Total Recebido",
                                    value: q(P.receivedAmount),
                                    change: "+8% vs mês anterior",
                                    changeType: "positive",
                                    icon: ks,
                                    iconColor: "bg-green-500",
                                    onClick: () => V("collections"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Taxa de Conversão",
                                    value: `${P.conversionRate.toFixed(1)}%`,
                                    change: "+2.1% vs mês anterior",
                                    changeType: "positive",
                                    icon: As,
                                    iconColor: "bg-blue-500",
                                    onClick: () => V("performance"),
                                  }),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className: "w-full flex-shrink-0",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center gap-2 mb-3 sm:mb-4",
                                children: [
                                  e.jsx(Ss, {
                                    className: "h-4 w-4 text-green-600",
                                  }),
                                  e.jsx("h4", {
                                    className:
                                      "font-medium text-gray-900 text-sm sm:text-base",
                                    children: "Métricas Operacionais",
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 lg:gap-6",
                                children: [
                                  e.jsx(ss, {
                                    title: "Vendas Finalizadas",
                                    value: K.toString(),
                                    change: `${((K / (K + Re)) * 100).toFixed(1)}% concluídas`,
                                    changeType: "positive",
                                    icon: Le,
                                    iconColor: "bg-green-500",
                                    onClick: () => V("collections"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Clientes com Pendências",
                                    value: B.toString(),
                                    change: `${Re} vendas pendentes`,
                                    changeType: "negative",
                                    icon: is,
                                    iconColor: "bg-orange-600",
                                    onClick: () => V("collections"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Vencimentos Hoje",
                                    value: q(je),
                                    change: `${X.length} títulos`,
                                    changeType: "neutral",
                                    icon: Me,
                                    iconColor: "bg-orange-500",
                                    onClick: () => {
                                      const ae = new Date()
                                        .toISOString()
                                        .split("T")[0];
                                      (A({ ...U, dueDate: ae }),
                                        V("collections"));
                                    },
                                  }),
                                ],
                              }),
                            ],
                          }),
                          e.jsxs("div", {
                            className: "w-full flex-shrink-0",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center gap-2 mb-3 sm:mb-4",
                                children: [
                                  e.jsx(Ss, {
                                    className: "h-4 w-4 text-indigo-600",
                                  }),
                                  e.jsx("h4", {
                                    className:
                                      "font-medium text-gray-900 text-sm sm:text-base",
                                    children: "Ecossistema de Cobrança",
                                  }),
                                ],
                              }),
                              e.jsxs("div", {
                                className:
                                  "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 lg:gap-6",
                                children: [
                                  e.jsx(ss, {
                                    title: "Time Ativo",
                                    value: xe.collectorsCount.toString(),
                                    change: "cobradores em campo",
                                    changeType: "neutral",
                                    icon: is,
                                    iconColor: "bg-purple-500",
                                    onClick: () => V("users"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Cobertura da Rede",
                                    value: Se.toString(),
                                    change: "pontos ativos",
                                    changeType: "neutral",
                                    icon: Is,
                                    iconColor: "bg-indigo-500",
                                    onClick: () => V("stores"),
                                  }),
                                  e.jsx(ss, {
                                    title: "Eficiência Média",
                                    value: `${R.length > 0 ? (R.reduce((ae, ke) => ae + ke.conversionRate, 0) / R.length).toFixed(1) : "0.0"}%`,
                                    change: "conversão da equipe",
                                    changeType: "positive",
                                    icon: ks,
                                    iconColor: "bg-green-500",
                                    onClick: () => V("performance"),
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    }),
                    e.jsx("div", {
                      className: "flex sm:hidden justify-center gap-1.5 mt-4",
                      children: [0, 1, 2].map((ae) =>
                        e.jsx(
                          "button",
                          {
                            onClick: () => p(ae),
                            className: `w-2 h-2 rounded-full transition-colors touch-manipulation ${T === ae ? "bg-blue-600" : "bg-gray-300"}`,
                          },
                          ae,
                        ),
                      ),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "bg-white rounded-lg sm:rounded-xl shadow-sm border border-gray-200 p-4 lg:p-6",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center justify-between mb-4",
                      children: [
                        e.jsx("h3", {
                          className:
                            "text-base lg:text-lg font-semibold text-gray-900",
                          children: "Foco do Dia",
                        }),
                        e.jsx(Ss, { className: "h-5 w-5 text-blue-500" }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-3",
                      children: [
                        e.jsxs("div", {
                          className: "flex justify-between items-center",
                          children: [
                            e.jsx("span", {
                              className: "text-sm text-gray-600",
                              children: "Vencimentos hoje",
                            }),
                            e.jsxs("span", {
                              className: "font-semibold text-gray-900",
                              children: [X.length, " títulos"],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "flex justify-between items-center",
                          children: [
                            e.jsx("span", {
                              className: "text-sm text-gray-600",
                              children: "Meta de recuperação",
                            }),
                            e.jsx("span", {
                              className: "font-semibold text-green-600",
                              children: "85%",
                            }),
                          ],
                        }),
                        e.jsx("div", {
                          className: "pt-3 border-t border-gray-200",
                          children: e.jsxs("div", {
                            className: "flex items-center justify-between",
                            children: [
                              e.jsx("span", {
                                className: "text-sm font-medium text-gray-700",
                                children: "Valor a receber hoje",
                              }),
                              e.jsx("span", {
                                className: "text-lg font-bold text-blue-600",
                                children: q(je),
                              }),
                            ],
                          }),
                        }),
                        e.jsxs("button", {
                          onClick: () => {
                            const ae = new Date().toISOString().split("T")[0];
                            (A({ ...U, dueDate: ae }), V("collections"));
                          },
                          className:
                            "w-full mt-4 px-4 py-2 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition-colors text-sm font-medium flex items-center justify-center",
                          children: [
                            e.jsx(Me, { className: "h-4 w-4 mr-2" }),
                            "Ver Vencimentos de Hoje",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                se.length > 0 &&
                  e.jsx("div", {
                    className:
                      "bg-yellow-50 border border-yellow-200 rounded-lg sm:rounded-xl p-4 lg:p-6",
                    children: e.jsxs("div", {
                      className: "flex items-start",
                      children: [
                        e.jsx(Ge, {
                          className:
                            "h-5 w-5 text-yellow-600 mt-0.5 mr-3 flex-shrink-0",
                        }),
                        e.jsxs("div", {
                          className: "flex-1",
                          children: [
                            e.jsxs("h3", {
                              className:
                                "text-base font-semibold text-gray-900 mb-1",
                              children: [
                                se.length,
                                " Solicitações de Cancelamento Pendentes",
                              ],
                            }),
                            e.jsx("p", {
                              className: "text-sm text-gray-600 mb-3",
                              children:
                                "Existem cancelamentos de visitas aguardando sua aprovação.",
                            }),
                            e.jsx("button", {
                              onClick: () => V("visit-tracking"),
                              className:
                                "px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors text-sm font-medium",
                              children: "Revisar Solicitações",
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                e.jsx("div", {
                  className:
                    "bg-white rounded-lg sm:rounded-xl shadow-sm border border-gray-200",
                  children: e.jsxs("div", {
                    className: "p-3 sm:p-4 lg:p-6",
                    children: [
                      e.jsxs("div", {
                        className:
                          "flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 sm:gap-4 mb-3 sm:mb-4 lg:mb-6",
                        children: [
                          e.jsxs("div", {
                            className: "min-w-0",
                            children: [
                              e.jsx("h2", {
                                className:
                                  "text-base sm:text-lg lg:text-xl font-semibold text-gray-900 truncate",
                                children: "Desempenho dos Cobradores",
                              }),
                              e.jsx("p", {
                                className:
                                  "text-xs sm:text-sm text-gray-600 mt-1",
                                children:
                                  "Acompanhamento detalhado por cobrador",
                              }),
                            ],
                          }),
                          e.jsxs("button", {
                            className:
                              "inline-flex items-center justify-center px-3 sm:px-3 lg:px-4 py-2 sm:py-2 bg-blue-600 text-white rounded-md sm:rounded-lg hover:bg-blue-700 transition-colors text-xs sm:text-sm font-medium whitespace-nowrap touch-manipulation",
                            children: [
                              e.jsx($s, {
                                className:
                                  "h-3.5 w-3.5 sm:h-4 sm:w-4 mr-1.5 sm:mr-2",
                              }),
                              e.jsx("span", {
                                className: "hidden sm:inline",
                                children: "Exportar Dados",
                              }),
                              e.jsx("span", {
                                className: "sm:hidden",
                                children: "Exportar",
                              }),
                            ],
                          }),
                        ],
                      }),
                      e.jsx("div", {
                        className: "space-y-3 lg:hidden",
                        children: R.map((ae) =>
                          e.jsxs(
                            "div",
                            {
                              className:
                                "bg-gray-50 rounded-lg p-3 border border-gray-200",
                              children: [
                                e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between mb-3",
                                  children: [
                                    e.jsx("h3", {
                                      className:
                                        "font-medium text-sm text-gray-900 truncate flex-1 mr-2",
                                      children: ae.collectorName,
                                    }),
                                    e.jsxs("span", {
                                      className: `inline-flex px-2 py-0.5 text-xs font-semibold rounded-full whitespace-nowrap ${ae.conversionRate >= 50 ? "bg-green-100 text-green-800" : ae.conversionRate >= 25 ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                                      children: [
                                        ae.conversionRate.toFixed(1),
                                        "%",
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsxs("div", {
                                  className:
                                    "grid grid-cols-2 gap-2 text-center",
                                  children: [
                                    e.jsxs("div", {
                                      className: "bg-white rounded-md p-2",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-sm text-gray-900",
                                          children: ae.totalAssigned,
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: "Vendas",
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "bg-white rounded-md p-2",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-sm text-green-600",
                                          children: ae.totalReceived,
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: "Pagas",
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "bg-white rounded-md p-2",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-sm text-blue-600",
                                          children: ae.clientCount,
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: "Clientes",
                                        }),
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "bg-white rounded-md p-2",
                                      children: [
                                        e.jsx("div", {
                                          className:
                                            "font-semibold text-xs text-blue-600 truncate",
                                          children: q(ae.receivedAmount),
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: "Valor",
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                                e.jsx("div", {
                                  className:
                                    "mt-2 pt-2 border-t border-gray-200 text-xs text-gray-600",
                                  children: e.jsx("div", {
                                    className: "flex justify-between",
                                    children: e.jsxs("span", {
                                      children: [
                                        "Tempo médio: ",
                                        e.jsxs("span", {
                                          className:
                                            "font-medium text-gray-900",
                                          children: [
                                            ae.averageTime.toFixed(0),
                                            " dias",
                                          ],
                                        }),
                                      ],
                                    }),
                                  }),
                                }),
                              ],
                            },
                            ae.collectorId,
                          ),
                        ),
                      }),
                      e.jsx("div", {
                        className: "hidden lg:block overflow-x-auto",
                        children: e.jsxs("table", {
                          className: "w-full",
                          children: [
                            e.jsx("thead", {
                              children: e.jsxs("tr", {
                                className: "border-b border-gray-200",
                                children: [
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Cobrador",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Clientes",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Vendas Atribuídas",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Vendas Pagas",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Taxa",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Valor Total",
                                  }),
                                  e.jsx("th", {
                                    className:
                                      "text-left py-3 px-4 font-medium text-gray-900",
                                    children: "Tempo Médio",
                                  }),
                                ],
                              }),
                            }),
                            e.jsx("tbody", {
                              children:
                                R.length === 0
                                  ? e.jsx("tr", {
                                      children: e.jsx("td", {
                                        colSpan: 7,
                                        className:
                                          "py-8 text-center text-gray-500",
                                        children: "Nenhum cobrador encontrado",
                                      }),
                                    })
                                  : R.map((ae) =>
                                      e.jsxs(
                                        "tr",
                                        {
                                          className:
                                            "border-b border-gray-100 hover:bg-gray-50",
                                          children: [
                                            e.jsx("td", {
                                              className: "py-3 px-4",
                                              children: e.jsx("div", {
                                                className:
                                                  "font-medium text-gray-900",
                                                children: ae.collectorName,
                                              }),
                                            }),
                                            e.jsx("td", {
                                              className:
                                                "py-3 px-4 text-gray-600",
                                              children: ae.clientCount,
                                            }),
                                            e.jsx("td", {
                                              className:
                                                "py-3 px-4 text-gray-600",
                                              children: ae.totalAssigned,
                                            }),
                                            e.jsx("td", {
                                              className:
                                                "py-3 px-4 text-gray-600",
                                              children: ae.totalReceived,
                                            }),
                                            e.jsx("td", {
                                              className: "py-3 px-4",
                                              children: e.jsxs("span", {
                                                className: `inline-flex px-2 py-1 text-xs font-semibold rounded-full ${ae.conversionRate >= 50 ? "bg-green-100 text-green-800" : ae.conversionRate >= 25 ? "bg-yellow-100 text-yellow-800" : "bg-red-100 text-red-800"}`,
                                                children: [
                                                  ae.conversionRate.toFixed(1),
                                                  "%",
                                                ],
                                              }),
                                            }),
                                            e.jsx("td", {
                                              className:
                                                "py-3 px-4 text-gray-600",
                                              children: q(ae.receivedAmount),
                                            }),
                                            e.jsxs("td", {
                                              className:
                                                "py-3 px-4 text-gray-600",
                                              children: [
                                                ae.averageTime.toFixed(0),
                                                " dias",
                                              ],
                                            }),
                                          ],
                                        },
                                        ae.collectorId,
                                      ),
                                    ),
                            }),
                          ],
                        }),
                      }),
                    ],
                  }),
                }),
              ],
            });
          case "collections":
            return e.jsxs("div", {
              className: "space-y-3 sm:space-y-4",
              children: [
                e.jsxs("div", {
                  className:
                    "bg-white rounded-xl shadow-sm border border-gray-200 p-4 lg:p-6 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4",
                  children: [
                    e.jsxs("h2", {
                      className:
                        "text-xl lg:text-2xl font-bold text-gray-900 flex items-center",
                      children: [
                        e.jsx(rs, {
                          className:
                            "h-5 w-5 lg:h-6 lg:w-6 mr-2 text-blue-600 flex-shrink-0",
                        }),
                        "Cobranças",
                      ],
                    }),
                    e.jsxs("div", {
                      className:
                        "flex bg-gray-100 rounded-md p-0.5 w-full sm:w-auto",
                      children: [
                        e.jsxs("button", {
                          onClick: () => ee("table"),
                          className: `flex-1 sm:flex-none px-2 sm:px-3 lg:px-4 py-1.5 sm:py-2 rounded-md text-xs sm:text-sm font-medium transition-all duration-200 whitespace-nowrap touch-manipulation ${Q === "table" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                          children: [
                            e.jsx(rs, {
                              className:
                                "h-3.5 w-3.5 sm:h-4 sm:w-4 mr-1 lg:mr-2 inline",
                            }),
                            e.jsx("span", {
                              className: "hidden sm:inline",
                              children: "Todas as Cobranças",
                            }),
                            e.jsx("span", {
                              className: "sm:hidden",
                              children: "Cobranças",
                            }),
                          ],
                        }),
                        e.jsxs("button", {
                          onClick: () => ee("cash-report"),
                          className: `flex-1 sm:flex-none px-2 sm:px-3 lg:px-4 py-1.5 sm:py-2 rounded-md text-xs sm:text-sm font-medium transition-all duration-200 whitespace-nowrap touch-manipulation ${Q === "cash-report" ? "bg-white text-blue-600 shadow-sm" : "text-gray-600 hover:text-gray-900"}`,
                          children: [
                            e.jsx(Oe, {
                              className:
                                "h-3.5 w-3.5 sm:h-4 sm:w-4 mr-1 lg:mr-2 inline",
                            }),
                            e.jsx("span", {
                              className: "hidden sm:inline",
                              children: "Relatório do Caixa",
                            }),
                            e.jsx("span", {
                              className: "sm:hidden",
                              children: "Caixa",
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                Q === "table"
                  ? e.jsxs("div", {
                      children: [
                        e.jsx(bt, {
                          filters: U,
                          onFilterChange: A,
                          userType: "manager",
                        }),
                        e.jsx(Jt, {
                          collections: pe,
                          userType: "manager",
                          showGrouped: !1,
                        }),
                      ],
                    })
                  : e.jsx(Xa, { collections: E }),
              ],
            });
          case "performance":
            return e.jsx(Wa, {});
          case "stores":
            return e.jsx(Ja, {});
          case "clients":
            return e.jsx(Ya, {});
          case "visit-tracking":
            return e.jsx(Za, {});
          case "authorization":
            return e.jsx(tr, {});
          case "users":
            return e.jsx(Ka, {});
          default:
            return null;
        }
      };
    return e.jsx("div", {
      className: "min-h-screen",
      children: e.jsxs("div", {
        className: "p-6 w-full md:max-w-[90%] mx-auto",
        children: [
          e.jsx("div", {
            className: "hidden lg:block mb-4 sm:mb-6 lg:mb-8",
            children: e.jsx("div", {
              className: "border-b border-gray-200",
              children: e.jsx("nav", {
                className: "flex space-x-1",
                children: Ae.map((ne) => {
                  const Re = ne.icon;
                  return e.jsxs(
                    "button",
                    {
                      onClick: () => V(ne.id),
                      className: `flex items-center py-3 px-4 border-b-2 font-medium text-sm whitespace-nowrap relative transition-colors ${C === ne.id ? "border-blue-500 text-blue-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"}`,
                      children: [
                        e.jsx(Re, { className: "h-4 w-4 mr-2 flex-shrink-0" }),
                        e.jsx("span", { children: ne.name }),
                        ne.id === "visit-tracking" &&
                          se.length > 0 &&
                          e.jsx("span", {
                            className:
                              "absolute -top-1 -right-1 h-5 w-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center font-medium",
                            children: se.length,
                          }),
                        ne.id === "authorization" &&
                          w > 0 &&
                          e.jsx("span", {
                            className:
                              "absolute -top-1 -right-1 h-5 w-5 bg-blue-500 text-white text-xs rounded-full flex items-center justify-center font-medium",
                            children: w,
                          }),
                      ],
                    },
                    ne.id,
                  );
                }),
              }),
            }),
          }),
          e.jsx("div", { className: "animate-fadeIn", children: Ve() }),
        ],
      }),
    });
  },
  rr = ({ clientGroups: s }) => {
    const { getVisitsByCollector: t, getFilteredCollections: x } = Je(),
      { user: h } = ts(),
      [i, D] = r.useState([]),
      [E, O] = r.useState(!1),
      [F, C] = r.useState({}),
      [V, U] = r.useState(1),
      [A, Q] = r.useState(100),
      [ee, Y] = r.useState(null),
      [G, L] = r.useState(!1),
      [W, T] = r.useState(!1),
      [p, I] = r.useState({ title: "", message: "", type: "info" }),
      [v, j] = r.useState(!1),
      z = r.useMemo(() => {
        if (!h || h.type !== "collector") return [];
        let c = t(h.id).filter((M) => M.status === "agendada");
        return (
          (F.dateFrom || F.dateTo) &&
            (c = c.filter((M) => {
              const l = new Date(M.scheduledDate);
              if (F.dateFrom) {
                const n = new Date(F.dateFrom);
                if (l < n) return !1;
              }
              if (F.dateTo) {
                const n = new Date(F.dateTo);
                if ((n.setHours(23, 59, 59, 999), l > n)) return !1;
              }
              return !0;
            })),
          c
        );
      }, [h, t, F.dateFrom, F.dateTo]),
      N = r.useMemo(() => {
        if (!h) return [];
        const c = { ...F };
        return (delete c.dateFrom, delete c.dateTo, x(c, "collector", h.id));
      }, [F, h, x]),
      H = r.useMemo(() => {
        const c = new Map();
        N.forEach((n) => {
          const d = `${n.documento}-${n.cliente}`;
          if (!c.has(d)) {
            const a = s.find((f) => f.document === n.documento);
            a &&
              a.pendingValue > 0 &&
              c.set(d, {
                ...a,
                sales: [],
                totalValue: 0,
                totalReceived: 0,
                pendingValue: 0,
              });
          }
        });
        const M = Array.from(c.values());
        M.forEach((n) => {
          const d = N.filter((f) => f.documento === n.document),
            a = new Map();
          (d.forEach((f) => {
            const $ = f.venda_n;
            (a.has($) ||
              a.set($, {
                saleNumber: f.venda_n,
                installments: [],
                totalValue: 0,
                totalReceived: 0,
                pendingValue: 0,
              }),
              a.get($).installments.push(f));
          }),
            a.forEach((f) => {
              ((f.totalValue = f.installments.reduce(
                ($, te) => $ + te.valor_original,
                0,
              )),
                (f.totalReceived = f.installments.reduce(
                  ($, te) => $ + te.valor_recebido,
                  0,
                )),
                (f.pendingValue = Math.max(0, f.totalValue - f.totalReceived)));
            }),
            (n.sales = Array.from(a.values())),
            (n.totalValue = d.reduce((f, $) => f + $.valor_original, 0)),
            (n.totalReceived = d.reduce((f, $) => f + $.valor_recebido, 0)),
            (n.pendingValue = Math.max(0, n.totalValue - n.totalReceived)));
        });
        let l = M.filter((n) => n.pendingValue > 0);
        if (F.visitsOnly) {
          const n = z.map((d) => d.clientDocument);
          l = l.filter((d) => n.includes(d.document));
        }
        return l;
      }, [N, s, F.visitsOnly, z]),
      w = (c, M) => {
        if (!c) return !1;
        const l = new Date();
        return new Date(`${c}T${M || "23:59"}`) < l;
      },
      y = (c) => {
        var M;
        return (
          ((M = c.notes) == null ? void 0 : M.includes("Reagendado")) || !1
        );
      },
      S = (c) => (c.notes ? (c.notes.match(/Reagendado/g) || []).length : 0),
      _ = r.useMemo(() => {
        const c = H.filter((a) =>
            z.some((f) => f.clientDocument === a.document),
          ).map((a) => {
            const f = z.find((u) => u.clientDocument === a.document),
              $ = w(
                f == null ? void 0 : f.scheduledDate,
                f == null ? void 0 : f.scheduledTime,
              ),
              te = y(f),
              g = S(f);
            return {
              ...a,
              hasVisit: !0,
              visitDate: f == null ? void 0 : f.scheduledDate,
              visitTime: f == null ? void 0 : f.scheduledTime,
              visitId: f == null ? void 0 : f.id,
              isOverdue: $,
              isRescheduled: te,
              rescheduleCount: g,
            };
          }),
          M = c.filter((a) => a.isOverdue),
          l = c.filter((a) => a.isRescheduled && !a.isOverdue),
          n = c.filter((a) => !a.isOverdue && !a.isRescheduled),
          d = H.filter(
            (a) => !z.some((f) => f.clientDocument === a.document),
          ).map((a) => ({ ...a, hasVisit: !1 }));
        return {
          overdueVisits: M,
          scheduledVisits: n,
          rescheduledVisits: l,
          withoutVisits: d,
          withVisits: n,
        };
      }, [H, z]),
      J = r.useMemo(
        () => [
          ..._.overdueVisits,
          ..._.scheduledVisits,
          ..._.rescheduledVisits,
          ..._.withoutVisits,
        ],
        [_],
      ),
      Z = Math.ceil(J.length / A),
      he = (V - 1) * A,
      xe = he + A,
      R = J.slice(he, xe),
      ge = R.filter((c) => "hasVisit" in c && c.hasVisit && c.isOverdue),
      pe = R.filter(
        (c) =>
          "hasVisit" in c && c.hasVisit && !c.isOverdue && !c.isRescheduled,
      ),
      fe = R.filter(
        (c) => "hasVisit" in c && c.hasVisit && c.isRescheduled && !c.isOverdue,
      ),
      we = R.filter((c) => !("hasVisit" in c) || !c.hasVisit),
      re = (c) => {
        D((M) => (M.includes(c) ? M.filter((l) => l !== c) : [...M, c]));
      },
      de = () => {
        const c = [
          ..._.overdueVisits,
          ..._.scheduledVisits,
          ..._.rescheduledVisits,
          ..._.withoutVisits,
        ];
        i.length === c.length ? D([]) : D(c.map((M) => M.document));
      },
      oe = () => {
        const c = [
          ..._.overdueVisits,
          ..._.scheduledVisits,
          ..._.rescheduledVisits,
        ];
        i.length === c.length && c.every((M) => i.includes(M.document))
          ? D([])
          : D(c.map((M) => M.document));
      },
      P = () => {
        if (i.length === 0) {
          (I({
            title: "Selecione Clientes",
            message: "Selecione pelo menos um cliente para otimizar a rota.",
            type: "info",
          }),
            T(!0));
          return;
        }
        (j(!0),
          setTimeout(() => {
            if (ee) K();
            else {
              O(!0);
              const c = _.overdueVisits.filter((f) => i.includes(f.document)),
                M = _.scheduledVisits.filter((f) => i.includes(f.document)),
                l = _.rescheduledVisits.filter((f) => i.includes(f.document)),
                n = _.withoutVisits.filter((f) => i.includes(f.document)),
                d = [
                  ...c.sort((f, $) =>
                    (f.visitTime || "").localeCompare($.visitTime || ""),
                  ),
                  ...M.sort((f, $) =>
                    (f.visitTime || "").localeCompare($.visitTime || ""),
                  ),
                  ...l.sort((f, $) =>
                    (f.visitTime || "").localeCompare($.visitTime || ""),
                  ),
                  ...n,
                ];
              D(d.map((f) => f.document));
              const a = c.length + M.length + l.length;
              (I({
                title: "Rota Otimizada por Prioridade!",
                message: `${a} visita${a !== 1 ? "s foram organizadas" : " foi organizada"} por prioridade: ${c.length} atrasada${c.length !== 1 ? "s" : ""}, ${M.length} agendada${M.length !== 1 ? "s" : ""}, ${l.length} reagendada${l.length !== 1 ? "s" : ""}.`,
                type: "success",
              }),
                T(!0));
            }
            j(!1);
          }, 1200));
      },
      Ae = J.filter((c) => i.includes(c.document)).reduce(
        (c, M) => c + M.pendingValue,
        0,
      ),
      Ve = (c, M, l, n) => {
        const a = ((l - c) * Math.PI) / 180,
          f = ((n - M) * Math.PI) / 180,
          $ =
            Math.sin(a / 2) * Math.sin(a / 2) +
            Math.cos((c * Math.PI) / 180) *
              Math.cos((l * Math.PI) / 180) *
              Math.sin(f / 2) *
              Math.sin(f / 2);
        return 6371 * (2 * Math.atan2(Math.sqrt($), Math.sqrt(1 - $)));
      },
      ne = (c) => {
        const M = {
            fortaleza: { lat: -3.7319, lng: -38.5267 },
            brasília: { lat: -15.7939, lng: -47.8828 },
            "são paulo": { lat: -23.5505, lng: -46.6333 },
            "rio de janeiro": { lat: -22.9068, lng: -43.1729 },
            "belo horizonte": { lat: -19.9167, lng: -43.9345 },
          },
          l = c.city.toLowerCase(),
          n = M[l] || M.fortaleza,
          d = 0.02,
          a = c.neighborhood.length + c.address.length,
          f = (((a % 100) - 50) / 100) * d,
          $ = ((((a * 7) % 100) - 50) / 100) * d;
        return { lat: n.lat + f, lng: n.lng + $ };
      },
      Re = () => {
        if ((L(!0), !navigator.geolocation)) {
          (I({
            title: "Geolocalização Não Suportada",
            message:
              "Seu navegador não suporta geolocalização. Tente usar um navegador mais recente.",
            type: "error",
          }),
            T(!0),
            L(!1));
          return;
        }
        navigator.geolocation.getCurrentPosition(
          (c) => {
            (Y({ lat: c.coords.latitude, lng: c.coords.longitude }),
              L(!1),
              I({
                title: "Localização Obtida!",
                message:
                  "Sua localização foi obtida com sucesso. Agora você pode otimizar rotas por proximidade.",
                type: "success",
              }),
              T(!0));
          },
          (c) => {
            console.error("Erro ao obter localização:", c);
            let M = "Não foi possível obter sua localização.";
            switch (c.code) {
              case c.PERMISSION_DENIED:
                M =
                  "Permissão negada. Verifique as configurações de localização do seu navegador.";
                break;
              case c.POSITION_UNAVAILABLE:
                M =
                  "Localização indisponível. Verifique sua conexão e tente novamente.";
                break;
              case c.TIMEOUT:
                M = "Tempo esgotado. Tente novamente em alguns segundos.";
                break;
            }
            (I({ title: "Erro de Localização", message: M, type: "error" }),
              T(!0),
              L(!1));
          },
          { enableHighAccuracy: !0, timeout: 1e4, maximumAge: 3e5 },
        );
      },
      K = () => {
        if (!ee) {
          (I({
            title: "Localização Necessária",
            message:
              'Para otimizar a rota por proximidade, primeiro permita o acesso à sua localização clicando em "Obter Localização".',
            type: "info",
          }),
            T(!0),
            j(!1));
          return;
        }
        const M = J.filter((a) => i.includes(a.document)).map((a) => ({
            ...a,
            coords: ne(a),
          })),
          l = [];
        let n = ee,
          d = [...M];
        for (; d.length > 0; ) {
          let a = 0,
            f = 1 / 0;
          d.forEach((te, g) => {
            const u = Ve(n.lat, n.lng, te.coords.lat, te.coords.lng);
            u < f && ((f = u), (a = g));
          });
          const $ = d[a];
          (l.push($.document), (n = $.coords), d.splice(a, 1));
        }
        (D(l),
          O(!0),
          I({
            title: "Rota Otimizada!",
            message: `${l.length} cliente${l.length !== 1 ? "s foram organizados" : " foi organizado"} por proximidade da sua localização.`,
            type: "success",
          }),
          T(!0));
      },
      B = () => {
        if (i.length === 0) return "";
        const c = J.filter((M) => i.includes(M.document));
        if (ee) {
          const M = `${ee.lat},${ee.lng}`;
          return `https://maps.google.com/maps?q=${encodeURIComponent(M)}&output=embed&z=12`;
        } else if (c.length === 1) {
          const M = c[0],
            l = `${M.address}, ${M.number}, ${M.neighborhood}, ${M.city}`;
          return `https://maps.google.com/maps?q=${encodeURIComponent(l)}&output=embed`;
        } else {
          const M = c[0],
            l = `${M.address}, ${M.number}, ${M.neighborhood}, ${M.city}`;
          return `https://maps.google.com/maps?q=${encodeURIComponent(l)}&output=embed&z=13`;
        }
      },
      X = () => {
        if (i.length === 0) return;
        const M = J.filter((n) => i.includes(n.document)).map(
          (n) => `${n.address}, ${n.number}, ${n.neighborhood}, ${n.city}`,
        );
        let l;
        if (ee) {
          const n = `${ee.lat},${ee.lng}`;
          if (M.length === 1)
            l = `https://www.google.com/maps/dir/${encodeURIComponent(n)}/${encodeURIComponent(M[0])}`;
          else {
            const d = M.map((a) => encodeURIComponent(a));
            l = `https://www.google.com/maps/dir/${encodeURIComponent(n)}/${d.join("/")}`;
          }
        } else
          M.length === 1
            ? (l = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(M[0])}`)
            : (l = `https://www.google.com/maps/dir/${M.map((d) => encodeURIComponent(d)).join("/")}`);
        window.open(l, "_blank");
      },
      je = (c) => {
        (C(c), U(1));
      },
      Se = (c) => {
        (Q(c), U(1));
      },
      ae = (c) => {
        U(c);
      },
      ke = () => {
        U((c) => Math.max(1, c - 1));
      },
      Te = () => {
        U((c) => Math.min(Z, c + 1));
      },
      le = (c) => {
        if (!c) return "Data não definida";
        try {
          const [M, l, n] = c.split("-");
          return `${n}/${l}/${M}`;
        } catch {
          return c;
        }
      };
    return e.jsxs("div", {
      className: "space-y-4 sm:space-y-6",
      children: [
        e.jsx("div", {
          className: "bg-white rounded-lg border border-gray-200",
          children: e.jsx("div", {
            className: "px-4 sm:px-6 py-4 border-b border-gray-200 bg-gray-50",
            children: e.jsxs("div", {
              className: "space-y-4",
              children: [
                e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center space-x-3",
                      children: [
                        e.jsx(Ps, { className: "h-5 w-5 text-blue-600" }),
                        e.jsx("h2", {
                          className: "text-lg font-semibold text-gray-900",
                          children: "Planejamento de Rota",
                        }),
                        e.jsxs("span", {
                          className: "text-sm text-gray-500",
                          children: [
                            J.length,
                            " cliente",
                            J.length !== 1 ? "s" : "",
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex items-center space-x-3",
                      children: [
                        _.overdueVisits.length > 0 &&
                          e.jsxs("span", {
                            className:
                              "px-2 py-1 bg-red-100 text-red-800 text-xs rounded-full font-medium animate-pulse",
                            children: [
                              _.overdueVisits.length,
                              " atrasada",
                              _.overdueVisits.length !== 1 ? "s" : "",
                            ],
                          }),
                        e.jsxs("span", {
                          className:
                            "px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full font-medium",
                          children: [
                            _.scheduledVisits.length,
                            " agendada",
                            _.scheduledVisits.length !== 1 ? "s" : "",
                          ],
                        }),
                        _.rescheduledVisits.length > 0 &&
                          e.jsxs("span", {
                            className:
                              "px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded-full font-medium",
                            children: [
                              _.rescheduledVisits.length,
                              " reagendada",
                              _.rescheduledVisits.length !== 1 ? "s" : "",
                            ],
                          }),
                      ],
                    }),
                  ],
                }),
                e.jsx("div", {
                  children: e.jsx(bt, {
                    filters: F,
                    onFilterChange: je,
                    userType: (h == null ? void 0 : h.type) || "collector",
                  }),
                }),
                e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center space-x-2",
                      children: [
                        e.jsx("span", {
                          className: "text-sm text-gray-600",
                          children: "Selecionar:",
                        }),
                        e.jsxs("div", {
                          className: "flex space-x-1",
                          children: [
                            e.jsx("button", {
                              onClick: de,
                              className: `px-3 py-2 rounded-lg text-sm transition-colors ${i.length === J.length ? "bg-blue-600 text-white" : "bg-white text-gray-700 hover:bg-gray-100 border border-gray-200"}`,
                              children:
                                i.length === J.length ? "✓ Todos" : "Todos",
                            }),
                            e.jsxs("button", {
                              onClick: oe,
                              className: `px-3 py-2 rounded-lg text-sm transition-colors ${i.length === _.overdueVisits.length + _.scheduledVisits.length + _.rescheduledVisits.length && [..._.overdueVisits, ..._.scheduledVisits, ..._.rescheduledVisits].every((c) => i.includes(c.document)) ? "bg-green-600 text-white" : "bg-white text-gray-700 hover:bg-gray-100 border border-gray-200"}`,
                              children: [
                                e.jsx(Me, { className: "h-4 w-4 mr-1 inline" }),
                                i.length ===
                                  _.overdueVisits.length +
                                    _.scheduledVisits.length +
                                    _.rescheduledVisits.length &&
                                [
                                  ..._.overdueVisits,
                                  ..._.scheduledVisits,
                                  ..._.rescheduledVisits,
                                ].every((c) => i.includes(c.document))
                                  ? "✓ Visitas"
                                  : "Visitas",
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex items-center space-x-2",
                      children: [
                        e.jsxs("button", {
                          onClick: Re,
                          disabled: G,
                          className: `flex items-center px-3 py-2 rounded-lg text-sm transition-colors ${ee ? "bg-green-600 text-white hover:bg-green-700" : "bg-orange-600 text-white hover:bg-orange-700"} disabled:opacity-50 disabled:cursor-not-allowed`,
                          title: ee
                            ? "Localização obtida"
                            : "Obter localização",
                          children: [
                            e.jsx(Fe, { className: "h-4 w-4 mr-2" }),
                            G ? "Obtendo..." : ee ? "✓ GPS" : "GPS",
                          ],
                        }),
                        e.jsxs("button", {
                          onClick: P,
                          disabled: i.length === 0 || v,
                          className: `flex items-center px-3 py-2 rounded-lg text-sm transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${ee ? "bg-blue-600 text-white hover:bg-blue-700" : "bg-gray-600 text-white hover:bg-gray-700"}`,
                          title: ee
                            ? "Otimizar por proximidade"
                            : "Organizar por prioridade",
                          children: [
                            v
                              ? e.jsx(Cs, {
                                  className: "h-4 w-4 mr-2 animate-spin",
                                })
                              : e.jsx(Ps, { className: "h-4 w-4 mr-2" }),
                            v ? "Otimizando..." : ee ? "Otimizar" : "Organizar",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                i.length > 0 &&
                  e.jsxs("div", {
                    className:
                      "flex items-center justify-between pt-2 border-t border-gray-200",
                    children: [
                      e.jsxs("div", {
                        className: "flex items-center space-x-2",
                        children: [
                          e.jsx(At, { className: "h-4 w-4 text-blue-600" }),
                          e.jsxs("span", {
                            className: "text-sm text-gray-700",
                            children: [
                              i.length,
                              " cliente",
                              i.length !== 1 ? "s" : "",
                              " selecionado",
                              i.length !== 1 ? "s" : "",
                            ],
                          }),
                          E &&
                            e.jsx("span", {
                              className:
                                "px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full font-medium",
                              children: "Otimizada",
                            }),
                        ],
                      }),
                      e.jsxs("div", {
                        className: "text-sm font-medium text-gray-900",
                        children: ["Total: ", q(Ae)],
                      }),
                    ],
                  }),
              ],
            }),
          }),
        }),
        i.length > 0 &&
          e.jsxs("div", {
            className:
              "bg-white rounded-lg border border-gray-200 overflow-hidden",
            children: [
              e.jsx("div", {
                className:
                  "px-4 sm:px-6 py-3 border-b border-gray-200 bg-gray-50",
                children: e.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center space-x-3",
                      children: [
                        e.jsx(Fe, { className: "h-5 w-5 text-blue-600" }),
                        e.jsx("h3", {
                          className: "text-lg font-semibold text-gray-900",
                          children: "Mapa da Rota",
                        }),
                        e.jsxs("span", {
                          className: "text-sm text-gray-500",
                          children: [
                            i.length,
                            " selecionado",
                            i.length !== 1 ? "s" : "",
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "flex items-center space-x-2",
                      children: [
                        ee &&
                          e.jsx("span", {
                            className:
                              "px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full font-medium",
                            children: "GPS ✓",
                          }),
                        E &&
                          e.jsx("span", {
                            className:
                              "px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full font-medium",
                            children: "Otimizada",
                          }),
                        e.jsxs("button", {
                          onClick: X,
                          className:
                            "flex items-center px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm",
                          title: "Abrir rota completa no Google Maps",
                          children: [
                            e.jsx(At, { className: "h-4 w-4 mr-2" }),
                            "Abrir Rota",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              e.jsx("div", {
                className: "relative",
                children: e.jsx(
                  "iframe",
                  {
                    src: B(),
                    width: "100%",
                    height: "400",
                    style: { border: 0 },
                    allowFullScreen: !0,
                    loading: "lazy",
                    referrerPolicy: "no-referrer-when-downgrade",
                    className: "w-full h-64 sm:h-96",
                    title: "Mapa dos clientes selecionados",
                  },
                  i.join(","),
                ),
              }),
            ],
          }),
        e.jsxs("div", {
          className: "rounded-lg shadow-sm overflow-hidden",
          children: [
            e.jsx("div", {
              className:
                "bg-white rounded-xl px-3 sm:px-4 py-3 sm:py-4 border-b border-gray-200",
              children: e.jsxs("div", {
                className: "flex items-center justify-between",
                children: [
                  e.jsxs("div", {
                    className: "min-w-0 flex-1",
                    children: [
                      e.jsxs("h3", {
                        className:
                          "text-base sm:text-lg font-semibold text-gray-900",
                        children: [
                          e.jsx("span", {
                            className: "hidden sm:inline",
                            children: "Clientes para Rota",
                          }),
                          e.jsx("span", {
                            className: "sm:hidden",
                            children: "Clientes",
                          }),
                        ],
                      }),
                      e.jsxs("div", {
                        className:
                          "flex flex-wrap items-center gap-2 mt-1 text-xs sm:text-sm",
                        children: [
                          e.jsxs("span", {
                            className: "text-gray-600",
                            children: [
                              J.length,
                              " total",
                              J.length !== 1 ? "s" : "",
                            ],
                          }),
                          _.overdueVisits.length > 0 &&
                            e.jsxs(e.Fragment, {
                              children: [
                                e.jsx("span", {
                                  className: "text-gray-400",
                                  children: "•",
                                }),
                                e.jsxs("span", {
                                  className: "text-red-600 font-medium",
                                  children: [
                                    _.overdueVisits.length,
                                    " atrasada",
                                    _.overdueVisits.length !== 1 ? "s" : "",
                                  ],
                                }),
                              ],
                            }),
                          e.jsx("span", {
                            className: "text-gray-400",
                            children: "•",
                          }),
                          e.jsxs("span", {
                            className: "text-green-600",
                            children: [
                              _.scheduledVisits.length,
                              " agendada",
                              _.scheduledVisits.length !== 1 ? "s" : "",
                            ],
                          }),
                          _.rescheduledVisits.length > 0 &&
                            e.jsxs(e.Fragment, {
                              children: [
                                e.jsx("span", {
                                  className: "text-gray-400",
                                  children: "•",
                                }),
                                e.jsxs("span", {
                                  className: "text-orange-600",
                                  children: [
                                    _.rescheduledVisits.length,
                                    " reagendada",
                                    _.rescheduledVisits.length !== 1 ? "s" : "",
                                  ],
                                }),
                              ],
                            }),
                          i.length > 0 &&
                            e.jsxs(e.Fragment, {
                              children: [
                                e.jsx("span", {
                                  className: "text-gray-400",
                                  children: "•",
                                }),
                                e.jsxs("span", {
                                  className: "text-blue-600 font-medium",
                                  children: [
                                    i.length,
                                    " selecionado",
                                    i.length !== 1 ? "s" : "",
                                  ],
                                }),
                              ],
                            }),
                        ],
                      }),
                    ],
                  }),
                  E &&
                    i.length > 0 &&
                    e.jsxs("div", {
                      className:
                        "bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs font-medium flex items-center",
                      children: [
                        e.jsx(Ps, { className: "h-3 w-3 mr-1" }),
                        e.jsx("span", {
                          className: "hidden sm:inline",
                          children: "Rota Otimizada",
                        }),
                        e.jsx("span", {
                          className: "sm:hidden",
                          children: "✓",
                        }),
                      ],
                    }),
                ],
              }),
            }),
            e.jsxs("div", {
              className: "space-y-4",
              children: [
                ge.length > 0 &&
                  e.jsxs("div", {
                    className:
                      "mt-4 bg-white rounded-lg shadow-sm border-2 border-red-500 overflow-hidden",
                    children: [
                      e.jsx("div", {
                        className:
                          "px-4 py-4 bg-gradient-to-r from-red-50 to-red-100 border-b border-red-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("h4", {
                              className:
                                "text-base font-semibold text-red-900 flex items-center",
                              children: [
                                e.jsx(Ie, {
                                  className: "h-5 w-5 text-red-700 mr-2",
                                }),
                                "⚠️ Visitas Atrasadas - URGENTE",
                              ],
                            }),
                            e.jsx("span", {
                              className:
                                "text-sm text-red-700 font-semibold bg-white/60 px-2 py-1 rounded-full animate-pulse",
                              children: _.overdueVisits.length,
                            }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className: "divide-y divide-gray-100",
                        children: ge.map((c) =>
                          e.jsx(
                            "div",
                            {
                              className:
                                "p-3 sm:p-4 hover:bg-red-50 transition-colors border-l-4 border-red-500 bg-red-50 cursor-pointer",
                              onClick: () => re(c.document),
                              children: e.jsxs("div", {
                                className: "flex gap-2 sm:gap-3",
                                children: [
                                  e.jsx("div", {
                                    className: "flex-shrink-0 pt-1",
                                    children: e.jsx("input", {
                                      type: "checkbox",
                                      checked: i.includes(c.document),
                                      onChange: () => re(c.document),
                                      onClick: (M) => M.stopPropagation(),
                                      className:
                                        "h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded",
                                    }),
                                  }),
                                  E &&
                                    i.includes(c.document) &&
                                    e.jsx("div", {
                                      className:
                                        "bg-blue-600 text-white h-5 w-5 sm:h-6 sm:w-6 text-xs font-bold px-1 py-0.5 sm:px-2 sm:py-1 rounded-full flex-shrink-0 flex items-center justify-center",
                                      children: i.indexOf(c.document) + 1,
                                    }),
                                  e.jsx("div", {
                                    className: "flex-1 min-w-0",
                                    children: e.jsxs("div", {
                                      className: "flex flex-col space-y-2",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-start justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className: "min-w-0 flex-1",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-medium text-gray-900 text-sm sm:text-base truncate",
                                                  children: c.client,
                                                }),
                                                e.jsx("div", {
                                                  className:
                                                    "text-xs sm:text-sm text-gray-500 font-mono",
                                                  children: c.document,
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className: "text-right ml-2",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 text-sm sm:text-base",
                                                  children: q(c.pendingValue),
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: [
                                                    c.sales.length,
                                                    " venda",
                                                    c.sales.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "h-2 w-2 bg-red-500 rounded-full mr-2 animate-pulse",
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "mr-2 sm:mr-4 font-bold text-red-600",
                                                  children: "⚠️ ATRASADA",
                                                }),
                                                e.jsx(Ie, {
                                                  className:
                                                    "h-3 w-3 text-gray-400 mr-1",
                                                }),
                                                e.jsxs("span", {
                                                  className:
                                                    "text-red-600 font-medium",
                                                  children: [
                                                    c.hasVisit
                                                      ? le(c.visitDate)
                                                      : "",
                                                    " ",
                                                    (c.hasVisit &&
                                                      c.visitTime) ||
                                                      "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                            c.phone &&
                                              e.jsxs("button", {
                                                className:
                                                  "inline-flex items-center px-2 py-1 text-xs bg-red-600 hover:bg-red-700 text-white rounded transition-colors",
                                                title: "Ligar para cliente",
                                                onClick: (M) =>
                                                  M.stopPropagation(),
                                                children: [
                                                  e.jsx(bs, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Ligar",
                                                  }),
                                                ],
                                              }),
                                          ],
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: e.jsxs("a", {
                                            href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${c.address}, ${c.number}, ${c.neighborhood}, ${c.city}`)}`,
                                            target: "_blank",
                                            rel: "noopener noreferrer",
                                            className:
                                              "inline-flex items-center text-blue-600 hover:text-blue-800 hover:underline transition-colors",
                                            onClick: (M) => M.stopPropagation(),
                                            children: [
                                              e.jsx(Fe, {
                                                className:
                                                  "h-3 w-3 mr-1 flex-shrink-0",
                                              }),
                                              e.jsxs("span", {
                                                className: "truncate",
                                                children: [
                                                  c.address,
                                                  ", ",
                                                  c.number,
                                                  " -",
                                                  " ",
                                                  c.neighborhood,
                                                  ", ",
                                                  c.city,
                                                ],
                                              }),
                                            ],
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                ],
                              }),
                            },
                            c.document,
                          ),
                        ),
                      }),
                    ],
                  }),
                pe.length > 0 &&
                  e.jsxs("div", {
                    className:
                      "mt-4 bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden",
                    children: [
                      e.jsx("div", {
                        className:
                          "px-4 py-4 bg-gradient-to-r from-green-50 to-green-100 border-b border-green-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("h4", {
                              className:
                                "text-base font-semibold text-green-900 flex items-center",
                              children: [
                                e.jsx(Me, {
                                  className: "h-5 w-5 text-green-700 mr-2",
                                }),
                                "Visitas Agendadas no Prazo",
                              ],
                            }),
                            e.jsx("span", {
                              className:
                                "text-sm text-green-700 font-semibold bg-white/60 px-2 py-1 rounded-full",
                              children: _.scheduledVisits.length,
                            }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className: "divide-y divide-gray-100",
                        children: pe.map((c) =>
                          e.jsx(
                            "div",
                            {
                              className:
                                "p-3 sm:p-4 hover:bg-gray-50 transition-colors border-l-2 border-green-400 cursor-pointer",
                              onClick: () => re(c.document),
                              children: e.jsxs("div", {
                                className: "flex gap-2 sm:gap-3",
                                children: [
                                  e.jsx("div", {
                                    className: "flex-shrink-0 pt-1",
                                    children: e.jsx("input", {
                                      type: "checkbox",
                                      checked: i.includes(c.document),
                                      onChange: () => re(c.document),
                                      onClick: (M) => M.stopPropagation(),
                                      className:
                                        "h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded",
                                    }),
                                  }),
                                  E &&
                                    i.includes(c.document) &&
                                    e.jsx("div", {
                                      className:
                                        "bg-blue-600 text-white h-5 w-5 sm:h-6 sm:w-6 text-xs font-bold px-1 py-0.5 sm:px-2 sm:py-1 rounded-full flex-shrink-0 flex items-center justify-center",
                                      children: i.indexOf(c.document) + 1,
                                    }),
                                  e.jsx("div", {
                                    className: "flex-1 min-w-0",
                                    children: e.jsxs("div", {
                                      className: "flex flex-col space-y-2",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-start justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className: "min-w-0 flex-1",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-medium text-gray-900 text-sm sm:text-base truncate",
                                                  children: c.client,
                                                }),
                                                e.jsx("div", {
                                                  className:
                                                    "text-xs sm:text-sm text-gray-500 font-mono",
                                                  children: c.document,
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className: "text-right ml-2",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 text-sm sm:text-base",
                                                  children: q(c.pendingValue),
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: [
                                                    c.sales.length,
                                                    " venda",
                                                    c.sales.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "h-2 w-2 bg-green-400 rounded-full mr-2",
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "mr-2 sm:mr-4 font-medium text-green-600",
                                                  children: "Agendada",
                                                }),
                                                e.jsx(Ie, {
                                                  className:
                                                    "h-3 w-3 text-gray-400 mr-1",
                                                }),
                                                e.jsxs("span", {
                                                  className: "text-gray-600",
                                                  children: [
                                                    c.hasVisit
                                                      ? le(c.visitDate)
                                                      : "",
                                                    " ",
                                                    (c.hasVisit &&
                                                      c.visitTime) ||
                                                      "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                            c.phone &&
                                              e.jsxs("button", {
                                                className:
                                                  "inline-flex items-center px-2 py-1 text-xs bg-green-600 hover:bg-green-700 text-white rounded transition-colors",
                                                title: "Ligar para cliente",
                                                onClick: (M) =>
                                                  M.stopPropagation(),
                                                children: [
                                                  e.jsx(bs, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Ligar",
                                                  }),
                                                ],
                                              }),
                                          ],
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: e.jsxs("a", {
                                            href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${c.address}, ${c.number}, ${c.neighborhood}, ${c.city}`)}`,
                                            target: "_blank",
                                            rel: "noopener noreferrer",
                                            className:
                                              "inline-flex items-center text-blue-600 hover:text-blue-800 hover:underline transition-colors",
                                            onClick: (M) => M.stopPropagation(),
                                            children: [
                                              e.jsx(Fe, {
                                                className:
                                                  "h-3 w-3 mr-1 flex-shrink-0",
                                              }),
                                              e.jsxs("span", {
                                                className: "truncate",
                                                children: [
                                                  c.address,
                                                  ", ",
                                                  c.number,
                                                  " -",
                                                  " ",
                                                  c.neighborhood,
                                                  ", ",
                                                  c.city,
                                                ],
                                              }),
                                            ],
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                ],
                              }),
                            },
                            c.document,
                          ),
                        ),
                      }),
                    ],
                  }),
                fe.length > 0 &&
                  e.jsxs("div", {
                    className:
                      "bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden",
                    children: [
                      e.jsx("div", {
                        className:
                          "px-4 py-4 bg-gradient-to-r from-orange-50 to-orange-100 border-b border-orange-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("h4", {
                              className:
                                "text-base font-semibold text-orange-900 flex items-center",
                              children: [
                                e.jsx(hs, {
                                  className: "h-5 w-5 text-orange-700 mr-2",
                                }),
                                "Visitas Reagendadas",
                              ],
                            }),
                            e.jsx("span", {
                              className:
                                "text-sm text-orange-700 font-semibold bg-white/60 px-2 py-1 rounded-full",
                              children: _.rescheduledVisits.length,
                            }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className: "divide-y divide-gray-100",
                        children: fe.map((c) =>
                          e.jsx(
                            "div",
                            {
                              className:
                                "p-3 sm:p-4 hover:bg-gray-50 transition-colors border-l-2 border-orange-500 bg-orange-50 cursor-pointer",
                              onClick: () => re(c.document),
                              children: e.jsxs("div", {
                                className: "flex gap-2 sm:gap-3",
                                children: [
                                  e.jsx("div", {
                                    className: "flex-shrink-0 pt-1",
                                    children: e.jsx("input", {
                                      type: "checkbox",
                                      checked: i.includes(c.document),
                                      onChange: () => re(c.document),
                                      onClick: (M) => M.stopPropagation(),
                                      className:
                                        "h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded",
                                    }),
                                  }),
                                  E &&
                                    i.includes(c.document) &&
                                    e.jsx("div", {
                                      className:
                                        "bg-blue-600 text-white h-5 w-5 sm:h-6 sm:w-6 text-xs font-bold px-1 py-0.5 sm:px-2 sm:py-1 rounded-full flex-shrink-0 flex items-center justify-center",
                                      children: i.indexOf(c.document) + 1,
                                    }),
                                  e.jsx("div", {
                                    className: "flex-1 min-w-0",
                                    children: e.jsxs("div", {
                                      className: "flex flex-col space-y-2",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-start justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className: "min-w-0 flex-1",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-medium text-gray-900 text-sm sm:text-base truncate",
                                                  children: c.client,
                                                }),
                                                e.jsx("div", {
                                                  className:
                                                    "text-xs sm:text-sm text-gray-500 font-mono",
                                                  children: c.document,
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className: "text-right ml-2",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 text-sm sm:text-base",
                                                  children: q(c.pendingValue),
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: [
                                                    c.sales.length,
                                                    " venda",
                                                    c.sales.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "h-2 w-2 bg-orange-500 rounded-full mr-2",
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "mr-2 sm:mr-4 font-medium text-orange-600",
                                                  children: "Reagendada",
                                                }),
                                                e.jsx(hs, {
                                                  className:
                                                    "h-3 w-3 text-orange-600 mr-1",
                                                }),
                                                c.hasVisit &&
                                                  c.rescheduleCount > 1 &&
                                                  e.jsxs("span", {
                                                    className:
                                                      "text-xs text-orange-600 font-medium mr-2 sm:mr-4",
                                                    children: [
                                                      "(",
                                                      c.rescheduleCount,
                                                      "x)",
                                                    ],
                                                  }),
                                                e.jsx(Ie, {
                                                  className:
                                                    "h-3 w-3 text-gray-400 mr-1",
                                                }),
                                                e.jsxs("span", {
                                                  className: "text-orange-600",
                                                  children: [
                                                    c.hasVisit
                                                      ? le(c.visitDate)
                                                      : "",
                                                    " ",
                                                    (c.hasVisit &&
                                                      c.visitTime) ||
                                                      "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                            c.phone &&
                                              e.jsxs("button", {
                                                className:
                                                  "inline-flex items-center px-2 py-1 text-xs bg-orange-600 hover:bg-orange-700 text-white rounded transition-colors",
                                                title: "Ligar para cliente",
                                                onClick: (M) =>
                                                  M.stopPropagation(),
                                                children: [
                                                  e.jsx(bs, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Ligar",
                                                  }),
                                                ],
                                              }),
                                          ],
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: e.jsxs("a", {
                                            href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${c.address}, ${c.number}, ${c.neighborhood}, ${c.city}`)}`,
                                            target: "_blank",
                                            rel: "noopener noreferrer",
                                            className:
                                              "inline-flex items-center text-blue-600 hover:text-blue-800 hover:underline transition-colors",
                                            onClick: (M) => M.stopPropagation(),
                                            children: [
                                              e.jsx(Fe, {
                                                className:
                                                  "h-3 w-3 mr-1 flex-shrink-0",
                                              }),
                                              e.jsxs("span", {
                                                className: "truncate",
                                                children: [
                                                  c.address,
                                                  ", ",
                                                  c.number,
                                                  " -",
                                                  " ",
                                                  c.neighborhood,
                                                  ", ",
                                                  c.city,
                                                ],
                                              }),
                                            ],
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                ],
                              }),
                            },
                            c.document,
                          ),
                        ),
                      }),
                    ],
                  }),
                we.length > 0 &&
                  !F.visitsOnly &&
                  e.jsxs("div", {
                    className:
                      "bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden",
                    children: [
                      e.jsx("div", {
                        className:
                          "px-4 py-4 bg-gradient-to-r from-gray-50 to-gray-100 border-b border-gray-200",
                        children: e.jsxs("div", {
                          className: "flex items-center justify-between",
                          children: [
                            e.jsxs("h4", {
                              className:
                                "text-base font-semibold text-gray-800 flex items-center",
                              children: [
                                e.jsx(Ps, {
                                  className: "h-5 w-5 text-gray-600 mr-2",
                                }),
                                "Sem Agendamento",
                              ],
                            }),
                            e.jsx("span", {
                              className:
                                "text-sm text-gray-600 font-semibold bg-white/60 px-2 py-1 rounded-full",
                              children: _.withoutVisits.length,
                            }),
                          ],
                        }),
                      }),
                      e.jsx("div", {
                        className: "divide-y divide-gray-100",
                        children: we.map((c) =>
                          e.jsx(
                            "div",
                            {
                              className:
                                "p-3 sm:p-4 hover:bg-gray-50 transition-colors border-l-2 border-gray-300 cursor-pointer",
                              onClick: () => re(c.document),
                              children: e.jsxs("div", {
                                className: "flex gap-2 sm:gap-3",
                                children: [
                                  e.jsx("div", {
                                    className: "flex-shrink-0 pt-1",
                                    children: e.jsx("input", {
                                      type: "checkbox",
                                      checked: i.includes(c.document),
                                      onChange: () => re(c.document),
                                      onClick: (M) => M.stopPropagation(),
                                      className:
                                        "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded",
                                    }),
                                  }),
                                  E &&
                                    i.includes(c.document) &&
                                    e.jsx("div", {
                                      className:
                                        "bg-blue-600 text-white h-5 w-5 sm:h-6 sm:w-6 text-xs font-bold px-1 py-0.5 sm:px-2 sm:py-1 rounded-full flex-shrink-0 flex items-center justify-center",
                                      children: i.indexOf(c.document) + 1,
                                    }),
                                  e.jsx("div", {
                                    className: "flex-1 min-w-0",
                                    children: e.jsxs("div", {
                                      className: "flex flex-col space-y-2",
                                      children: [
                                        e.jsxs("div", {
                                          className:
                                            "flex items-start justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className: "min-w-0 flex-1",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-medium text-gray-900 text-sm sm:text-base truncate",
                                                  children: c.client,
                                                }),
                                                e.jsx("div", {
                                                  className:
                                                    "text-xs sm:text-sm text-gray-500 font-mono",
                                                  children: c.document,
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className: "text-right ml-2",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "font-semibold text-gray-900 text-sm sm:text-base",
                                                  children: q(c.pendingValue),
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs text-gray-500",
                                                  children: [
                                                    c.sales.length,
                                                    " venda",
                                                    c.sales.length !== 1
                                                      ? "s"
                                                      : "",
                                                  ],
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex items-center justify-between",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex items-center text-xs",
                                              children: [
                                                e.jsx("div", {
                                                  className:
                                                    "h-2 w-2 bg-red-400 rounded-full mr-2",
                                                }),
                                                e.jsx("span", {
                                                  className: "text-red-600",
                                                  children: "Sem agendamento",
                                                }),
                                              ],
                                            }),
                                            c.phone &&
                                              e.jsxs("button", {
                                                className:
                                                  "inline-flex items-center px-2 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors",
                                                title: "Ligar para cliente",
                                                onClick: (M) =>
                                                  M.stopPropagation(),
                                                children: [
                                                  e.jsx(bs, {
                                                    className: "h-3 w-3 mr-1",
                                                  }),
                                                  e.jsx("span", {
                                                    className:
                                                      "hidden sm:inline",
                                                    children: "Ligar",
                                                  }),
                                                ],
                                              }),
                                          ],
                                        }),
                                        e.jsx("div", {
                                          className: "text-xs text-gray-600",
                                          children: e.jsxs("a", {
                                            href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(`${c.address}, ${c.number}, ${c.neighborhood}, ${c.city}`)}`,
                                            target: "_blank",
                                            rel: "noopener noreferrer",
                                            className:
                                              "inline-flex items-center text-blue-600 hover:text-blue-800 hover:underline transition-colors",
                                            onClick: (M) => M.stopPropagation(),
                                            children: [
                                              e.jsx(Fe, {
                                                className:
                                                  "h-3 w-3 mr-1 flex-shrink-0",
                                              }),
                                              e.jsxs("span", {
                                                className: "truncate",
                                                children: [
                                                  c.address,
                                                  ", ",
                                                  c.number,
                                                  " -",
                                                  " ",
                                                  c.neighborhood,
                                                  ", ",
                                                  c.city,
                                                ],
                                              }),
                                            ],
                                          }),
                                        }),
                                      ],
                                    }),
                                  }),
                                ],
                              }),
                            },
                            c.document,
                          ),
                        ),
                      }),
                    ],
                  }),
              ],
            }),
            J.length === 0 &&
              e.jsxs("div", {
                className: "py-12 text-center",
                children: [
                  e.jsx(Ps, {
                    className: "h-12 w-12 mx-auto text-gray-300 mb-4",
                  }),
                  e.jsx("p", {
                    className: "text-gray-500",
                    children: "Nenhum cliente encontrado",
                  }),
                ],
              }),
            J.length > 0 &&
              e.jsx("div", {
                className:
                  "px-3 sm:px-4 py-3 sm:py-4 border-t border-gray-200 bg-gray-50",
                children: e.jsxs("div", {
                  className:
                    "flex flex-col sm:flex-row items-center justify-between gap-2 sm:gap-3",
                  children: [
                    e.jsxs("div", {
                      className:
                        "text-xs sm:text-sm text-gray-600 text-center sm:text-left",
                      children: [
                        e.jsxs("span", {
                          className: "font-medium",
                          children: [he + 1, "-", Math.min(xe, J.length)],
                        }),
                        e.jsxs("span", {
                          className: "hidden sm:inline",
                          children: [" ", "de ", J.length],
                        }),
                        e.jsxs("span", {
                          className: "sm:hidden",
                          children: ["/", J.length],
                        }),
                        i.length > 0 &&
                          e.jsxs("span", {
                            className: "ml-2 sm:ml-3 text-blue-600 font-medium",
                            children: [
                              e.jsxs("span", {
                                className: "hidden sm:inline",
                                children: [i.length, " selecionados"],
                              }),
                              e.jsxs("span", {
                                className: "sm:hidden",
                                children: [i.length, " ✓"],
                              }),
                            ],
                          }),
                      ],
                    }),
                    e.jsxs("div", {
                      className:
                        "flex items-center space-x-2 text-xs sm:text-sm text-gray-600",
                      children: [
                        e.jsx("span", { children: "Itens por página:" }),
                        e.jsxs("select", {
                          value: A,
                          onChange: (c) => Se(Number(c.target.value)),
                          className:
                            "px-2 py-1 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
                          children: [
                            e.jsx("option", { value: 5, children: "5" }),
                            e.jsx("option", { value: 10, children: "10" }),
                            e.jsx("option", { value: 20, children: "20" }),
                            e.jsx("option", { value: 50, children: "50" }),
                            e.jsx("option", { value: 100, children: "100" }),
                          ],
                        }),
                      ],
                    }),
                    Z > 1 &&
                      e.jsxs("div", {
                        className: "flex items-center space-x-1",
                        children: [
                          e.jsx("button", {
                            onClick: ke,
                            disabled: V === 1,
                            className:
                              "p-1.5 sm:p-2 rounded text-gray-500 hover:text-gray-700 hover:bg-white disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                            children: e.jsx(ws, {
                              className: "h-3 w-3 sm:h-4 sm:w-4",
                            }),
                          }),
                          e.jsx("div", {
                            className: "flex space-x-1",
                            children: Array.from(
                              { length: Math.min(3, Z) },
                              (c, M) => {
                                let l;
                                return (
                                  Z <= 3 || V <= 2
                                    ? (l = M + 1)
                                    : V >= Z - 1
                                      ? (l = Z - 2 + M)
                                      : (l = V - 1 + M),
                                  e.jsx(
                                    "button",
                                    {
                                      onClick: () => ae(l),
                                      className: `px-2 sm:px-3 py-1.5 sm:py-2 rounded text-xs sm:text-sm transition-colors ${V === l ? "bg-blue-600 text-white" : "text-gray-600 hover:text-gray-900 hover:bg-white"}`,
                                      children: l,
                                    },
                                    l,
                                  )
                                );
                              },
                            ),
                          }),
                          e.jsx("button", {
                            onClick: Te,
                            disabled: V === Z,
                            className:
                              "p-1.5 sm:p-2 rounded text-gray-500 hover:text-gray-700 hover:bg-white disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                            children: e.jsx(js, {
                              className: "h-3 w-3 sm:h-4 sm:w-4",
                            }),
                          }),
                        ],
                      }),
                  ],
                }),
              }),
          ],
        }),
        W &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4",
            children: e.jsx("div", {
              className:
                "bg-white rounded-lg shadow-xl max-w-md w-full mx-auto",
              children: e.jsxs("div", {
                className: "p-6",
                children: [
                  e.jsxs("div", {
                    className: "flex items-center mb-4",
                    children: [
                      e.jsxs("div", {
                        className: `w-10 h-10 rounded-full flex items-center justify-center mr-3 ${p.type === "success" ? "bg-green-100" : p.type === "error" ? "bg-red-100" : "bg-blue-100"}`,
                        children: [
                          p.type === "success" &&
                            e.jsx("svg", {
                              className: "w-6 h-6 text-green-600",
                              fill: "none",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24",
                              children: e.jsx("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M5 13l4 4L19 7",
                              }),
                            }),
                          p.type === "error" &&
                            e.jsx("svg", {
                              className: "w-6 h-6 text-red-600",
                              fill: "none",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24",
                              children: e.jsx("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M6 18L18 6M6 6l12 12",
                              }),
                            }),
                          p.type === "info" &&
                            e.jsx("svg", {
                              className: "w-6 h-6 text-blue-600",
                              fill: "none",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24",
                              children: e.jsx("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z",
                              }),
                            }),
                        ],
                      }),
                      e.jsx("h3", {
                        className: `text-lg font-semibold ${p.type === "success" ? "text-green-900" : p.type === "error" ? "text-red-900" : "text-blue-900"}`,
                        children: p.title,
                      }),
                    ],
                  }),
                  e.jsx("p", {
                    className: "text-gray-700 mb-6 leading-relaxed",
                    children: p.message,
                  }),
                  e.jsx("div", {
                    className: "flex justify-end",
                    children: e.jsx("button", {
                      onClick: () => T(!1),
                      className: `px-4 py-2 rounded-lg font-medium transition-colors ${p.type === "success" ? "bg-green-600 hover:bg-green-700 text-white" : p.type === "error" ? "bg-red-600 hover:bg-red-700 text-white" : "bg-blue-600 hover:bg-blue-700 text-white"}`,
                      children: "Entendi",
                    }),
                  }),
                ],
              }),
            }),
          }),
      ],
    });
  };
function nr({ isOpen: s, onClose: t, message: x, title: h = "Data Inválida" }) {
  return s
    ? e.jsxs("div", {
        className: "fixed inset-0 z-50 overflow-y-auto",
        children: [
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 transition-opacity",
            onClick: t,
          }),
          e.jsx("div", {
            className: "flex min-h-full items-center justify-center p-4",
            children: e.jsxs("div", {
              className:
                "relative bg-white rounded-lg shadow-xl w-full max-w-md transform transition-all",
              children: [
                e.jsxs("div", {
                  className:
                    "flex items-center justify-between p-6 border-b border-gray-200",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center space-x-3",
                      children: [
                        e.jsx("div", {
                          className: "flex-shrink-0",
                          children: e.jsx(Ge, {
                            className: "h-6 w-6 text-amber-500",
                          }),
                        }),
                        e.jsx("h3", {
                          className: "text-lg font-semibold text-gray-900",
                          children: h,
                        }),
                      ],
                    }),
                    e.jsx("button", {
                      onClick: t,
                      className:
                        "text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-amber-500 rounded-lg p-1",
                      children: e.jsx(ze, { className: "h-5 w-5" }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "p-6",
                  children: [
                    e.jsx("p", {
                      className: "text-gray-600 mb-6",
                      children: x,
                    }),
                    e.jsx("div", {
                      className: "flex justify-end",
                      children: e.jsx("button", {
                        onClick: t,
                        className:
                          "px-4 py-2 bg-amber-500 text-white rounded-lg hover:bg-amber-600 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 transition-colors",
                        children: "Entendi",
                      }),
                    }),
                  ],
                }),
              ],
            }),
          }),
        ],
      })
    : null;
}
const lr = ({ onClose: s }) => {
    const {
        getClientGroups: t,
        scheduleVisit: x,
        scheduledVisits: h,
        getVisitsByCollector: i,
        getClientDataForVisit: D,
        updateVisitStatus: E,
        requestVisitCancellation: O,
        rescheduleVisit: F,
        collections: C,
      } = Je(),
      { user: V } = ts(),
      U = () => {
        const m = new Date(),
          ce = m.getFullYear(),
          _e = String(m.getMonth() + 1).padStart(2, "0"),
          ye = String(m.getDate()).padStart(2, "0");
        return `${ce}-${_e}-${ye}`;
      },
      A = () => {
        const m = new Date();
        m.setHours(m.getHours() + 1);
        const ce = String(m.getHours()).padStart(2, "0"),
          _e = String(m.getMinutes()).padStart(2, "0");
        return `${ce}:${_e}`;
      },
      [Q] = r.useState(U()),
      [ee] = r.useState(A()),
      [Y, G] = r.useState(""),
      [L, W] = r.useState(new Set()),
      [T, p] = r.useState(new Map()),
      [I, v] = r.useState(""),
      [j, z] = r.useState(!1),
      [N, H] = r.useState("schedule"),
      [w, y] = r.useState(1),
      [S] = r.useState(10),
      [_, J] = r.useState(1),
      [Z] = r.useState(20),
      [he, xe] = r.useState(!1),
      [R, ge] = r.useState(null),
      [pe, fe] = r.useState(""),
      [we, re] = r.useState(!1),
      [de, oe] = r.useState(null),
      [P, se] = r.useState(!1),
      [Ae, Ve] = r.useState({ errors: [], conflicts: [] }),
      [ne, Re] = r.useState(!1),
      [K, B] = r.useState({
        city: "",
        minValue: "",
        maxValue: "",
        visitStatus: "",
      }),
      [X, je] = r.useState(!1),
      [Se, ae] = r.useState(null),
      [ke, Te] = r.useState(!1),
      [le, c] = r.useState(null),
      [M, l] = r.useState(!1),
      [n, d] = r.useState(!1),
      [a, f] = r.useState(null),
      [$, te] = r.useState(!1),
      [g, u] = r.useState(null),
      [o, b] = r.useState(""),
      [k, ue] = r.useState(""),
      [me, ie] = r.useState(!1),
      [ve, $e] = r.useState(null),
      [Ue, He] = r.useState(!1),
      [ns, gs] = r.useState(""),
      Ye = Xe.useMemo(() => {
        if (!V || V.type !== "collector") return [];
        const m = t(V.id),
          ce = i(V.id).filter((be) => be.status === "agendada"),
          _e = new Set(ce.map((be) => be.clientDocument));
        let Ne = m.filter((be) => !_e.has(be.document) && be.pendingValue > 0);
        if (Y) {
          const be = Y.toLowerCase();
          Ne = Ne.filter(
            (Ce) =>
              Ce.client.toLowerCase().includes(be) ||
              Ce.document.toLowerCase().includes(be) ||
              Ce.address.toLowerCase().includes(be) ||
              Ce.city.toLowerCase().includes(be),
          );
        }
        if (
          (K.city &&
            (Ne = Ne.filter((be) =>
              be.city.toLowerCase().includes(K.city.toLowerCase()),
            )),
          K.minValue)
        ) {
          const be = parseFloat(K.minValue);
          isNaN(be) || (Ne = Ne.filter((Ce) => Ce.pendingValue >= be));
        }
        if (K.maxValue) {
          const be = parseFloat(K.maxValue);
          isNaN(be) || (Ne = Ne.filter((Ce) => Ce.pendingValue <= be));
        }
        return (
          K.visitStatus &&
            (Ne = Ne.filter((be) => {
              const Ce = h
                  .filter(
                    (We) =>
                      We.clientDocument === be.document &&
                      We.status === "realizada",
                  )
                  .sort(
                    (We, Pe) =>
                      new Date(Pe.createdAt).getTime() -
                      new Date(We.createdAt).getTime(),
                  ),
                qe = new Date();
              qe.setHours(0, 0, 0, 0);
              let Ee;
              if (Ce.length === 0) Ee = 999;
              else
                try {
                  const Pe = Ce[0].createdAt.split("T")[0];
                  let Ke;
                  if (Pe.includes("-")) {
                    const [es, ds, it] = Pe.split("-");
                    Ke = new Date(parseInt(es), parseInt(ds) - 1, parseInt(it));
                  } else if (Pe.includes("/")) {
                    const [es, ds, it] = Pe.split("/");
                    Ke = new Date(parseInt(it), parseInt(ds) - 1, parseInt(es));
                  } else Ke = new Date(Pe);
                  (Ke.setHours(0, 0, 0, 0),
                    (Ee = Math.floor(
                      (qe.getTime() - Ke.getTime()) / (1e3 * 60 * 60 * 24),
                    )),
                    (Ee = Math.max(0, Ee)));
                } catch {
                  Ee = 999;
                }
              switch (K.visitStatus) {
                case "critical":
                  return Ee >= 120;
                case "high":
                  return Ee >= 90 && Ee < 120;
                case "medium":
                  return Ee >= 60 && Ee < 90;
                case "low":
                  return Ee >= 30 && Ee < 60;
                case "recent":
                  return Ee < 30;
                default:
                  return !0;
              }
            })),
          Ne
        );
      }, [V, Y, K, t, i, h]),
      xs = Xe.useMemo(
        () =>
          !V || V.type !== "collector"
            ? 0
            : i(V.id).filter((ce) => ce.status === "agendada").length,
        [V, i, h],
      ),
      os = Xe.useMemo(() => {
        const m = (_ - 1) * Z,
          ce = m + Z;
        return Ye.slice(m, ce);
      }, [Ye, _, Z]),
      cs = Math.ceil(Ye.length / Z);
    Xe.useEffect(() => {
      J(1);
    }, [Y, K]);
    const {
        todayVisits: vs,
        upcomingVisits: ys,
        pastVisits: ps,
        allVisits: Zt,
      } = Xe.useMemo(() => {
        if (!V)
          return {
            todayVisits: [],
            upcomingVisits: [],
            pastVisits: [],
            allVisits: [],
          };
        const m = new Date(),
          ce = m.getFullYear(),
          _e = String(m.getMonth() + 1).padStart(2, "0"),
          ye = String(m.getDate()).padStart(2, "0"),
          Ne = `${ce}-${_e}-${ye}`,
          be = i(V.id),
          Ce = be
            .filter((Pe) => Pe.scheduledDate === Ne)
            .sort((Pe, Ke) => {
              const es = Pe.scheduledTime || "00:00",
                ds = Ke.scheduledTime || "00:00";
              return es.localeCompare(ds);
            }),
          qe = be
            .filter((Pe) => Pe.scheduledDate > Ne)
            .sort((Pe, Ke) => {
              const es = new Date(
                  `${Pe.scheduledDate} ${Pe.scheduledTime || "00:00"}`,
                ),
                ds = new Date(
                  `${Ke.scheduledDate} ${Ke.scheduledTime || "00:00"}`,
                );
              return es.getTime() - ds.getTime();
            }),
          Ee = be
            .filter((Pe) => Pe.scheduledDate < Ne && Pe.status === "agendada")
            .sort((Pe, Ke) => {
              const es = new Date(
                `${Pe.scheduledDate} ${Pe.scheduledTime || "00:00"}`,
              );
              return (
                new Date(
                  `${Ke.scheduledDate} ${Ke.scheduledTime || "00:00"}`,
                ).getTime() - es.getTime()
              );
            }),
          We = be.sort((Pe, Ke) => {
            const es = new Date(
                `${Pe.scheduledDate} ${Pe.scheduledTime || "00:00"}`,
              ),
              ds = new Date(
                `${Ke.scheduledDate} ${Ke.scheduledTime || "00:00"}`,
              );
            return es.getTime() - ds.getTime();
          });
        return {
          todayVisits: Ce,
          upcomingVisits: qe,
          pastVisits: Ee,
          allVisits: We,
        };
      }, [V, i, h]),
      Xt = Xe.useMemo(() => {
        const m = (w - 1) * S,
          ce = m + S;
        return vs.slice(m, ce);
      }, [vs, w, S]),
      Xs = Math.ceil(vs.length / S),
      ea = async () => ra(),
      sa = () => {
        const m = [],
          ce = [],
          _e = new Map();
        for (const ye of qs()) {
          const Ne = T.get(ye.document);
          if (!Ne) {
            m.push(`${ye.client}: Data e horário não configurados`);
            continue;
          }
          const be = U();
          if (Ne.date < be) {
            m.push(`${ye.client}: Data não pode ser anterior a hoje`);
            continue;
          }
          const Ce = `${Ne.date}_${Ne.time}`;
          (_e.has(Ce) || _e.set(Ce, []), _e.get(Ce).push(ye.client));
        }
        for (const [ye, Ne] of _e.entries())
          if (Ne.length > 1) {
            const [be, Ce] = ye.split("_");
            ce.push(`${nt(be)} às ${Ce}: ${Ne.join(", ")}`);
          }
        return { errors: m, conflicts: ce };
      },
      ta = async () => {
        (se(!1), await jt());
      },
      ft = () => {
        (se(!1), Ve({ errors: [], conflicts: [] }));
      },
      Fs = (m, ce) => {
        B((_e) => ({ ..._e, [m]: ce }));
      },
      et = () => {
        (B({ city: "", minValue: "", maxValue: "", visitStatus: "" }), G(""));
      },
      Rs = Y || K.city || K.minValue || K.maxValue || K.visitStatus,
      aa = Xe.useMemo(() => {
        if (!V || V.type !== "collector") return [];
        const ce = t(V.id).filter((ye) => ye.pendingValue > 0);
        return [...new Set(ce.map((ye) => ye.city))].sort();
      }, [V, t]),
      jt = async () => {
        try {
          z(!0);
          const m = qs();
          let ce = 0,
            _e = 0;
          for (const ye of m)
            try {
              const Ne = D(ye.document);
              if (!Ne) {
                _e++;
                continue;
              }
              const be = T.get(ye.document),
                Ce = (be == null ? void 0 : be.date) || Q,
                qe = (be == null ? void 0 : be.time) || ee,
                Ee = {
                  collectorId: V.id,
                  clientDocument: ye.document,
                  clientName: ye.client,
                  scheduledDate: Ce,
                  scheduledTime: qe,
                  status: "agendada",
                  notes: I.trim(),
                  clientAddress: Ne.address,
                  clientNeighborhood: Ne.neighborhood,
                  clientCity: Ne.city,
                  totalPendingValue: Ne.totalPendingValue,
                  overdueCount: Ne.overdueCount,
                };
              (await x(Ee), ce++);
            } catch (Ne) {
              (console.error(`Erro ao agendar visita para ${ye.client}:`, Ne),
                _e++);
            }
          (W(new Set()),
            p(new Map()),
            v(""),
            et(),
            y(1),
            J(1),
            ce > 0 &&
              Ls(
                `${ce} visita${ce !== 1 ? "s" : ""} agendada${ce !== 1 ? "s" : ""} com sucesso!`,
              ),
            _e > 0 &&
              alert(
                `${_e} visita${_e !== 1 ? "s" : ""} não puderam ser agendada${_e !== 1 ? "s" : ""}.`,
              ));
        } catch (m) {
          (console.error("Erro ao agendar visitas:", m),
            alert("Erro ao agendar visitas. Tente novamente."));
        } finally {
          z(!1);
        }
      },
      ra = async () => {
        if (L.size === 0 || !V) {
          alert("Selecione pelo menos um cliente para agendar as visitas");
          return;
        }
        const { errors: m, conflicts: ce } = sa();
        if (m.length > 0) {
          if (
            m.filter((ye) => ye.includes("Data não pode ser anterior a hoje"))
              .length > 0
          ) {
            (gs("Não é possível agendar visitas para datas passadas"), He(!0));
            return;
          }
          alert(`Erros encontrados:

${m.join(`
`)}`);
          return;
        }
        if (ce.length > 0) {
          (Ve({ errors: m, conflicts: ce }), se(!0));
          return;
        }
        await jt();
      },
      st = async (m, ce, _e) => {
        try {
          (await E(m, ce, _e), Ls(`Visita marcada como ${rt(ce)}`));
        } catch (ye) {
          (console.error("Erro ao atualizar status da visita:", ye),
            alert("Erro ao atualizar status da visita"));
        }
      },
      tt = (m) => {
        (c(m), Te(!0));
      },
      vt = async (m) => {
        le && (await st(le.id, "realizada", m), Te(!1), u(le), c(null), te(!0));
      },
      at = (m) => {
        (f(m), l(!0));
      },
      na = () => {
        (l(!1), d(!0));
      },
      yt = async (m) => {
        a && (await st(a.id, "nao_encontrado", m), d(!1), f(null));
      },
      la = () => {
        if ((te(!1), g)) {
          const m = D(g.clientDocument);
          if (m) {
            const ce = {
              clientId: m.document,
              client: m.name,
              document: m.document,
              phone: m.phone,
              mobile: m.mobile,
              address: m.address,
              number: "",
              neighborhood: m.neighborhood,
              city: m.city,
              state: "",
              sales: [],
              totalValue: m.totalPendingValue,
              totalReceived: 0,
              pendingValue: m.totalPendingValue,
            };
            (oe(ce), re(!0));
          }
        }
        u(null);
      },
      oa = () => {
        (te(!1), u(null));
      },
      rt = (m) => {
        switch (m) {
          case "agendada":
            return "Agendada";
          case "realizada":
            return "Realizada";
          case "cancelada":
            return "Cancelada";
          case "nao_encontrado":
            return "Não Encontrado";
          case "cancelamento_solicitado":
            return "Cancelamento Solicitado";
          default:
            return m;
        }
      },
      Nt = (m) => {
        switch (m) {
          case "agendada":
            return "bg-blue-100 text-blue-800";
          case "realizada":
            return "bg-green-100 text-green-800";
          case "cancelada":
            return "bg-red-100 text-red-800";
          case "nao_encontrado":
            return "bg-orange-100 text-orange-800";
          case "cancelamento_solicitado":
            return "bg-yellow-100 text-yellow-800";
          default:
            return "bg-gray-100 text-gray-800";
        }
      },
      Ls = (m = "Visita agendada com sucesso!") => {
        const ce = document.createElement("div");
        ((ce.className =
          "fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center"),
          (ce.innerHTML = `
      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
      </svg>
      ${m}
    `),
          document.body.appendChild(ce),
          setTimeout(() => {
            document.body.contains(ce) && document.body.removeChild(ce);
          }, 5e3));
      },
      nt = (m) => {
        try {
          let ce;
          if (m.includes("-")) {
            const [_e, ye, Ne] = m.split("-");
            ce = new Date(parseInt(_e), parseInt(ye) - 1, parseInt(Ne));
          } else if (m.includes("/")) {
            const [_e, ye, Ne] = m.split("/");
            ce = new Date(parseInt(Ne), parseInt(ye) - 1, parseInt(_e));
          } else ce = new Date(m);
          return isNaN(ce.getTime()) ? m : ce.toLocaleDateString("pt-BR");
        } catch {
          return m;
        }
      },
      Ts = (m, ce) => {
        try {
          let _e;
          if (m.includes("-")) {
            const [Ne, be, Ce] = m.split("-");
            _e = new Date(parseInt(Ne), parseInt(be) - 1, parseInt(Ce));
          } else if (m.includes("/")) {
            const [Ne, be, Ce] = m.split("/");
            _e = new Date(parseInt(Ce), parseInt(be) - 1, parseInt(Ne));
          } else _e = new Date(m);
          return isNaN(_e.getTime())
            ? `${m} às ${ce || "00:00"}`
            : `${_e.toLocaleDateString("pt-BR")} às ${ce || "00:00"}`;
        } catch {
          return `${m} às ${ce || "00:00"}`;
        }
      },
      wt = (m) => {
        (ge(m), xe(!0));
      },
      ia = async () => {
        if (!R || !pe.trim()) {
          alert("Por favor, informe o motivo do cancelamento");
          return;
        }
        try {
          (await O(R.id, pe.trim()),
            xe(!1),
            ge(null),
            fe(""),
            Ls("Solicitação de cancelamento enviada para aprovação"));
        } catch (m) {
          (console.error("Erro ao solicitar cancelamento:", m),
            alert("Erro ao solicitar cancelamento. Tente novamente."));
        }
      },
      ca = () => {
        (xe(!1), ge(null), fe(""));
      },
      lt = (m) => {
        (ae(m), b(U()));
        const ce = m.scheduledDate === U();
        (ue(ce ? A() : m.scheduledTime || "09:00"), je(!0));
      },
      Ct = () => {
        (je(!1), ae(null), b(""), ue(""));
      },
      da = async () => {
        if (!Se || !o || !k) {
          alert("Por favor, selecione uma nova data e horário");
          return;
        }
        const m = U();
        if (o < m) {
          (gs("Não é possível agendar visitas para datas passadas"), He(!0));
          return;
        }
        if (o === m) {
          const ce = new Date(),
            [_e, ye] = k.split(":").map(Number),
            Ne = new Date();
          if ((Ne.setHours(_e, ye, 0, 0), Ne <= ce)) {
            (gs("Não é possível agendar visitas para horários passados"),
              He(!0));
            return;
          }
        }
        try {
          (await F(Se.id, o, k), Ls("Visita reagendada com sucesso!"), Ct());
        } catch (ce) {
          (console.error("Erro ao reagendar visita:", ce),
            alert("Erro ao reagendar visita. Tente novamente."));
        }
      },
      ot = (m) => {
        const ce = D(m.clientDocument);
        ce && (oe(ce), re(!0));
      },
      ma = () => {
        (re(!1), oe(null));
      },
      St = (m) => {
        const ce = new Set(L),
          _e = new Map(T);
        (ce.has(m)
          ? (ce.delete(m), _e.delete(m))
          : (ce.add(m), _e.set(m, { date: Q, time: ee })),
          W(ce),
          p(_e));
      },
      xa = () => {
        const m = new Set(L),
          ce = new Map(T);
        (os.every((ye) => L.has(ye.document)) && os.length > 0
          ? os.forEach((ye) => {
              (m.delete(ye.document), ce.delete(ye.document));
            })
          : os.forEach((ye) => {
              m.has(ye.document) ||
                (m.add(ye.document),
                ce.set(ye.document, { date: Q, time: ee }));
            }),
          W(m),
          p(ce));
      },
      qs = () =>
        !V || V.type !== "collector"
          ? []
          : t(V.id).filter((ce) => L.has(ce.document)),
      Bs = (m, ce, _e) => {
        const ye = new Map(T),
          Ne = ye.get(m) || { date: Q, time: ee };
        (ye.set(m, { ...Ne, [ce]: _e }), p(ye));
      },
      ua = (m) => {
        try {
          const ce = new Date();
          ce.setHours(0, 0, 0, 0);
          const [_e, ye, Ne] = m.split("-"),
            be = new Date(parseInt(_e), parseInt(ye) - 1, parseInt(Ne));
          be.setHours(0, 0, 0, 0);
          const Ce = ce.getTime() - be.getTime(),
            qe = Math.floor(Ce / (1e3 * 60 * 60 * 24));
          return Math.max(0, qe);
        } catch (ce) {
          return (
            console.error("Erro ao calcular dias de atraso da visita:", ce),
            0
          );
        }
      };
    return e.jsxs("div", {
      className: "bg-white rounded-xl shadow-lg",
      children: [
        e.jsx("div", {
          className:
            "bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-4 lg:px-6 py-4 rounded-t-xl",
          children: e.jsxs("div", {
            className: "flex items-center justify-between",
            children: [
              e.jsxs("div", {
                className: "flex items-center",
                children: [
                  e.jsx(Me, { className: "h-6 w-6 mr-3" }),
                  e.jsxs("div", {
                    children: [
                      e.jsx("h2", {
                        className: "text-lg lg:text-xl font-bold",
                        children: "Agendamento de Visitas",
                      }),
                      e.jsx("p", {
                        className: "text-purple-100 text-sm lg:text-base",
                        children: "Gerencie suas visitas aos clientes",
                      }),
                    ],
                  }),
                ],
              }),
              s &&
                e.jsx("button", {
                  onClick: s,
                  className:
                    "p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors",
                  children: e.jsx(ze, { className: "h-5 w-5" }),
                }),
            ],
          }),
        }),
        e.jsx("div", {
          className: "border-b border-gray-200",
          children: e.jsxs("div", {
            className: "flex",
            children: [
              e.jsxs("button", {
                onClick: () => H("schedule"),
                className: `px-6 py-3 font-medium transition-colors ${N === "schedule" ? "border-b-2 border-purple-600 text-purple-600" : "text-gray-600 hover:text-gray-800"}`,
                children: [
                  e.jsx(Js, { className: "h-4 w-4 mr-2 inline" }),
                  "Agendar Nova Visita",
                ],
              }),
              e.jsxs("button", {
                onClick: () => H("list"),
                className: `px-6 py-3 font-medium transition-colors ${N === "list" ? "border-b-2 border-purple-600 text-purple-600" : "text-gray-600 hover:text-gray-800"}`,
                children: [
                  e.jsx(pt, { className: "h-4 w-4 mr-2 inline" }),
                  "Minhas Visitas (",
                  Zt.length,
                  ")",
                ],
              }),
            ],
          }),
        }),
        e.jsx("div", {
          className: "p-4 lg:p-6",
          children:
            N === "schedule"
              ? e.jsxs("div", {
                  className: "space-y-6",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsxs("div", {
                          className: "flex items-center justify-between mb-2",
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-sm font-medium text-gray-700",
                              children: "Buscar e Filtrar Clientes",
                            }),
                            e.jsxs("div", {
                              className: "flex items-center space-x-2",
                              children: [
                                e.jsxs("button", {
                                  onClick: () => Re(!ne),
                                  className: `flex items-center px-3 py-1.5 text-sm rounded-lg transition-colors ${ne ? "bg-purple-100 text-purple-700" : "bg-gray-100 text-gray-600 hover:bg-gray-200"}`,
                                  children: [
                                    e.jsx(fs, { className: "h-4 w-4 mr-1" }),
                                    "Filtros",
                                    Rs &&
                                      e.jsx("span", {
                                        className:
                                          "ml-1 px-1 py-1 bg-purple-600 text-white text-xs rounded-full",
                                      }),
                                  ],
                                }),
                                Rs &&
                                  e.jsx("button", {
                                    onClick: et,
                                    className:
                                      "text-sm text-gray-600 hover:text-gray-800 underline",
                                    children: "Limpar",
                                  }),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "relative",
                          children: [
                            e.jsx(Vs, {
                              className:
                                "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                            }),
                            e.jsx("input", {
                              type: "text",
                              value: Y,
                              onChange: (m) => G(m.target.value),
                              placeholder:
                                "Digite o nome, documento ou endereço do cliente...",
                              className:
                                "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                            }),
                          ],
                        }),
                        ne &&
                          e.jsxs("div", {
                            className:
                              "mt-3 p-4 bg-gray-50 border border-gray-200 rounded-lg space-y-4",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
                                children: [
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("label", {
                                        className:
                                          "block text-xs font-medium text-gray-600 mb-1",
                                        children: "Cidade",
                                      }),
                                      e.jsxs("select", {
                                        value: K.city,
                                        onChange: (m) =>
                                          Fs("city", m.target.value),
                                        className:
                                          "w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                        children: [
                                          e.jsx("option", {
                                            value: "",
                                            children: "Todas as cidades",
                                          }),
                                          aa.map((m) =>
                                            e.jsx(
                                              "option",
                                              { value: m, children: m },
                                              m,
                                            ),
                                          ),
                                        ],
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("label", {
                                        className:
                                          "block text-xs font-medium text-gray-600 mb-1",
                                        children: "Valor Mínimo",
                                      }),
                                      e.jsx("input", {
                                        type: "number",
                                        step: "0.01",
                                        value: K.minValue,
                                        onChange: (m) =>
                                          Fs("minValue", m.target.value),
                                        placeholder: "R$ 0,00",
                                        className:
                                          "w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("label", {
                                        className:
                                          "block text-xs font-medium text-gray-600 mb-1",
                                        children: "Valor Máximo",
                                      }),
                                      e.jsx("input", {
                                        type: "number",
                                        step: "0.01",
                                        value: K.maxValue,
                                        onChange: (m) =>
                                          Fs("maxValue", m.target.value),
                                        placeholder: "R$ 999.999,99",
                                        className:
                                          "w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                      }),
                                    ],
                                  }),
                                  e.jsxs("div", {
                                    children: [
                                      e.jsx("label", {
                                        className:
                                          "block text-xs font-medium text-gray-600 mb-1",
                                        children: "Status de Visita",
                                      }),
                                      e.jsxs("select", {
                                        value: K.visitStatus,
                                        onChange: (m) =>
                                          Fs("visitStatus", m.target.value),
                                        className:
                                          "w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                        children: [
                                          e.jsx("option", {
                                            value: "",
                                            children: "Todos",
                                          }),
                                          e.jsx("option", {
                                            value: "critical",
                                            children:
                                              "🔴 Nunca Visitado / Mais de 120 dias",
                                          }),
                                          e.jsx("option", {
                                            value: "high",
                                            children: "🟠 90+ dias sem visita",
                                          }),
                                          e.jsx("option", {
                                            value: "medium",
                                            children: "🟡 60+ dias sem visita",
                                          }),
                                          e.jsx("option", {
                                            value: "low",
                                            children: "🔵 30+ dias sem visita",
                                          }),
                                          e.jsx("option", {
                                            value: "recent",
                                            children:
                                              "🟢 Visitado recentemente",
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              Rs &&
                                e.jsxs("div", {
                                  className: "text-sm text-gray-600 py-4",
                                  children: [
                                    e.jsx("span", {
                                      className: "font-medium",
                                      children: "Filtros ativos:",
                                    }),
                                    Y &&
                                      e.jsxs("span", {
                                        className:
                                          "ml-1 px-2 py-1 bg-white rounded border",
                                        children: ['Busca: "', Y, '"'],
                                      }),
                                    K.city &&
                                      e.jsxs("span", {
                                        className:
                                          "ml-1 px-2 py-1 bg-white rounded border",
                                        children: ["Cidade: ", K.city],
                                      }),
                                    K.minValue &&
                                      e.jsxs("span", {
                                        className:
                                          "ml-1 px-2 py-1 bg-white rounded border",
                                        children: ["Min: R$ ", K.minValue],
                                      }),
                                    K.maxValue &&
                                      e.jsxs("span", {
                                        className:
                                          "ml-1 px-2 py-1 bg-white rounded border",
                                        children: ["Max: R$ ", K.maxValue],
                                      }),
                                    K.visitStatus &&
                                      e.jsxs("span", {
                                        className:
                                          "ml-1 px-2 py-1 bg-white rounded border",
                                        children: [
                                          "Status:",
                                          " ",
                                          K.visitStatus === "critical"
                                            ? "Nunca/120+ dias"
                                            : K.visitStatus === "high"
                                              ? "90+ dias"
                                              : K.visitStatus === "medium"
                                                ? "60+ dias"
                                                : K.visitStatus === "low"
                                                  ? "30+ dias"
                                                  : K.visitStatus === "recent"
                                                    ? "Recente"
                                                    : "",
                                        ],
                                      }),
                                  ],
                                }),
                            ],
                          }),
                        L.size > 0 &&
                          e.jsxs("div", {
                            className:
                              "mt-2 text-sm text-purple-600 bg-purple-50 rounded-lg p-2",
                            children: [
                              L.size,
                              " cliente",
                              L.size !== 1 ? "s" : "",
                              " selecionado",
                              L.size !== 1 ? "s" : "",
                            ],
                          }),
                        xs > 0 &&
                          e.jsxs("div", {
                            className:
                              "mt-2 text-sm text-orange-600 bg-orange-50 rounded-lg p-2 flex items-center",
                            children: [
                              e.jsx(Ge, { className: "h-4 w-4 mr-2" }),
                              xs,
                              " cliente",
                              xs !== 1 ? "s" : "",
                              " com visita",
                              xs !== 1 ? "s" : "",
                              " já agendada",
                              xs !== 1 ? "s" : "",
                              " (não",
                              " ",
                              xs !== 1 ? "aparecem" : "aparece",
                              " na lista)",
                            ],
                          }),
                      ],
                    }),
                    Ye.length > 0 &&
                      e.jsxs("div", {
                        className: "border border-gray-200 rounded-lg",
                        children: [
                          e.jsxs("div", {
                            className:
                              "bg-gray-50 p-3 border-b border-gray-200",
                            children: [
                              e.jsxs("div", {
                                className:
                                  "flex items-center justify-between mb-2",
                                children: [
                                  e.jsx("span", {
                                    className:
                                      "text-sm font-medium text-gray-700",
                                    children: Rs
                                      ? `${Ye.length} cliente${Ye.length !== 1 ? "s" : ""} encontrado${Ye.length !== 1 ? "s" : ""}`
                                      : `${Ye.length} cliente${Ye.length !== 1 ? "s" : ""} com pendências ${Ye.length !== 1 ? "disponíveis" : "disponível"}`,
                                  }),
                                  e.jsx("button", {
                                    onClick: xa,
                                    className:
                                      "text-sm text-purple-600 hover:text-purple-800 font-medium",
                                    children:
                                      os.every((m) => L.has(m.document)) &&
                                      os.length > 0
                                        ? "Desmarcar Página"
                                        : "Selecionar Página",
                                  }),
                                ],
                              }),
                              cs > 1 &&
                                e.jsxs("div", {
                                  className:
                                    "flex items-center justify-between text-sm text-gray-600",
                                  children: [
                                    e.jsxs("span", {
                                      children: [
                                        "Página ",
                                        _,
                                        " de ",
                                        cs,
                                        " (",
                                        (_ - 1) * Z + 1,
                                        "-",
                                        Math.min(_ * Z, Ye.length),
                                        " ",
                                        "de ",
                                        Ye.length,
                                        ")",
                                      ],
                                    }),
                                    e.jsxs("div", {
                                      className: "flex items-center space-x-2",
                                      children: [
                                        e.jsx("button", {
                                          onClick: () => J(Math.max(1, _ - 1)),
                                          disabled: _ === 1,
                                          className:
                                            "p-1 rounded hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed",
                                          children: e.jsx(ws, {
                                            className: "h-4 w-4",
                                          }),
                                        }),
                                        e.jsx("button", {
                                          onClick: () => J(Math.min(cs, _ + 1)),
                                          disabled: _ === cs,
                                          className:
                                            "p-1 rounded hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed",
                                          children: e.jsx(js, {
                                            className: "h-4 w-4",
                                          }),
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                            ],
                          }),
                          e.jsx("div", {
                            className: "max-h-[32rem] overflow-y-auto p-3",
                            children: (() => {
                              const m = os.reduce((ye, Ne) => {
                                  const be = Ne.neighborhood || "Outros";
                                  return (
                                    ye[be] || (ye[be] = []),
                                    ye[be].push(Ne),
                                    ye
                                  );
                                }, {}),
                                ce = (ye) => {
                                  const Ne = h
                                      .filter(
                                        (qe) =>
                                          qe.clientDocument === ye.document &&
                                          qe.status === "realizada",
                                      )
                                      .sort(
                                        (qe, Ee) =>
                                          new Date(Ee.createdAt).getTime() -
                                          new Date(qe.createdAt).getTime(),
                                      ),
                                    be = new Date();
                                  be.setHours(0, 0, 0, 0);
                                  let Ce;
                                  if (Ne.length === 0) Ce = 999;
                                  else
                                    try {
                                      const Ee = Ne[0].createdAt.split("T")[0];
                                      let We;
                                      if (Ee.includes("-")) {
                                        const [Pe, Ke, es] = Ee.split("-");
                                        We = new Date(
                                          parseInt(Pe),
                                          parseInt(Ke) - 1,
                                          parseInt(es),
                                        );
                                      } else if (Ee.includes("/")) {
                                        const [Pe, Ke, es] = Ee.split("/");
                                        We = new Date(
                                          parseInt(es),
                                          parseInt(Ke) - 1,
                                          parseInt(Pe),
                                        );
                                      } else We = new Date(Ee);
                                      (We.setHours(0, 0, 0, 0),
                                        (Ce = Math.floor(
                                          (be.getTime() - We.getTime()) /
                                            (1e3 * 60 * 60 * 24),
                                        )),
                                        (Ce = Math.max(0, Ce)));
                                    } catch {
                                      Ce = 999;
                                    }
                                  return Ce >= 120
                                    ? {
                                        type: "critical",
                                        label:
                                          Ce === 999 ? "Nunca" : "120 dias",
                                        color:
                                          "bg-red-100 text-red-800 border-red-200",
                                        days:
                                          Ce === 999 ? "Nunca" : `${Ce} dias`,
                                      }
                                    : Ce >= 90
                                      ? {
                                          type: "high",
                                          label: "90+ dias",
                                          color:
                                            "bg-orange-100 text-orange-800 border-orange-200",
                                          days: `${Ce} dias`,
                                        }
                                      : Ce >= 60
                                        ? {
                                            type: "medium",
                                            label: "60+ dias",
                                            color:
                                              "bg-yellow-100 text-yellow-800 border-yellow-200",
                                            days: `${Ce} dias`,
                                          }
                                        : Ce >= 30
                                          ? {
                                              type: "low",
                                              label: "30+ dias",
                                              color:
                                                "bg-blue-100 text-blue-800 border-blue-200",
                                              days: `${Ce} dias`,
                                            }
                                          : {
                                              type: "recent",
                                              label: "Recente",
                                              color:
                                                "bg-green-100 text-green-800 border-green-200",
                                              days:
                                                Ce === 0
                                                  ? "Hoje"
                                                  : `${Ce} dias`,
                                            };
                                },
                                _e = (ye) => {
                                  const be = h
                                    .filter(
                                      (Ce) =>
                                        Ce.clientDocument === ye.document &&
                                        Ce.status === "realizada",
                                    )
                                    .sort(
                                      (Ce, qe) =>
                                        new Date(qe.createdAt).getTime() -
                                        new Date(Ce.createdAt).getTime(),
                                    )[0];
                                  return be
                                    ? {
                                        date:
                                          be.dataVisitaRealizada ||
                                          be.scheduledDate,
                                        result: be.notes || "Visita realizada",
                                      }
                                    : null;
                                };
                              return Object.entries(m).map(([ye, Ne]) =>
                                e.jsxs(
                                  "div",
                                  {
                                    className: "mb-4",
                                    children: [
                                      e.jsxs("div", {
                                        className:
                                          "flex items-center mb-3 pb-2 border-b border-gray-200",
                                        children: [
                                          e.jsx(Fe, {
                                            className:
                                              "h-4 w-4 text-gray-500 mr-2",
                                          }),
                                          e.jsx("h4", {
                                            className:
                                              "text-sm font-medium text-gray-700",
                                            children: ye,
                                          }),
                                          e.jsxs("span", {
                                            className:
                                              "ml-2 text-xs text-gray-500",
                                            children: [
                                              "(",
                                              Ne.length,
                                              " cliente",
                                              Ne.length !== 1 ? "s" : "",
                                              ")",
                                            ],
                                          }),
                                        ],
                                      }),
                                      e.jsx("div", {
                                        className: "grid grid-cols-1 gap-3",
                                        children: Ne.map((be) => {
                                          const Ce = ce(be),
                                            qe = _e(be),
                                            Ee = L.has(be.document);
                                          return e.jsxs(
                                            "div",
                                            {
                                              className: `relative bg-white rounded-lg border-2 transition-all duration-200 cursor-pointer hover:shadow-md ${Ee ? "border-purple-500 bg-purple-50 shadow-md ring-2 ring-purple-200" : "border-gray-200 hover:border-gray-300"}`,
                                              onClick: () => St(be.document),
                                              children: [
                                                e.jsx("div", {
                                                  className: `absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-medium border ${Ce.color}`,
                                                  children: Ce.label,
                                                }),
                                                e.jsx("div", {
                                                  className: "p-4",
                                                  children: e.jsxs("div", {
                                                    className:
                                                      "flex items-start",
                                                    children: [
                                                      e.jsx("div", {
                                                        className: "mr-4 mt-1",
                                                        children: e.jsx(
                                                          "input",
                                                          {
                                                            type: "checkbox",
                                                            checked: Ee,
                                                            onChange: () =>
                                                              St(be.document),
                                                            className:
                                                              "h-4 w-4 sm:h-6 sm:w-6 text-purple-600 focus:ring-2 focus:ring-purple-500 border-2 border-gray-300 rounded-md cursor-pointer",
                                                            onClick: (We) =>
                                                              We.stopPropagation(),
                                                          },
                                                        ),
                                                      }),
                                                      e.jsxs("div", {
                                                        className:
                                                          "flex-1 min-w-0",
                                                        children: [
                                                          e.jsx("div", {
                                                            className:
                                                              "flex items-start justify-between mb-2",
                                                            children: e.jsxs(
                                                              "div",
                                                              {
                                                                className:
                                                                  "min-w-0 flex-1",
                                                                children: [
                                                                  e.jsx("h3", {
                                                                    className:
                                                                      "font-semibold text-gray-900 text-lg truncate",
                                                                    children:
                                                                      be.client,
                                                                  }),
                                                                  e.jsx("p", {
                                                                    className:
                                                                      "text-sm text-gray-600",
                                                                    children:
                                                                      be.document,
                                                                  }),
                                                                ],
                                                              },
                                                            ),
                                                          }),
                                                          e.jsxs("div", {
                                                            className:
                                                              "text-sm text-gray-500 mb-3 flex items-center",
                                                            children: [
                                                              e.jsx(Fe, {
                                                                className:
                                                                  "h-4 w-4 mr-1 flex-shrink-0",
                                                              }),
                                                              e.jsxs("span", {
                                                                className:
                                                                  "truncate",
                                                                children: [
                                                                  be.address,
                                                                  ", ",
                                                                  be.number,
                                                                  " -",
                                                                  " ",
                                                                  be.city,
                                                                ],
                                                              }),
                                                            ],
                                                          }),
                                                          e.jsx("div", {
                                                            className:
                                                              "flex items-center justify-between mb-3",
                                                            children: e.jsxs(
                                                              "div",
                                                              {
                                                                className:
                                                                  "flex items-center space-x-4",
                                                                children: [
                                                                  e.jsxs(
                                                                    "div",
                                                                    {
                                                                      children:
                                                                        [
                                                                          e.jsx(
                                                                            "p",
                                                                            {
                                                                              className:
                                                                                "text-xs text-gray-500",
                                                                              children:
                                                                                "Valor Pendente",
                                                                            },
                                                                          ),
                                                                          e.jsx(
                                                                            "p",
                                                                            {
                                                                              className:
                                                                                "text-lg font-bold text-red-600",
                                                                              children:
                                                                                q(
                                                                                  be.pendingValue,
                                                                                ),
                                                                            },
                                                                          ),
                                                                        ],
                                                                    },
                                                                  ),
                                                                  e.jsxs(
                                                                    "div",
                                                                    {
                                                                      children:
                                                                        [
                                                                          e.jsx(
                                                                            "p",
                                                                            {
                                                                              className:
                                                                                "text-xs text-gray-500",
                                                                              children:
                                                                                "Total de Parcelas",
                                                                            },
                                                                          ),
                                                                          e.jsx(
                                                                            "p",
                                                                            {
                                                                              className:
                                                                                "text-sm font-medium text-gray-900",
                                                                              children:
                                                                                C.filter(
                                                                                  (
                                                                                    We,
                                                                                  ) =>
                                                                                    We.documento ===
                                                                                    be.document,
                                                                                )
                                                                                  .length,
                                                                            },
                                                                          ),
                                                                        ],
                                                                    },
                                                                  ),
                                                                ],
                                                              },
                                                            ),
                                                          }),
                                                          e.jsx("div", {
                                                            className:
                                                              "bg-gray-50 rounded-md p-2 mb-2",
                                                            children: qe
                                                              ? e.jsxs("div", {
                                                                  children: [
                                                                    e.jsxs(
                                                                      "div",
                                                                      {
                                                                        className:
                                                                          "flex items-center text-xs text-gray-600",
                                                                        children:
                                                                          [
                                                                            e.jsx(
                                                                              Ie,
                                                                              {
                                                                                className:
                                                                                  "h-3 w-3 mr-1",
                                                                              },
                                                                            ),
                                                                            e.jsx(
                                                                              "span",
                                                                              {
                                                                                className:
                                                                                  "font-medium",
                                                                                children:
                                                                                  "Última visita:",
                                                                              },
                                                                            ),
                                                                            e.jsx(
                                                                              "span",
                                                                              {
                                                                                className:
                                                                                  "ml-1",
                                                                                children:
                                                                                  nt(
                                                                                    qe.date,
                                                                                  ),
                                                                              },
                                                                            ),
                                                                          ],
                                                                      },
                                                                    ),
                                                                    e.jsx("p", {
                                                                      className:
                                                                        "text-xs text-gray-500 mt-1",
                                                                      children:
                                                                        qe.result,
                                                                    }),
                                                                  ],
                                                                })
                                                              : e.jsxs("div", {
                                                                  className:
                                                                    "flex items-center text-xs text-gray-500",
                                                                  children: [
                                                                    e.jsx(Ie, {
                                                                      className:
                                                                        "h-3 w-3 mr-1",
                                                                    }),
                                                                    e.jsx(
                                                                      "span",
                                                                      {
                                                                        children:
                                                                          "Nenhuma visita realizada",
                                                                      },
                                                                    ),
                                                                  ],
                                                                }),
                                                          }),
                                                          e.jsxs("div", {
                                                            className:
                                                              "flex items-center justify-between",
                                                            children: [
                                                              e.jsxs("div", {
                                                                className:
                                                                  "flex items-center space-x-2",
                                                                children: [
                                                                  Ce.type ===
                                                                    "critical" &&
                                                                    e.jsxs(
                                                                      "div",
                                                                      {
                                                                        className:
                                                                          "flex items-center text-xs text-red-600",
                                                                        children:
                                                                          [
                                                                            e.jsx(
                                                                              Ge,
                                                                              {
                                                                                className:
                                                                                  "h-3 w-3 mr-1",
                                                                              },
                                                                            ),
                                                                            e.jsx(
                                                                              "span",
                                                                              {
                                                                                children:
                                                                                  "Prioridade Máxima",
                                                                              },
                                                                            ),
                                                                          ],
                                                                      },
                                                                    ),
                                                                  Ce.type ===
                                                                    "high" &&
                                                                    e.jsxs(
                                                                      "div",
                                                                      {
                                                                        className:
                                                                          "flex items-center text-xs text-orange-600",
                                                                        children:
                                                                          [
                                                                            e.jsx(
                                                                              Ge,
                                                                              {
                                                                                className:
                                                                                  "h-3 w-3 mr-1",
                                                                              },
                                                                            ),
                                                                            e.jsx(
                                                                              "span",
                                                                              {
                                                                                children:
                                                                                  "Prioridade Alta",
                                                                              },
                                                                            ),
                                                                          ],
                                                                      },
                                                                    ),
                                                                  Ce.type ===
                                                                    "medium" &&
                                                                    e.jsxs(
                                                                      "div",
                                                                      {
                                                                        className:
                                                                          "flex items-center text-xs text-yellow-600",
                                                                        children:
                                                                          [
                                                                            e.jsx(
                                                                              Ie,
                                                                              {
                                                                                className:
                                                                                  "h-3 w-3 mr-1",
                                                                              },
                                                                            ),
                                                                            e.jsx(
                                                                              "span",
                                                                              {
                                                                                children:
                                                                                  "Atenção",
                                                                              },
                                                                            ),
                                                                          ],
                                                                      },
                                                                    ),
                                                                  e.jsxs(
                                                                    "div",
                                                                    {
                                                                      className:
                                                                        "flex items-center text-xs text-gray-600",
                                                                      children:
                                                                        [
                                                                          e.jsx(
                                                                            Ie,
                                                                            {
                                                                              className:
                                                                                "h-3 w-3 mr-1",
                                                                            },
                                                                          ),
                                                                          e.jsx(
                                                                            "span",
                                                                            {
                                                                              children:
                                                                                Ce.days,
                                                                            },
                                                                          ),
                                                                        ],
                                                                    },
                                                                  ),
                                                                ],
                                                              }),
                                                              Ee &&
                                                                e.jsxs("div", {
                                                                  className:
                                                                    "flex items-center text-purple-600 text-xs font-medium",
                                                                  children: [
                                                                    e.jsx(Le, {
                                                                      className:
                                                                        "h-4 w-4 mr-1",
                                                                    }),
                                                                    "Selecionado",
                                                                  ],
                                                                }),
                                                            ],
                                                          }),
                                                        ],
                                                      }),
                                                    ],
                                                  }),
                                                }),
                                              ],
                                            },
                                            be.document,
                                          );
                                        }),
                                      }),
                                    ],
                                  },
                                  ye,
                                ),
                              );
                            })(),
                          }),
                        ],
                      }),
                    Ye.length === 0 &&
                      V &&
                      V.type === "collector" &&
                      e.jsx("div", {
                        className:
                          "p-4 text-center text-gray-500 border border-gray-200 rounded-lg",
                        children: Rs
                          ? "Nenhum cliente encontrado com os filtros aplicados"
                          : xs > 0
                            ? "Todos os clientes com pendências já têm visitas agendadas"
                            : "Nenhum cliente com pendências disponível para agendamento",
                      }),
                    L.size > 0 &&
                      e.jsxs("div", {
                        className:
                          "bg-purple-50 border border-purple-200 rounded-lg p-3 lg:p-4",
                        children: [
                          e.jsxs("h3", {
                            className: "font-semibold text-gray-900 mb-2",
                            children: [
                              L.size,
                              " Cliente",
                              L.size !== 1 ? "s" : "",
                              " Selecionado",
                              L.size !== 1 ? "s" : "",
                            ],
                          }),
                          L.size > 0 &&
                            e.jsxs("div", {
                              className: "space-y-3",
                              children: [
                                e.jsx("div", {
                                  className:
                                    "bg-blue-50 border border-blue-200 rounded-lg p-3 mb-3",
                                  children: e.jsxs("div", {
                                    className:
                                      "flex items-center text-sm text-blue-800",
                                    children: [
                                      e.jsx(Vt, { className: "h-4 w-4 mr-2" }),
                                      e.jsx("span", {
                                        className: "font-medium",
                                        children: "Agendamento Individual:",
                                      }),
                                      e.jsx("span", {
                                        className: "ml-1",
                                        children:
                                          "Configure data e horário específicos para cada cliente",
                                      }),
                                    ],
                                  }),
                                }),
                                e.jsx("div", {
                                  className:
                                    "space-y-2 max-h-96 overflow-y-auto",
                                  children: qs().map((m) => {
                                    const ce = T.get(m.document) || {
                                      date: Q,
                                      time: A(),
                                    };
                                    return e.jsxs(
                                      "div",
                                      {
                                        className:
                                          "bg-white rounded-lg p-3 border border-gray-200",
                                        children: [
                                          e.jsxs("div", {
                                            className:
                                              "flex items-center justify-between mb-2",
                                            children: [
                                              e.jsxs("div", {
                                                children: [
                                                  e.jsx("span", {
                                                    className:
                                                      "font-medium text-gray-900",
                                                    children: m.client,
                                                  }),
                                                  e.jsxs("span", {
                                                    className:
                                                      "text-gray-500 ml-2",
                                                    children: [
                                                      "(",
                                                      m.document,
                                                      ")",
                                                    ],
                                                  }),
                                                ],
                                              }),
                                              e.jsx("div", {
                                                className:
                                                  "text-red-600 font-medium",
                                                children: q(m.pendingValue),
                                              }),
                                            ],
                                          }),
                                          e.jsxs("div", {
                                            className:
                                              "grid grid-cols-1 sm:grid-cols-2 gap-2",
                                            children: [
                                              e.jsxs("div", {
                                                children: [
                                                  e.jsx("label", {
                                                    className:
                                                      "block text-xs font-medium text-gray-600 mb-1",
                                                    children: "Data da Visita",
                                                  }),
                                                  e.jsxs("div", {
                                                    className: "relative",
                                                    children: [
                                                      e.jsx(Me, {
                                                        className:
                                                          "absolute left-2 top-1/2 transform -translate-y-1/2 h-3 w-3 text-gray-400",
                                                      }),
                                                      e.jsx("input", {
                                                        type: "date",
                                                        value: ce.date,
                                                        onChange: (_e) =>
                                                          Bs(
                                                            m.document,
                                                            "date",
                                                            _e.target.value,
                                                          ),
                                                        min: U(),
                                                        className:
                                                          "w-full pl-7 pr-2 py-1.5 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                                      }),
                                                    ],
                                                  }),
                                                ],
                                              }),
                                              e.jsxs("div", {
                                                children: [
                                                  e.jsx("label", {
                                                    className:
                                                      "block text-xs font-medium text-gray-600 mb-1",
                                                    children: "Horário",
                                                  }),
                                                  e.jsxs("div", {
                                                    className: "relative",
                                                    children: [
                                                      e.jsx(Ie, {
                                                        className:
                                                          "absolute left-2 top-1/2 transform -translate-y-1/2 h-3 w-3 text-gray-400",
                                                      }),
                                                      e.jsx("input", {
                                                        type: "time",
                                                        value: ce.time,
                                                        onFocus: (_e) => {
                                                          _e.target.dataset.previousValue =
                                                            _e.target.value;
                                                        },
                                                        onChange: (_e) => {
                                                          Bs(
                                                            m.document,
                                                            "time",
                                                            _e.target.value,
                                                          );
                                                        },
                                                        onBlur: (_e) => {
                                                          const ye =
                                                              _e.target.value,
                                                            Ne = ce.date,
                                                            be =
                                                              _e.target.dataset
                                                                .previousValue ||
                                                              ce.time;
                                                          if (Ne === U()) {
                                                            const Ce =
                                                                new Date(),
                                                              [qe, Ee] = ye
                                                                .split(":")
                                                                .map(Number),
                                                              We = new Date();
                                                            if (
                                                              (We.setHours(
                                                                qe,
                                                                Ee,
                                                                0,
                                                                0,
                                                              ),
                                                              We <= Ce)
                                                            ) {
                                                              ($e({
                                                                clientDocument:
                                                                  m.document,
                                                                selectedTime:
                                                                  ye,
                                                                suggestedTime:
                                                                  A(),
                                                                previousTime:
                                                                  be,
                                                              }),
                                                                ie(!0));
                                                              return;
                                                            }
                                                          }
                                                        },
                                                        className:
                                                          "w-full pl-7 pr-2 py-1.5 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 focus:border-purple-500",
                                                      }),
                                                    ],
                                                  }),
                                                ],
                                              }),
                                            ],
                                          }),
                                        ],
                                      },
                                      m.document,
                                    );
                                  }),
                                }),
                              ],
                            }),
                        ],
                      }),
                    e.jsxs("div", {
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Observações (opcional)",
                        }),
                        e.jsx("textarea", {
                          value: I,
                          onChange: (m) => v(m.target.value),
                          placeholder: "Adicione observações sobre a visita...",
                          rows: 3,
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                        }),
                      ],
                    }),
                    L.size > 0 &&
                      e.jsxs("div", {
                        className:
                          "bg-blue-50 border border-blue-200 rounded-lg p-4",
                        children: [
                          e.jsxs("h3", {
                            className:
                              "font-semibold text-gray-900 mb-2 flex items-center",
                            children: [
                              e.jsx(Me, { className: "h-4 w-4 mr-2" }),
                              "Resumo dos Agendamentos",
                            ],
                          }),
                          e.jsx("div", {
                            className: "space-y-2",
                            children: qs().map((m) => {
                              const ce = T.get(m.document) || {
                                date: Q,
                                time: ee,
                              };
                              return e.jsxs(
                                "div",
                                {
                                  className:
                                    "flex items-center justify-between text-sm bg-white rounded p-2",
                                  children: [
                                    e.jsxs("div", {
                                      children: [
                                        e.jsx("span", {
                                          className: "font-medium",
                                          children: m.client,
                                        }),
                                        e.jsxs("span", {
                                          className: "text-gray-500 ml-2",
                                          children: ["(", m.document, ")"],
                                        }),
                                      ],
                                    }),
                                    e.jsx("div", {
                                      className: "text-right",
                                      children: e.jsxs("div", {
                                        className: "font-medium text-blue-600",
                                        children: [
                                          nt(ce.date),
                                          " às ",
                                          ce.time,
                                        ],
                                      }),
                                    }),
                                  ],
                                },
                                m.document,
                              );
                            }),
                          }),
                        ],
                      }),
                    e.jsxs("div", {
                      className:
                        "flex flex-col sm:flex-row items-stretch sm:items-center justify-end space-y-3 sm:space-y-0 sm:space-x-4",
                      children: [
                        e.jsx("button", {
                          onClick: () => {
                            (W(new Set()),
                              p(new Map()),
                              v(""),
                              et(),
                              y(1),
                              J(1));
                          },
                          className:
                            "w-full sm:w-auto px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors",
                          children: "Limpar",
                        }),
                        e.jsxs("button", {
                          onClick: ea,
                          disabled: L.size === 0 || j,
                          className:
                            "w-full sm:w-auto px-6 py-2 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg hover:from-purple-700 hover:to-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-semibold flex items-center justify-center",
                          children: [
                            j
                              ? e.jsx("div", {
                                  className:
                                    "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2",
                                })
                              : e.jsx(Le, { className: "h-4 w-4 mr-2" }),
                            j
                              ? "Agendando..."
                              : L.size > 0
                                ? `Agendar ${L.size} Visita${L.size !== 1 ? "s" : ""}`
                                : "Agendar Visitas",
                          ],
                        }),
                      ],
                    }),
                  ],
                })
              : e.jsxs("div", {
                  className: "space-y-6",
                  children: [
                    e.jsxs("div", {
                      children: [
                        e.jsxs("div", {
                          className:
                            "flex flex-col sm:flex-row sm:items-center justify-between mb-4 space-y-2 sm:space-y-0",
                          children: [
                            e.jsxs("h3", {
                              className:
                                "text-base lg:text-lg font-semibold text-gray-900 flex items-center",
                              children: [
                                e.jsx(Vt, {
                                  className: "h-5 w-5 mr-2 text-purple-600",
                                }),
                                "Visitas de Hoje (",
                                vs.length,
                                ")",
                              ],
                            }),
                            vs.length > S &&
                              e.jsxs("div", {
                                className:
                                  "flex items-center justify-center sm:justify-start space-x-2",
                                children: [
                                  e.jsx("button", {
                                    onClick: () => y(Math.max(1, w - 1)),
                                    disabled: w === 1,
                                    className:
                                      "p-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50",
                                    children: e.jsx(ws, {
                                      className: "h-4 w-4",
                                    }),
                                  }),
                                  e.jsxs("span", {
                                    className: "text-sm text-gray-600",
                                    children: ["Página ", w, " de ", Xs],
                                  }),
                                  e.jsx("button", {
                                    onClick: () => y(Math.min(Xs, w + 1)),
                                    disabled: w === Xs,
                                    className:
                                      "p-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50",
                                    children: e.jsx(js, {
                                      className: "h-4 w-4",
                                    }),
                                  }),
                                ],
                              }),
                          ],
                        }),
                        vs.length === 0
                          ? e.jsxs("div", {
                              className:
                                "bg-blue-50 border border-blue-200 rounded-lg p-6 text-center",
                              children: [
                                e.jsx(Me, {
                                  className:
                                    "h-8 w-8 text-blue-400 mx-auto mb-2",
                                }),
                                e.jsx("p", {
                                  className: "text-blue-600 font-medium",
                                  children: "Nenhuma visita agendada para hoje",
                                }),
                                e.jsx("p", {
                                  className: "text-blue-500 text-sm",
                                  children: "Que tal agendar uma nova visita?",
                                }),
                              ],
                            })
                          : e.jsx("div", {
                              className: "space-y-3",
                              children: Xt.map((m) =>
                                e.jsx(
                                  "div",
                                  {
                                    className:
                                      "border-2 border-blue-300 bg-blue-50 rounded-lg p-3 lg:p-4 hover:shadow-md transition-shadow",
                                    children: e.jsxs("div", {
                                      className:
                                        "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                                      children: [
                                        e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex flex-wrap items-center gap-2 mb-2",
                                              children: [
                                                e.jsx("button", {
                                                  onClick: () => ot(m),
                                                  className:
                                                    "font-semibold text-blue-600 hover:text-blue-800 hover:underline",
                                                  children: m.clientName,
                                                }),
                                                e.jsx("span", {
                                                  className: `px-2 py-1 rounded-full text-xs ${Nt(m.status)}`,
                                                  children: rt(m.status),
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "text-sm text-blue-600 font-medium",
                                                  children:
                                                    m.scheduledTime || "00:00",
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "text-sm text-gray-600 space-y-1",
                                              children: [
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center",
                                                  children: [
                                                    e.jsx(Fe, {
                                                      className: "h-4 w-4 mr-2",
                                                    }),
                                                    m.clientAddress,
                                                  ],
                                                }),
                                                m.totalPendingValue &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "flex items-center",
                                                    children: [
                                                      e.jsx(Oe, {
                                                        className:
                                                          "h-4 w-4 mr-2",
                                                      }),
                                                      "Pendente:",
                                                      " ",
                                                      q(m.totalPendingValue),
                                                      m.overdueCount &&
                                                        m.overdueCount > 0 &&
                                                        e.jsxs("span", {
                                                          className:
                                                            "ml-2 text-red-600",
                                                          children: [
                                                            e.jsx(Ge, {
                                                              className:
                                                                "h-4 w-4 inline mr-1",
                                                            }),
                                                            m.overdueCount,
                                                            " ",
                                                            m.overdueCount === 1
                                                              ? "título"
                                                              : "títulos",
                                                            " ",
                                                            "em atraso",
                                                          ],
                                                        }),
                                                    ],
                                                  }),
                                                m.notes &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "text-gray-500 italic",
                                                    children: [
                                                      '"',
                                                      m.notes,
                                                      '"',
                                                    ],
                                                  }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        m.status === "agendada" &&
                                          e.jsxs("div", {
                                            className:
                                              "flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 lg:ml-4",
                                            children: [
                                              e.jsx("button", {
                                                onClick: () => tt(m),
                                                className:
                                                  "px-3 py-2 bg-green-100 text-green-700 rounded text-sm hover:bg-green-200 transition-colors flex items-center justify-center",
                                                children: "Realizada",
                                              }),
                                              e.jsx("button", {
                                                onClick: () => at(m),
                                                className:
                                                  "px-3 py-2 bg-orange-100 text-orange-700 rounded text-sm hover:bg-orange-200 transition-colors flex items-center justify-center",
                                                children: "Não Encontrado",
                                              }),
                                              e.jsxs("button", {
                                                onClick: () => lt(m),
                                                className:
                                                  "px-3 py-2 bg-purple-100 text-purple-700 rounded text-sm hover:bg-purple-200 transition-colors flex items-center justify-center",
                                                children: [
                                                  e.jsx(hs, {
                                                    className: "h-4 w-4 mr-1",
                                                  }),
                                                  "Reagendar",
                                                ],
                                              }),
                                              !m.cancellationRejectedBy &&
                                                e.jsx("button", {
                                                  onClick: () => wt(m),
                                                  className:
                                                    "px-3 py-2 bg-red-100 text-red-700 rounded text-sm hover:bg-red-200 transition-colors flex items-center justify-center",
                                                  children:
                                                    "Solicitar Cancelamento",
                                                }),
                                            ],
                                          }),
                                        m.status ===
                                          "cancelamento_solicitado" &&
                                          e.jsxs("div", {
                                            className:
                                              "lg:ml-4 text-sm text-yellow-700 bg-yellow-50 px-3 py-2 rounded-lg",
                                            children: [
                                              e.jsx("div", {
                                                className: "font-medium",
                                                children:
                                                  "Cancelamento Solicitado",
                                              }),
                                              e.jsx("div", {
                                                className: "text-xs mt-1",
                                                children:
                                                  "Aguardando aprovação do gerente",
                                              }),
                                              m.cancellationRequestReason &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 italic",
                                                  children: [
                                                    "Motivo: ",
                                                    m.cancellationRequestReason,
                                                  ],
                                                }),
                                            ],
                                          }),
                                        m.cancellationRejectedBy &&
                                          m.status === "agendada" &&
                                          e.jsxs("div", {
                                            className:
                                              "lg:ml-4 text-sm text-red-700 bg-red-50 border border-red-200 px-3 py-2 rounded-lg",
                                            children: [
                                              e.jsx("div", {
                                                className: "font-medium",
                                                children:
                                                  "Cancelamento Rejeitado pelo Gerente",
                                              }),
                                              e.jsx("div", {
                                                className: "text-xs mt-1",
                                                children:
                                                  "A visita permanece agendada",
                                              }),
                                              m.cancellationRejectionReason &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 italic",
                                                  children: [
                                                    "Motivo da rejeição:",
                                                    " ",
                                                    m.cancellationRejectionReason,
                                                  ],
                                                }),
                                              m.cancellationRejectedAt &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 text-gray-600",
                                                  children: [
                                                    "Rejeitado em:",
                                                    " ",
                                                    new Date(
                                                      m.cancellationRejectedAt,
                                                    ).toLocaleDateString(
                                                      "pt-BR",
                                                    ),
                                                    " ",
                                                    "às",
                                                    " ",
                                                    new Date(
                                                      m.cancellationRejectedAt,
                                                    ).toLocaleTimeString(
                                                      "pt-BR",
                                                      {
                                                        hour: "2-digit",
                                                        minute: "2-digit",
                                                      },
                                                    ),
                                                  ],
                                                }),
                                            ],
                                          }),
                                      ],
                                    }),
                                  },
                                  m.id,
                                ),
                              ),
                            }),
                      ],
                    }),
                    ys.length > 0 &&
                      e.jsxs("div", {
                        children: [
                          e.jsxs("h3", {
                            className:
                              "text-base lg:text-lg font-semibold text-gray-900 mb-4 flex items-center",
                            children: [
                              e.jsx(Me, {
                                className: "h-5 w-5 mr-2 text-gray-600",
                              }),
                              "Próximas Visitas (",
                              ys.length,
                              ")",
                            ],
                          }),
                          e.jsxs("div", {
                            className: "space-y-3",
                            children: [
                              ys.slice(0, 5).map((m) =>
                                e.jsx(
                                  "div",
                                  {
                                    className:
                                      "border border-gray-200 rounded-lg p-3 lg:p-4 hover:shadow-md transition-shadow",
                                    children: e.jsxs("div", {
                                      className:
                                        "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                                      children: [
                                        e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex flex-wrap items-center gap-2 mb-2",
                                              children: [
                                                e.jsx("button", {
                                                  onClick: () => ot(m),
                                                  className:
                                                    "font-semibold text-blue-600 hover:text-blue-800 hover:underline",
                                                  children: m.clientName,
                                                }),
                                                e.jsx("span", {
                                                  className: `px-2 py-1 rounded-full text-xs ${Nt(m.status)}`,
                                                  children: rt(m.status),
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "text-sm text-gray-600 space-y-1",
                                              children: [
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center",
                                                  children: [
                                                    e.jsx(Me, {
                                                      className: "h-4 w-4 mr-2",
                                                    }),
                                                    m.status === "realizada" &&
                                                    m.dataVisitaRealizada
                                                      ? `${Ts(m.dataVisitaRealizada)} (Realizada)`
                                                      : Ts(
                                                          m.scheduledDate,
                                                          m.scheduledTime,
                                                        ),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center",
                                                  children: [
                                                    e.jsx(Fe, {
                                                      className: "h-4 w-4 mr-2",
                                                    }),
                                                    m.clientAddress,
                                                  ],
                                                }),
                                                m.totalPendingValue &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "flex items-center",
                                                    children: [
                                                      e.jsx(Oe, {
                                                        className:
                                                          "h-4 w-4 mr-2",
                                                      }),
                                                      "Pendente:",
                                                      " ",
                                                      q(m.totalPendingValue),
                                                      m.overdueCount &&
                                                        m.overdueCount > 0 &&
                                                        e.jsxs("span", {
                                                          className:
                                                            "ml-2 text-red-600",
                                                          children: [
                                                            e.jsx(Ge, {
                                                              className:
                                                                "h-4 w-4 inline mr-1",
                                                            }),
                                                            m.overdueCount,
                                                            " ",
                                                            m.overdueCount === 1
                                                              ? "título"
                                                              : "títulos",
                                                            " ",
                                                            "em atraso",
                                                          ],
                                                        }),
                                                    ],
                                                  }),
                                                m.notes &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "text-gray-500 italic",
                                                    children: [
                                                      '"',
                                                      m.notes,
                                                      '"',
                                                    ],
                                                  }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        m.status === "agendada" &&
                                          e.jsxs("div", {
                                            className:
                                              "flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 lg:ml-4",
                                            children: [
                                              e.jsx("button", {
                                                onClick: () => tt(m),
                                                className:
                                                  "px-3 py-2 bg-green-100 text-green-700 rounded text-sm hover:bg-green-200 transition-colors flex items-center justify-center",
                                                children: "Realizada",
                                              }),
                                              e.jsx("button", {
                                                onClick: () => at(m),
                                                className:
                                                  "px-3 py-2 bg-orange-100 text-orange-700 rounded text-sm hover:bg-orange-200 transition-colors flex items-center justify-center",
                                                children: "Não Encontrado",
                                              }),
                                              e.jsxs("button", {
                                                onClick: () => lt(m),
                                                className:
                                                  "px-3 py-2 bg-purple-100 text-purple-700 rounded text-sm hover:bg-purple-200 transition-colors flex items-center justify-center",
                                                children: [
                                                  e.jsx(hs, {
                                                    className: "h-4 w-4 mr-1",
                                                  }),
                                                  "Reagendar",
                                                ],
                                              }),
                                              !m.cancellationRejectedBy &&
                                                e.jsx("button", {
                                                  onClick: () => wt(m),
                                                  className:
                                                    "px-3 py-2 bg-red-100 text-red-700 rounded text-sm hover:bg-red-200 transition-colors flex items-center justify-center",
                                                  children:
                                                    "Solicitar Cancelamento",
                                                }),
                                            ],
                                          }),
                                        m.status ===
                                          "cancelamento_solicitado" &&
                                          e.jsxs("div", {
                                            className:
                                              "lg:ml-4 text-sm text-yellow-700 bg-yellow-50 px-3 py-2 rounded-lg",
                                            children: [
                                              e.jsx("div", {
                                                className: "font-medium",
                                                children:
                                                  "Cancelamento Solicitado",
                                              }),
                                              e.jsx("div", {
                                                className: "text-xs mt-1",
                                                children:
                                                  "Aguardando aprovação do gerente",
                                              }),
                                              m.cancellationRequestReason &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 italic",
                                                  children: [
                                                    "Motivo: ",
                                                    m.cancellationRequestReason,
                                                  ],
                                                }),
                                            ],
                                          }),
                                        m.cancellationRejectedBy &&
                                          m.status === "agendada" &&
                                          e.jsxs("div", {
                                            className:
                                              "lg:ml-4 text-sm text-red-700 bg-red-50 border border-red-200 px-3 py-2 rounded-lg",
                                            children: [
                                              e.jsx("div", {
                                                className: "font-medium",
                                                children:
                                                  "Cancelamento Rejeitado pelo Gerente",
                                              }),
                                              e.jsx("div", {
                                                className: "text-xs mt-1",
                                                children:
                                                  "A visita permanece agendada",
                                              }),
                                              m.cancellationRejectionReason &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 italic",
                                                  children: [
                                                    "Motivo da rejeição:",
                                                    " ",
                                                    m.cancellationRejectionReason,
                                                  ],
                                                }),
                                              m.cancellationRejectedAt &&
                                                e.jsxs("div", {
                                                  className:
                                                    "text-xs mt-1 text-gray-600",
                                                  children: [
                                                    "Rejeitado em:",
                                                    " ",
                                                    new Date(
                                                      m.cancellationRejectedAt,
                                                    ).toLocaleDateString(
                                                      "pt-BR",
                                                    ),
                                                    " ",
                                                    "às",
                                                    " ",
                                                    new Date(
                                                      m.cancellationRejectedAt,
                                                    ).toLocaleTimeString(
                                                      "pt-BR",
                                                      {
                                                        hour: "2-digit",
                                                        minute: "2-digit",
                                                      },
                                                    ),
                                                  ],
                                                }),
                                            ],
                                          }),
                                      ],
                                    }),
                                  },
                                  m.id,
                                ),
                              ),
                              ys.length > 5 &&
                                e.jsx("div", {
                                  className: "text-center py-2",
                                  children: e.jsxs("span", {
                                    className: "text-sm text-gray-500",
                                    children: [
                                      "... e mais ",
                                      ys.length - 5,
                                      " visita",
                                      ys.length - 5 !== 1 ? "s" : "",
                                    ],
                                  }),
                                }),
                            ],
                          }),
                        ],
                      }),
                    ps.length > 0 &&
                      e.jsxs("div", {
                        children: [
                          e.jsxs("h3", {
                            className:
                              "text-base lg:text-lg font-semibold text-gray-900 mb-4 flex items-center",
                            children: [
                              e.jsx(Ge, {
                                className: "h-5 w-5 mr-2 text-red-600",
                              }),
                              "Visitas Atrasadas (",
                              ps.length,
                              ")",
                            ],
                          }),
                          e.jsxs("div", {
                            className: "space-y-3",
                            children: [
                              ps.slice(0, 5).map((m) =>
                                e.jsx(
                                  "div",
                                  {
                                    className:
                                      "border-2 border-red-300 bg-red-50 rounded-lg p-3 lg:p-4 hover:shadow-md transition-shadow",
                                    children: e.jsxs("div", {
                                      className:
                                        "flex flex-col lg:flex-row lg:items-start lg:justify-between space-y-3 lg:space-y-0",
                                      children: [
                                        e.jsxs("div", {
                                          className: "flex-1",
                                          children: [
                                            e.jsxs("div", {
                                              className:
                                                "flex flex-wrap items-center gap-2 mb-2",
                                              children: [
                                                e.jsx("button", {
                                                  onClick: () => ot(m),
                                                  className:
                                                    "font-semibold text-blue-600 hover:text-blue-800 hover:underline",
                                                  children: m.clientName,
                                                }),
                                                e.jsx("span", {
                                                  className:
                                                    "px-2 py-1 rounded-full text-xs bg-red-100 text-red-800",
                                                  children: "Atrasada",
                                                }),
                                              ],
                                            }),
                                            e.jsxs("div", {
                                              className:
                                                "text-sm text-gray-600 space-y-1",
                                              children: [
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center text-red-600 font-medium",
                                                  children: [
                                                    e.jsx(Me, {
                                                      className: "h-4 w-4 mr-2",
                                                    }),
                                                    Ts(
                                                      m.scheduledDate,
                                                      m.scheduledTime,
                                                    ),
                                                    (() => {
                                                      const ce = ua(
                                                        m.scheduledDate,
                                                      );
                                                      return ce > 0
                                                        ? e.jsxs("span", {
                                                            className: "ml-2",
                                                            children: [
                                                              "(",
                                                              ce,
                                                              " ",
                                                              ce === 1
                                                                ? "dia"
                                                                : "dias",
                                                              " de atraso)",
                                                            ],
                                                          })
                                                        : null;
                                                    })(),
                                                  ],
                                                }),
                                                e.jsxs("div", {
                                                  className:
                                                    "flex items-center",
                                                  children: [
                                                    e.jsx(Fe, {
                                                      className: "h-4 w-4 mr-2",
                                                    }),
                                                    m.clientAddress,
                                                  ],
                                                }),
                                                m.totalPendingValue &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "flex items-center",
                                                    children: [
                                                      e.jsx(Oe, {
                                                        className:
                                                          "h-4 w-4 mr-2",
                                                      }),
                                                      "Pendente:",
                                                      " ",
                                                      q(m.totalPendingValue),
                                                    ],
                                                  }),
                                                m.notes &&
                                                  e.jsxs("div", {
                                                    className:
                                                      "text-gray-500 italic",
                                                    children: [
                                                      '"',
                                                      m.notes,
                                                      '"',
                                                    ],
                                                  }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        e.jsxs("div", {
                                          className:
                                            "flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 lg:ml-4",
                                          children: [
                                            e.jsx("button", {
                                              onClick: () => tt(m),
                                              className:
                                                "px-3 py-2 bg-green-600 text-white rounded text-sm hover:bg-green-700 transition-colors flex items-center justify-center",
                                              children: "Marcar Realizada",
                                            }),
                                            e.jsx("button", {
                                              onClick: () => at(m),
                                              className:
                                                "px-3 py-2 bg-orange-600 text-white rounded text-sm hover:bg-orange-700 transition-colors flex items-center justify-center",
                                              children: "Não Encontrado",
                                            }),
                                            e.jsxs("button", {
                                              onClick: () => lt(m),
                                              className:
                                                "px-3 py-2 bg-purple-600 text-white rounded text-sm hover:bg-purple-700 transition-colors flex items-center justify-center",
                                              children: [
                                                e.jsx(hs, {
                                                  className: "h-4 w-4 mr-1",
                                                }),
                                                "Reagendar",
                                              ],
                                            }),
                                            e.jsx("button", {
                                              onClick: () =>
                                                st(m.id, "cancelada"),
                                              className:
                                                "px-3 py-2 bg-red-600 text-white rounded text-sm hover:bg-red-700 transition-colors flex items-center justify-center",
                                              children: "Cancelar",
                                            }),
                                          ],
                                        }),
                                      ],
                                    }),
                                  },
                                  m.id,
                                ),
                              ),
                              ps.length > 5 &&
                                e.jsx("div", {
                                  className: "text-center py-2",
                                  children: e.jsxs("span", {
                                    className:
                                      "text-sm text-red-600 font-medium",
                                    children: [
                                      "... e mais ",
                                      ps.length - 5,
                                      " visita",
                                      ps.length - 5 !== 1 ? "s" : "",
                                      " atrasada",
                                      ps.length - 5 !== 1 ? "s" : "",
                                    ],
                                  }),
                                }),
                            ],
                          }),
                        ],
                      }),
                    vs.length === 0 &&
                      ys.length === 0 &&
                      ps.length === 0 &&
                      e.jsxs("div", {
                        className: "text-center py-8",
                        children: [
                          e.jsx(Me, {
                            className: "h-12 w-12 text-gray-400 mx-auto mb-4",
                          }),
                          e.jsx("p", {
                            className: "text-gray-500 text-lg",
                            children: "Nenhuma visita agendada",
                          }),
                          e.jsx("p", {
                            className: "text-gray-400 text-sm mt-2",
                            children:
                              'Comece agendando uma nova visita na aba "Agendar Nova Visita"',
                          }),
                        ],
                      }),
                  ],
                }),
        }),
        we &&
          de &&
          e.jsx(Gt, { clientGroup: de, userType: "collector", onClose: ma }),
        he &&
          R &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsx("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: e.jsx("h3", {
                    className: "text-lg font-semibold text-gray-900",
                    children: "Solicitar Cancelamento de Visita",
                  }),
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4",
                  children: [
                    e.jsxs("div", {
                      className: "mb-4",
                      children: [
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Cliente:" }),
                            " ",
                            R.clientName,
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Data:" }),
                            " ",
                            Ts(R.scheduledDate, R.scheduledTime),
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "mb-4",
                      children: [
                        e.jsx("label", {
                          className:
                            "block text-sm font-medium text-gray-700 mb-2",
                          children: "Motivo do cancelamento *",
                        }),
                        e.jsx("textarea", {
                          value: pe,
                          onChange: (m) => fe(m.target.value),
                          placeholder:
                            "Descreva o motivo para solicitar o cancelamento desta visita...",
                          rows: 4,
                          className:
                            "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                          required: !0,
                        }),
                      ],
                    }),
                    e.jsx("div", {
                      className:
                        "bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4",
                      children: e.jsxs("div", {
                        className: "flex items-start",
                        children: [
                          e.jsx(Ge, {
                            className:
                              "h-5 w-5 text-yellow-600 mr-2 flex-shrink-0 mt-0.5",
                          }),
                          e.jsxs("div", {
                            className: "text-sm text-yellow-700",
                            children: [
                              e.jsx("strong", { children: "Atenção:" }),
                              " Esta solicitação será enviada para aprovação do gerente. A visita permanecerá agendada até que seja aprovada ou rejeitada.",
                            ],
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "px-4 lg:px-6 py-4 border-t border-gray-200 flex flex-col sm:flex-row gap-3",
                  children: [
                    e.jsx("button", {
                      onClick: ca,
                      className:
                        "flex-1 px-4 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors",
                      children: "Cancelar",
                    }),
                    e.jsx("button", {
                      onClick: ia,
                      disabled: !pe.trim(),
                      className:
                        "flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                      children: "Solicitar",
                    }),
                  ],
                }),
              ],
            }),
          }),
        X &&
          Se &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsx("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: e.jsxs("h3", {
                    className:
                      "text-lg font-semibold text-gray-900 flex items-center",
                    children: [
                      e.jsx(hs, { className: "h-5 w-5 mr-2 text-purple-600" }),
                      "Reagendar Visita",
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4",
                  children: [
                    e.jsxs("div", {
                      className: "mb-4",
                      children: [
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Cliente:" }),
                            " ",
                            Se.clientName,
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-2",
                          children: [
                            e.jsx("strong", { children: "Agendamento atual:" }),
                            " ",
                            Ts(Se.scheduledDate, Se.scheduledTime),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-sm text-gray-600 mb-4",
                          children: [
                            e.jsx("strong", { children: "Endereço:" }),
                            " ",
                            Se.clientAddress,
                          ],
                        }),
                      ],
                    }),
                    e.jsxs("div", {
                      className: "space-y-4",
                      children: [
                        e.jsxs("div", {
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-sm font-medium text-gray-700 mb-2",
                              children: "Nova Data *",
                            }),
                            e.jsxs("div", {
                              className: "relative",
                              children: [
                                e.jsx(Me, {
                                  className:
                                    "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                                }),
                                e.jsx("input", {
                                  type: "date",
                                  value: o,
                                  onChange: (m) => b(m.target.value),
                                  min: U(),
                                  className:
                                    "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                                  required: !0,
                                }),
                              ],
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          children: [
                            e.jsx("label", {
                              className:
                                "block text-sm font-medium text-gray-700 mb-2",
                              children: "Novo Horário *",
                            }),
                            e.jsxs("div", {
                              className: "relative",
                              children: [
                                e.jsx(Ie, {
                                  className:
                                    "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400",
                                }),
                                e.jsx("input", {
                                  type: "time",
                                  value: k,
                                  onChange: (m) => ue(m.target.value),
                                  className:
                                    "w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500",
                                  required: !0,
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsx("div", {
                      className:
                        "bg-blue-50 border border-blue-200 rounded-lg p-3 mt-4",
                      children: e.jsxs("div", {
                        className: "flex items-start",
                        children: [
                          e.jsx(Me, {
                            className:
                              "h-5 w-5 text-blue-600 mr-2 flex-shrink-0 mt-0.5",
                          }),
                          e.jsxs("div", {
                            className: "text-sm text-blue-700",
                            children: [
                              e.jsx("strong", { children: "Dica:" }),
                              " Certifique-se de escolher um horário que permita o deslocamento entre visitas.",
                            ],
                          }),
                        ],
                      }),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "px-4 lg:px-6 py-4 border-t border-gray-200 flex flex-col sm:flex-row gap-3",
                  children: [
                    e.jsx("button", {
                      onClick: Ct,
                      className:
                        "flex-1 px-4 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors",
                      children: "Cancelar",
                    }),
                    e.jsxs("button", {
                      onClick: da,
                      disabled: !o || !k,
                      className:
                        "flex-1 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center",
                      children: [
                        e.jsx(Le, { className: "h-4 w-4 mr-2" }),
                        "Reagendar",
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        P &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4",
            children: e.jsxs("div", {
              className:
                "bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-hidden shadow-2xl",
              children: [
                e.jsxs("div", {
                  className:
                    "bg-gradient-to-r from-orange-500 to-red-500 text-white px-6 py-4 flex items-center justify-between",
                  children: [
                    e.jsxs("div", {
                      className: "flex items-center",
                      children: [
                        e.jsx(Ge, { className: "h-6 w-6 text-white mr-3" }),
                        e.jsxs("div", {
                          children: [
                            e.jsx("h2", {
                              className: "text-xl font-bold text-white",
                              children: "Conflitos de Horário Detectados",
                            }),
                            e.jsx("p", {
                              className: "text-orange-100 text-sm",
                              children:
                                "Alguns clientes têm o mesmo horário agendado",
                            }),
                          ],
                        }),
                      ],
                    }),
                    e.jsx("button", {
                      onClick: ft,
                      className:
                        "p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors",
                      children: e.jsx(ze, { className: "h-5 w-5 text-white" }),
                    }),
                  ],
                }),
                e.jsx("div", {
                  className: "overflow-y-auto max-h-[calc(90vh-140px)]",
                  children: e.jsxs("div", {
                    className: "p-6",
                    children: [
                      e.jsxs("div", {
                        className: "mb-6",
                        children: [
                          e.jsxs("h3", {
                            className:
                              "text-lg font-semibold text-gray-900 mb-4 flex items-center",
                            children: [
                              e.jsx(Ie, {
                                className: "h-5 w-5 text-orange-600 mr-2",
                              }),
                              "Conflitos Encontrados",
                            ],
                          }),
                          e.jsx("div", {
                            className: "space-y-3",
                            children: Ae.conflicts.map((m, ce) =>
                              e.jsx(
                                "div",
                                {
                                  className:
                                    "bg-orange-50 border border-orange-200 rounded-lg p-4",
                                  children: e.jsxs("div", {
                                    className: "flex items-start",
                                    children: [
                                      e.jsx(Ge, {
                                        className:
                                          "h-5 w-5 text-orange-600 mr-3 mt-0.5 flex-shrink-0",
                                      }),
                                      e.jsx("div", {
                                        className: "text-sm text-orange-800",
                                        children: e.jsx("div", {
                                          className: "font-medium",
                                          children: m,
                                        }),
                                      }),
                                    ],
                                  }),
                                },
                                ce,
                              ),
                            ),
                          }),
                        ],
                      }),
                      e.jsxs("div", {
                        className: "bg-gray-50 rounded-lg p-4",
                        children: [
                          e.jsx("h4", {
                            className: "font-medium text-gray-900 mb-2",
                            children: "O que você gostaria de fazer?",
                          }),
                          e.jsxs("ul", {
                            className: "text-sm text-gray-600 space-y-1",
                            children: [
                              e.jsxs("li", {
                                children: [
                                  "• ",
                                  e.jsx("strong", { children: "Cancelar:" }),
                                  " Volte e ajuste os horários manualmente",
                                ],
                              }),
                              e.jsxs("li", {
                                children: [
                                  "• ",
                                  e.jsx("strong", { children: "Continuar:" }),
                                  " Agende mesmo com conflitos (não recomendado)",
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className:
                    "px-6 py-4 border-t border-gray-200 flex flex-col sm:flex-row gap-3",
                  children: [
                    e.jsx("button", {
                      onClick: ft,
                      className:
                        "flex-1 px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium",
                      children: "Cancelar e Ajustar",
                    }),
                    e.jsxs("button", {
                      onClick: ta,
                      disabled: j,
                      className:
                        "flex-1 px-6 py-2 bg-gradient-to-r from-orange-500 to-red-500 text-white rounded-lg hover:from-orange-600 hover:to-red-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-semibold flex items-center justify-center",
                      children: [
                        j
                          ? e.jsx("div", {
                              className:
                                "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2",
                            })
                          : e.jsx(Le, { className: "h-4 w-4 mr-2" }),
                        j ? "Agendando..." : "Continuar Mesmo Assim",
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        ke &&
          le &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: [
                    e.jsxs("h3", {
                      className:
                        "text-lg font-semibold text-gray-900 flex items-center",
                      children: [
                        e.jsx(Le, { className: "h-5 w-5 mr-2 text-green-600" }),
                        "Marcar Visita como Realizada",
                      ],
                    }),
                    e.jsxs("p", {
                      className: "text-sm text-gray-600 mt-1",
                      children: ["Cliente: ", le.clientName],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4",
                  children: [
                    e.jsx("p", {
                      className: "text-sm text-gray-700 mb-4",
                      children:
                        "Selecione uma observação sobre como foi a visita:",
                    }),
                    e.jsx("div", {
                      className:
                        "grid grid-cols-2 lg:grid-cols-2 gap-2 lg:gap-2",
                      children: [
                        "Visitado e o cliente pagou tudo.",
                        "Visitado, mas cliente pagou parcialmente",
                        "Visitado, mas cliente mudou de endereço",
                        "Visitado, mas cliente contestou a dívida",
                      ].map((m, ce) =>
                        e.jsx(
                          "button",
                          {
                            onClick: () => vt(m),
                            className:
                              "w-full text-left px-4 py-3 bg-gray-50 hover:bg-green-50 hover:border-green-200 border border-gray-200 rounded-lg transition-colors text-sm",
                            children: m,
                          },
                          ce,
                        ),
                      ),
                    }),
                    e.jsx("div", {
                      className: "mt-4",
                      children: e.jsx("button", {
                        onClick: () => vt(""),
                        className:
                          "w-full px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-sm",
                        children: "Marcar como realizada sem observação",
                      }),
                    }),
                  ],
                }),
                e.jsx("div", {
                  className: "px-4 lg:px-6 py-4 border-t border-gray-200",
                  children: e.jsx("button", {
                    onClick: () => {
                      (Te(!1), c(null));
                    },
                    className:
                      "w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors",
                    children: "Cancelar",
                  }),
                }),
              ],
            }),
          }),
        M &&
          a &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsx("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: e.jsxs("h3", {
                    className:
                      "text-lg font-semibold text-gray-900 flex items-center",
                    children: [
                      e.jsx(Ge, { className: "h-5 w-5 mr-2 text-orange-600" }),
                      'Confirmar "Não Encontrado"',
                    ],
                  }),
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4",
                  children: [
                    e.jsxs("p", {
                      className: "text-gray-700 mb-2",
                      children: [
                        e.jsx("strong", { children: "Cliente:" }),
                        " ",
                        a.clientName,
                      ],
                    }),
                    e.jsxs("p", {
                      className: "text-gray-700 mb-4",
                      children: [
                        e.jsx("strong", { children: "Endereço:" }),
                        " ",
                        a.clientAddress,
                      ],
                    }),
                    e.jsxs("p", {
                      className: "text-gray-700",
                      children: [
                        "Tem certeza de que deseja marcar esta visita como",
                        " ",
                        e.jsx("strong", { children: '"Não Encontrado"' }),
                        "?",
                      ],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className:
                    "px-4 lg:px-6 py-4 border-t border-gray-200 flex space-x-3",
                  children: [
                    e.jsx("button", {
                      onClick: () => {
                        (l(!1), f(null));
                      },
                      className:
                        "flex-1 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors",
                      children: "Cancelar",
                    }),
                    e.jsx("button", {
                      onClick: na,
                      className:
                        "flex-1 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors",
                      children: "Sim, Confirmar",
                    }),
                  ],
                }),
              ],
            }),
          }),
        n &&
          a &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: [
                    e.jsxs("h3", {
                      className:
                        "text-lg font-semibold text-gray-900 flex items-center",
                      children: [
                        e.jsx(Ge, {
                          className: "h-5 w-5 mr-2 text-orange-600",
                        }),
                        'Marcar como "Não Encontrado"',
                      ],
                    }),
                    e.jsxs("p", {
                      className: "text-sm text-gray-600 mt-1",
                      children: ["Cliente: ", a.clientName],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4",
                  children: [
                    e.jsx("p", {
                      className: "text-sm text-gray-700 mb-4",
                      children:
                        "Selecione o motivo de não ter encontrado o cliente:",
                    }),
                    e.jsx("div", {
                      className:
                        "grid grid-cols-2 lg:grid-cols-2 gap-2 lg:gap-2",
                      children: [
                        "Cliente não estava em casa",
                        "Cliente mudou de endereço",
                        "Cliente evitou o atendimento",
                        "Não foi possível localizar o endereço",
                      ].map((m, ce) =>
                        e.jsx(
                          "button",
                          {
                            onClick: () => yt(m),
                            className:
                              "w-full text-left px-4 py-3 bg-gray-50 hover:bg-orange-50 hover:border-orange-200 border border-gray-200 rounded-lg transition-colors text-sm",
                            children: m,
                          },
                          ce,
                        ),
                      ),
                    }),
                    e.jsx("div", {
                      className: "mt-4",
                      children: e.jsx("button", {
                        onClick: () => yt(""),
                        className:
                          "w-full px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors text-sm",
                        children: "Marcar como não encontrado sem observação",
                      }),
                    }),
                  ],
                }),
                e.jsx("div", {
                  className: "px-4 lg:px-6 py-4 border-t border-gray-200",
                  children: e.jsx("button", {
                    onClick: () => {
                      (d(!1), f(null));
                    },
                    className:
                      "w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors",
                    children: "Cancelar",
                  }),
                }),
              ],
            }),
          }),
        $ &&
          g &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsxs("div", {
              className: "bg-white rounded-xl shadow-xl max-w-md w-full mx-4",
              children: [
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-4 border-b border-gray-200",
                  children: [
                    e.jsxs("h3", {
                      className:
                        "text-lg font-semibold text-gray-900 flex items-center",
                      children: [
                        e.jsx(Oe, { className: "h-5 w-5 mr-2 text-green-600" }),
                        "Pagamento Realizado?",
                      ],
                    }),
                    e.jsxs("p", {
                      className: "text-sm text-gray-600 mt-1",
                      children: ["Cliente: ", g.clientName],
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "px-4 lg:px-6 py-6",
                  children: [
                    e.jsx("p", {
                      className: "text-gray-700 text-center mb-6",
                      children:
                        "O cliente fez algum pagamento durante esta visita?",
                    }),
                    e.jsxs("div", {
                      className: "flex space-x-3",
                      children: [
                        e.jsxs("button", {
                          onClick: la,
                          className:
                            "flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium flex items-center justify-center",
                          children: [
                            e.jsx(Le, { className: "h-4 w-4 mr-2" }),
                            "Sim, fez pagamento",
                          ],
                        }),
                        e.jsxs("button", {
                          onClick: oa,
                          className:
                            "flex-1 px-4 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors font-medium flex items-center justify-center",
                          children: [
                            e.jsx(ze, { className: "h-4 w-4 mr-2" }),
                            "Não fez pagamento",
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        me &&
          ve &&
          e.jsx("div", {
            className:
              "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50",
            children: e.jsx("div", {
              className: "bg-white rounded-lg shadow-xl max-w-md w-full",
              children: e.jsxs("div", {
                className: "p-6",
                children: [
                  e.jsxs("div", {
                    className: "flex items-center justify-between mb-4",
                    children: [
                      e.jsx("h3", {
                        className: "text-lg font-semibold text-gray-900",
                        children: "Horário Inválido",
                      }),
                      e.jsx("button", {
                        onClick: () => ie(!1),
                        className:
                          "text-gray-400 hover:text-gray-600 transition-colors",
                        children: e.jsx(ze, { size: 24 }),
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "mb-6",
                    children: [
                      e.jsxs("div", {
                        className: "flex items-center mb-3",
                        children: [
                          e.jsx(Ge, {
                            className: "w-5 h-5 text-amber-500 mr-2",
                          }),
                          e.jsx("p", {
                            className: "text-gray-700",
                            children:
                              "Não é possível agendar para um horário no passado.",
                          }),
                        ],
                      }),
                      e.jsxs("div", {
                        className: "bg-gray-50 rounded-lg p-4 mb-4",
                        children: [
                          e.jsxs("p", {
                            className: "text-sm text-gray-600 mb-2",
                            children: [
                              e.jsx("strong", {
                                children: "Horário selecionado:",
                              }),
                              " ",
                              ve.selectedTime,
                            ],
                          }),
                          e.jsxs("p", {
                            className: "text-sm text-gray-600",
                            children: [
                              e.jsx("strong", {
                                children: "Horário sugerido:",
                              }),
                              " ",
                              ve.suggestedTime,
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                  e.jsxs("div", {
                    className: "flex gap-3",
                    children: [
                      e.jsx("button", {
                        onClick: () => {
                          (Bs(ve.clientDocument, "time", ve.suggestedTime),
                            ie(!1),
                            $e(null));
                        },
                        className:
                          "flex-1 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition-colors",
                        children: "Usar Horário Sugerido",
                      }),
                      e.jsx("button", {
                        onClick: () => {
                          (ve.previousTime &&
                            Bs(ve.clientDocument, "time", ve.previousTime),
                            ie(!1),
                            $e(null));
                        },
                        className:
                          "flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors",
                        children: "Cancelar",
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        e.jsx(nr, { isOpen: Ue, onClose: () => He(!1), message: ns }),
      ],
    });
  },
  or = () => [
    { id: "overview", name: "Resumo", icon: As },
    { id: "collections", name: "Minha Carteira", icon: Ss },
    { id: "route", name: "Rota de Cobrança", icon: Fe },
    { id: "visits", name: "Visitas Agendadas", icon: Me },
  ],
  ir = ({ activeTab: s, onTabChange: t }) => {
    const { user: x } = ts(),
      {
        getCollectorCollections: h,
        getFilteredCollections: i,
        getClientGroups: D,
        getVisitsByCollector: E,
      } = Je(),
      [O, F] = r.useState(
        () => localStorage.getItem("collectorActiveTab") || "overview",
      ),
      C = s || O,
      V = (N) => {
        t ? t(N) : F(N);
      },
      [U, A] = r.useState({});
    r.useEffect(() => {
      s || localStorage.setItem("collectorActiveTab", O);
    }, [O, s]);
    const Q = h((x == null ? void 0 : x.id) || ""),
      ee = i(U, "collector", x == null ? void 0 : x.id),
      Y = D(x == null ? void 0 : x.id),
      G = E((x == null ? void 0 : x.id) || ""),
      L = new Map();
    (Q.forEach((N) => {
      const H = `${N.venda_n}-${N.documento}`;
      L.has(H) ||
        L.set(H, {
          totalValue: 0,
          receivedValue: 0,
          isPending: !1,
          clientDocument: N.documento || "",
        });
      const w = L.get(H);
      ((w.totalValue += N.valor_original),
        (w.receivedValue += N.valor_recebido));
    }),
      L.forEach((N) => {
        const H = N.totalValue - N.receivedValue;
        N.isPending = H > 0.01;
      }));
    const W = L.size,
      T = Array.from(L.values()).filter((N) => N.isPending).length,
      p = Array.from(L.values()).filter((N) => !N.isPending).length,
      I = new Set(
        Array.from(L.values())
          .filter((N) => N.isPending)
          .map((N) => N.clientDocument)
          .filter(Boolean),
      ).size,
      v = {
        total: W,
        clients: Y.length,
        pending: T,
        completed: p,
        clientsWithPending: I,
        visits: G.filter((N) => N.status === "agendada").length,
        totalAmount: Array.from(L.values()).reduce(
          (N, H) => N + H.totalValue,
          0,
        ),
        receivedAmount: Array.from(L.values()).reduce(
          (N, H) => N + H.receivedValue,
          0,
        ),
      },
      j = [
        { id: "overview", name: "Resumo", icon: As },
        { id: "collections", name: "Minha Carteira", icon: Ss },
        { id: "route", name: "Rota de Cobrança", icon: Fe },
        { id: "visits", name: "Visitas Agendadas", icon: Me },
      ],
      z = () => {
        switch (C) {
          case "overview":
            return e.jsxs("div", {
              className: "space-y-6",
              children: [
                e.jsxs("div", {
                  className: "grid grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-6",
                  children: [
                    e.jsx(ss, {
                      title: "Clientes",
                      value: v.clients.toString(),
                      icon: is,
                      iconColor: "bg-purple-500",
                      onClick: () => V("collections"),
                    }),
                    e.jsx(ss, {
                      title: "Vendas",
                      value: v.total.toString(),
                      icon: Ss,
                      iconColor: "bg-blue-500",
                    }),
                    e.jsx(ss, {
                      title: "Clientes com Pendências",
                      value: v.clientsWithPending.toString(),
                      change: `${v.pending} vendas pendentes`,
                      changeType: "negative",
                      icon: is,
                      iconColor: "bg-orange-500",
                    }),
                    e.jsx(ss, {
                      title: "Vendas Finalizadas",
                      value: v.completed.toString(),
                      change: `${v.total > 0 ? ((v.completed / v.total) * 100).toFixed(1) : 0}%`,
                      changeType: "positive",
                      icon: Le,
                      iconColor: "bg-green-500",
                    }),
                    e.jsx(ss, {
                      title: "Visitas",
                      value: v.visits.toString(),
                      icon: Me,
                      iconColor: "bg-orange-500",
                      onClick: () => V("visits"),
                    }),
                  ],
                }),
                e.jsxs("div", {
                  className: "bg-white rounded-xl shadow-sm p-4 lg:p-6",
                  children: [
                    e.jsx("h2", {
                      className: "text-lg font-semibold text-gray-900 mb-4",
                      children: "Resumo Financeiro",
                    }),
                    e.jsxs("div", {
                      className:
                        "grid grid-cols-1 sm:grid-cols-3 gap-4 lg:gap-6",
                      children: [
                        e.jsxs("div", {
                          className: "text-center p-4 bg-blue-50 rounded-lg",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-xl lg:text-2xl font-bold text-blue-600",
                              children: q(v.totalAmount),
                            }),
                            e.jsx("div", {
                              className: "text-sm text-gray-600",
                              children: "Valor Total",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-center p-4 bg-green-50 rounded-lg",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-xl lg:text-2xl font-bold text-green-600",
                              children: q(v.receivedAmount),
                            }),
                            e.jsx("div", {
                              className: "text-sm text-gray-600",
                              children: "Valor Recebido",
                            }),
                          ],
                        }),
                        e.jsxs("div", {
                          className: "text-center p-4 bg-red-50 rounded-lg",
                          children: [
                            e.jsx("div", {
                              className:
                                "text-xl lg:text-2xl font-bold text-red-600",
                              children: q(v.totalAmount - v.receivedAmount),
                            }),
                            e.jsx("div", {
                              className: "text-sm text-gray-600",
                              children: "Valor Pendente",
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            });
          case "collections":
            return e.jsxs("div", {
              children: [
                e.jsx(bt, {
                  filters: U,
                  onFilterChange: A,
                  userType: "collector",
                }),
                e.jsx(Jt, {
                  collections: ee,
                  userType: "collector",
                  showGrouped: !0,
                  collectorId: x == null ? void 0 : x.id,
                }),
              ],
            });
          case "route":
            return e.jsx(rr, { clientGroups: D(x == null ? void 0 : x.id) });
          case "visits":
            return e.jsx(lr, {});
          default:
            return null;
        }
      };
    return e.jsx("div", {
      className: "min-h-screen",
      children: e.jsxs("div", {
        className: "p-6 w-full md:max-w-[90%] mx-auto",
        children: [
          e.jsx("div", {
            className: "hidden lg:block mb-4 sm:mb-6 lg:mb-8",
            children: e.jsx("div", {
              className: "border-b border-gray-200",
              children: e.jsx("nav", {
                className: "flex space-x-1",
                children: j.map((N) => {
                  const H = N.icon;
                  return e.jsxs(
                    "button",
                    {
                      onClick: () => V(N.id),
                      className: `flex items-center py-3 px-4 border-b-2 font-medium text-sm whitespace-nowrap relative transition-colors ${C === N.id ? "border-blue-500 text-blue-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"}`,
                      children: [
                        e.jsx(H, { className: "h-4 w-4 mr-2 flex-shrink-0" }),
                        e.jsx("span", { children: N.name }),
                        N.id === "visits" &&
                          v.visits > 0 &&
                          e.jsx("span", {
                            className:
                              "absolute -top-1 -right-1 h-5 w-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center font-medium",
                            children: v.visits,
                          }),
                      ],
                    },
                    N.id,
                  );
                }),
              }),
            }),
          }),
          z(),
        ],
      }),
    });
  },
  Yt = ({ message: s = "Carregando..." }) => {
    const [t, x] = r.useState(s),
      [h, i] = r.useState(!1);
    return (
      r.useEffect(() => {
        const D = setTimeout(() => {
          i(!0);
        }, 50);
        return () => clearTimeout(D);
      }, []),
      r.useEffect(() => {
        const D = setTimeout(() => {
          x(s);
        }, 100);
        return () => clearTimeout(D);
      }, [s]),
      e.jsx("div", {
        className: `fixed inset-0 bg-white flex items-center justify-center z-50 transition-opacity duration-200 ${h ? "opacity-100" : "opacity-0"}`,
        children: e.jsxs("div", {
          className: "text-center",
          children: [
            e.jsxs("div", {
              className: "flex items-center justify-center space-x-2 mb-4",
              children: [
                e.jsx("div", {
                  className: "w-3 h-3 bg-gray-400 rounded-full animate-bounce",
                  style: { animationDelay: "0ms" },
                }),
                e.jsx("div", {
                  className: "w-3 h-3 bg-gray-400 rounded-full animate-bounce",
                  style: { animationDelay: "150ms" },
                }),
                e.jsx("div", {
                  className: "w-3 h-3 bg-gray-400 rounded-full animate-bounce",
                  style: { animationDelay: "300ms" },
                }),
              ],
            }),
            e.jsx("p", {
              className:
                "text-gray-600 text-sm font-medium transition-all duration-300 ease-in-out",
              children: t,
            }),
          ],
        }),
      })
    );
  },
  cr = () => {
    const { user: s, isLoading: t } = ts(),
      { loading: x, getPendingCancellationRequests: h } = Je(),
      { isLoading: i, loadingMessage: D } = Zs(),
      [E, O] = r.useState(
        () => localStorage.getItem("managerActiveTab") || "overview",
      ),
      [F, C] = r.useState(
        () => localStorage.getItem("collectorActiveTab") || "overview",
      ),
      [V, U] = r.useState({ show: !0, message: "Verificando sessão..." });
    if (
      (r.useEffect(() => {
        if (t) U({ show: !0, message: "Verificando sessão..." });
        else if (s && x) U({ show: !0, message: "Carregando dados..." });
        else if (i) U({ show: !0, message: D || "Carregando..." });
        else {
          const L = setTimeout(() => {
            U({ show: !1, message: "" });
          }, 100);
          return () => clearTimeout(L);
        }
      }, [t, s, x, i, D]),
      V.show)
    )
      return e.jsx(Yt, { message: V.message });
    if (!s) return e.jsx(Oa, {});
    const A = (L) => {
        (O(L), localStorage.setItem("managerActiveTab", L));
      },
      Q = (L) => {
        (C(L), localStorage.setItem("collectorActiveTab", L));
      },
      ee = (s == null ? void 0 : s.type) === "manager" ? h() : [],
      Y = (s == null ? void 0 : s.type) === "manager" ? Qt(ee.length) : [],
      G = (s == null ? void 0 : s.type) === "collector" ? or() : [];
    return e.jsxs("div", {
      className: "min-h-screen bg-slate-100",
      children: [
        e.jsx(Fa, {
          tabs: (s == null ? void 0 : s.type) === "manager" ? Y : G,
          activeTab: (s == null ? void 0 : s.type) === "manager" ? E : F,
          onTabChange: (s == null ? void 0 : s.type) === "manager" ? A : Q,
          pendingCancellations: ee.length,
        }),
        s.type === "manager"
          ? e.jsx(ar, { activeTab: E, onTabChange: A })
          : e.jsx(ir, { activeTab: F, onTabChange: Q }),
      ],
    });
  };
function dr() {
  return e.jsx(Bt, {
    children: e.jsx(Pa, {
      children: e.jsx(Ma, { children: e.jsx(Ia, { children: e.jsx(cr, {}) }) }),
    }),
  });
}
const mr = () => {
  const { isLoading: s, loadingMessage: t } = Zs();
  return e.jsxs(e.Fragment, {
    children: [s && e.jsx(Yt, { message: t }), e.jsx(dr, {})],
  });
};
Lt(document.getElementById("root")).render(
  e.jsx(r.StrictMode, { children: e.jsx(Bt, { children: e.jsx(mr, {}) }) }),
);
